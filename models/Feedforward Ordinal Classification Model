{"cells":[{"cell_type":"code","execution_count":null,"metadata":{"id":"j6i8o2WO29yC","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1651617999757,"user_tz":240,"elapsed":30118,"user":{"displayName":"Lakshyana","userId":"14846287915491486779"}},"outputId":"2d41f1b6-0095-468f-9fff-4b752dbc7b8d"},"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/gdrive\n"]}],"source":["from google.colab import drive\n","drive.mount('/content/gdrive', force_remount=True)"]},{"cell_type":"markdown","metadata":{"id":"kC36zSe2Xf_1"},"source":["### **Imports & Setups**\n","\n","\n","*   Import necessary packages\n","*   Setup file paths\n","*   Setup helper method to load the pickle files\n","\n","\n","\n","\n"]},{"cell_type":"code","source":["!pip install gensim==3.8.3\n","!pip install --force-reinstall --no-deps git+https://github.com/ck37/coral-ordinal/\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"rcIyFxaaw1os","executionInfo":{"status":"ok","timestamp":1651618011347,"user_tz":240,"elapsed":8083,"user":{"displayName":"Lakshyana","userId":"14846287915491486779"}},"outputId":"38a21a3d-3447-4132-87d8-aadc050cc7b3"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Collecting gensim==3.8.3\n","  Downloading gensim-3.8.3-cp37-cp37m-manylinux1_x86_64.whl (24.2 MB)\n","\u001b[K     |████████████████████████████████| 24.2 MB 1.1 MB/s \n","\u001b[?25hRequirement already satisfied: six>=1.5.0 in /usr/local/lib/python3.7/dist-packages (from gensim==3.8.3) (1.15.0)\n","Requirement already satisfied: numpy>=1.11.3 in /usr/local/lib/python3.7/dist-packages (from gensim==3.8.3) (1.21.6)\n","Requirement already satisfied: scipy>=0.18.1 in /usr/local/lib/python3.7/dist-packages (from gensim==3.8.3) (1.4.1)\n","Requirement already satisfied: smart-open>=1.8.1 in /usr/local/lib/python3.7/dist-packages (from gensim==3.8.3) (6.0.0)\n","Installing collected packages: gensim\n","  Attempting uninstall: gensim\n","    Found existing installation: gensim 3.6.0\n","    Uninstalling gensim-3.6.0:\n","      Successfully uninstalled gensim-3.6.0\n","Successfully installed gensim-3.8.3\n","Collecting git+https://github.com/ck37/coral-ordinal/\n","  Cloning https://github.com/ck37/coral-ordinal/ to /tmp/pip-req-build-3z4tvy7x\n","  Running command git clone -q https://github.com/ck37/coral-ordinal/ /tmp/pip-req-build-3z4tvy7x\n","Building wheels for collected packages: coral-ordinal\n","  Building wheel for coral-ordinal (setup.py) ... \u001b[?25l\u001b[?25hdone\n","  Created wheel for coral-ordinal: filename=coral_ordinal-0.1.9.dev0-py3-none-any.whl size=14610 sha256=d3eb6bd4a451bcb584fab985620c31dcc7088ca099ea0650804c5e3ace2c8697\n","  Stored in directory: /tmp/pip-ephem-wheel-cache-bwe8hdm7/wheels/01/d9/85/8a6675507c6e6f1f9b890510f5b5ebd1fac5220ba0fc0893d7\n","Successfully built coral-ordinal\n","Installing collected packages: coral-ordinal\n","Successfully installed coral-ordinal-0.1.9.dev0\n"]}]},{"cell_type":"code","execution_count":null,"metadata":{"id":"YhKxV5dY7aXn"},"outputs":[],"source":["import os\n","import re\n","import pickle\n","from datetime import datetime\n","import pandas as pd\n","import numpy as np\n","\n","#### Imports needed for embedding models\n","import gensim\n","from gensim.test.utils import common_texts\n","from gensim.models import Word2Vec\n","from gensim.models import Doc2Vec\n","\n","\n","### Neural network\n","import tensorflow as tf\n","import coral_ordinal as coral\n"]},{"cell_type":"markdown","source":["#### **Setup Filepaths**"],"metadata":{"id":"n1e8_1rBs4NM"}},{"cell_type":"markdown","source":["Note: To use the same paths without any updates, you can upload the unzipped folder to your goodle drive account "],"metadata":{"id":"lSuKJ3n88rFn"}},{"cell_type":"code","execution_count":null,"metadata":{"id":"a3-KGWKR4dlf"},"outputs":[],"source":["\n","#Path to the main directory\n","folder_path = '/content/gdrive/My Drive/FinalProject_LakshyanaKC_NhatPham/Data/'\n","\n","# Path to recipes datasets\n","recipes296k_path = folder_path + \"recipes296k_text_processed.pickle\"\n","fulldata_path    = folder_path + \"fulldata_processed.pickle\"\n","training_path    = folder_path + 'train_df.pickle'\n","testing_path     = folder_path + 'test_df.pickle'\n","\n","\n","#Path to save the embedding models\n","doc2vec_path = '/content/gdrive/My Drive/FinalProject_LakshyanaKC_NhatPham/Models/embeddings/doc2vec2_t.model'\n","\n","\n","## Classification model\n","classifier_path = '/content/gdrive/My Drive/FinalProject_LakshyanaKC_NhatPham/Models/ordinal_classifier_main'\n","\n","os.chdir(folder_path)"]},{"cell_type":"markdown","source":["**Display Options**"],"metadata":{"id":"_pHhk00kqdhz"}},{"cell_type":"code","execution_count":null,"metadata":{"id":"l4qioPh0ySkI"},"outputs":[],"source":["pd.set_option('display.max_colwidth', 2000)\n","pd.set_option('display.max_rows', 500)\n","pd.set_option('display.max_columns', 500)\n","pd.set_option('display.width', 1000)"]},{"cell_type":"markdown","source":["##### **Helper Methods**"],"metadata":{"id":"XuGj5lSnqOe0"}},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":7,"status":"ok","timestamp":1651618015132,"user":{"displayName":"Lakshyana","userId":"14846287915491486779"},"user_tz":240},"id":"MAbdPq0tciwd","outputId":"147e2ef9-c291-45e4-b14c-7beda2c82f0d"},"outputs":[{"output_type":"stream","name":"stdout","text":["[2022-05-03 22:46:55.029632]: Success!\n"]}],"source":["def now(phrase):\n","    print(f\"[{datetime.now()}]: {phrase}\")\n","    \n","now(\"Success!\")\n","def load(filename):\n","    now(\"starting\")\n","    if (os.path.exists(filename)):\n","        with open(filename, 'rb') as f:\n","            data = pickle.load(f)\n","        now(\"ending\")\n","        return data\n","    else:\n","        raise FileNotFoundError(f\"could not find {filename}\")\n","\n","\n","## saves as pickle object\n","def save(filename, obj):\n","    now(\"Starting\")\n","    with open(filename, 'wb') as f:\n","        pickle.dump(obj, f)\n","        print(f\"Saved obj Object to {filename}!\")\n","    now(\"Ending\")\n","    return ''"]},{"cell_type":"markdown","source":["### **Load Dataset**"],"metadata":{"id":"5R6MC7X-rFyI"}},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Vyv3VzkqcWyT","outputId":"5aa24f68-48ba-4d03-f85f-7f65e001f7ba","executionInfo":{"status":"ok","timestamp":1651618026917,"user_tz":240,"elapsed":10194,"user":{"displayName":"Lakshyana","userId":"14846287915491486779"}}},"outputs":[{"output_type":"stream","name":"stdout","text":["[2022-05-03 22:46:56.737831]: starting\n","[2022-05-03 22:47:00.603005]: ending\n","[2022-05-03 22:47:00.604105]: starting\n","[2022-05-03 22:47:01.955485]: ending\n","[2022-05-03 22:47:01.955748]: starting\n","[2022-05-03 22:47:06.773909]: ending\n"]}],"source":["## Load training data\n","training_data = load(training_path)\n","\n","## Load testing data\n","testing_data  = load(testing_path)\n","\n","### Load the full dataset\n","all_recipes = load(fulldata_path)\n","\n","# reset index of the dataframe to keep the indices ordered consecutively\n","all_recipes.reset_index(inplace=True, drop='index')\n","# now reset again to add the new indices as a separate column as well\n","all_recipes.reset_index(inplace=True)"]},{"cell_type":"markdown","source":["#### **Prepare Data for Training**"],"metadata":{"id":"-IOMBxhsWlWk"}},{"cell_type":"code","execution_count":null,"metadata":{"id":"8Ao1e-04MJ4i","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1651618028961,"user_tz":240,"elapsed":2047,"user":{"displayName":"Lakshyana","userId":"14846287915491486779"}},"outputId":"214608ed-5475-4428-e938-cf53c467f3e3"},"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:18: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:19: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:24: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:25: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:30: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:31: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n"]}],"source":["### training data with the document id\n","training_data = training_data.merge(all_recipes[['RecipeId','index']], how='inner', left_on='RecipeId', right_on='RecipeId')\n","\n","### testing data with the document id\n","testing_data = testing_data.merge(all_recipes[['RecipeId','index']], how='inner', left_on='RecipeId', right_on='RecipeId')\n","\n","### Merge the list to text\n","def merge_list(input_list):\n","  return \" \".join(input_list)\n","  \n","# Full dataset\n","data = all_recipes\n","text_feature = data[[\"RecipeId\",\"Name\",\"RecipeCategory\",'RatingId','RecipeIngredientParts','RecipeInstructions']]\n","text_feature.reset_index(inplace=True, drop='index')\n","text_feature.reset_index(inplace=True)\n","\n","\n","text_feature['RecipeIngredientParts'] = text_feature['RecipeIngredientParts'].apply(merge_list)\n","text_feature['Recipe'] = text_feature['RecipeIngredientParts'].astype(str) + \" \"+ text_feature['RecipeInstructions']\n","\n","# Training data`\n","data = training_data\n","training_data = data[[\"index\",\"RecipeId\",\"Name\",\"RecipeCategory\",'RatingId','RecipeIngredientParts','RecipeInstructions']]\n","training_data['RecipeIngredientParts'] = training_data['RecipeIngredientParts'].apply(merge_list)\n","training_data['Recipe'] = training_data['RecipeIngredientParts'].astype(str) + \" \"+ training_data['RecipeInstructions']\n","\n","# Testing data\n","data = testing_data\n","testing_data = data[[\"index\",\"RecipeId\",\"Name\",\"RecipeCategory\",'RatingId','RecipeIngredientParts','RecipeInstructions']]\n","testing_data['RecipeIngredientParts'] = testing_data['RecipeIngredientParts'].apply(merge_list)\n","testing_data['Recipe'] = testing_data['RecipeIngredientParts'].astype(str) + \" \"+ testing_data['RecipeInstructions']"]},{"cell_type":"markdown","source":["#### **Understanding the dataset**"],"metadata":{"id":"na2otCwqvaw_"}},{"cell_type":"code","source":["print(len(text_feature))\n","text_feature.head(1)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":264},"id":"R4FVTvQDbd3r","executionInfo":{"status":"ok","timestamp":1651546442606,"user_tz":240,"elapsed":21,"user":{"displayName":"Lakshyana","userId":"14846287915491486779"}},"outputId":"c9f2bea5-bb7d-4abe-f412-665d4dc871bc"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["269294\n"]},{"output_type":"execute_result","data":{"text/plain":["   index  RecipeId                               Name   RecipeCategory RatingId                                    RecipeIngredientPartsecipeInstructions  \\\n","0      0        38  Low-Fat Berry Blue Frozen Dessert  Frozen Desserts        4  blueberries granulated-sugar vanilla-yogurt lemon-juice  <s> toss 2 cup berry sugar </s> <s> let stand 45 minute stir occasionally </s> <s> transfer berry sugar mixture food processor </s> <s> add yogurt process smooth </s> <s> strain fine sieve </s> <s> pour bake pan transfer ice cream maker process accord manufacturer direction </s> <s> freeze uncover edge solid centre soft </s> <s> transfer processor blend smooth </s> <s> return pan freeze edge solid </s> <s> transfer processor blend smooth </s> <s> fold remain 2 cup blueberry </s> <s> pour plastic mold freeze overnight </s> <s> let soften slightly serve </s>    \n","\necipe  \n","0  blueberries granulated-sugar vanilla-yogurt lemon-juice <s> toss 2 cup berry sugar </s> <s> let stand 45 minute stir occasionally </s> <s> transfer berry sugar mixture food processor </s> <s> add yogurt process smooth </s> <s> strain fine sieve </s> <s> pour bake pan transfer ice cream maker process accord manufacturer direction </s> <s> freeze uncover edge solid centre soft </s> <s> transfer processor blend smooth </s> <s> return pan freeze edge solid </s> <s> transfer processor blend smooth </s> <s> fold remain 2 cup blueberry </s> <s> pour plastic mold freeze overnight </s> <s> let soften slightly serve </s>   "],"text/html":["\n","  <div id=\"df-7eaa5ca5-1398-4c99-8c55-245821f6198a\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>index</th>\n","      <th>RecipeId</th>\n","      <th>Name</th>\n","      <th>RecipeCategory</th>\n","      <th>RatingId</th>\n","      <th>RecipeIngredientParts</th>\n","      <th>RecipeInstructions</th>\n","      <th>Recipe</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>38</td>\n","      <td>Low-Fat Berry Blue Frozen Dessert</td>\n","      <td>Frozen Desserts</td>\n","      <td>4</td>\n","      <td>blueberries granulated-sugar vanilla-yogurt lemon-juice</td>\n","      <td>&lt;s&gt; toss 2 cup berry sugar &lt;/s&gt; &lt;s&gt; let stand 45 minute stir occasionally &lt;/s&gt; &lt;s&gt; transfer berry sugar mixture food processor &lt;/s&gt; &lt;s&gt; add yogurt process smooth &lt;/s&gt; &lt;s&gt; strain fine sieve &lt;/s&gt; &lt;s&gt; pour bake pan transfer ice cream maker process accord manufacturer direction &lt;/s&gt; &lt;s&gt; freeze uncover edge solid centre soft &lt;/s&gt; &lt;s&gt; transfer processor blend smooth &lt;/s&gt; &lt;s&gt; return pan freeze edge solid &lt;/s&gt; &lt;s&gt; transfer processor blend smooth &lt;/s&gt; &lt;s&gt; fold remain 2 cup blueberry &lt;/s&gt; &lt;s&gt; pour plastic mold freeze overnight &lt;/s&gt; &lt;s&gt; let soften slightly serve &lt;/s&gt;</td>\n","      <td>blueberries granulated-sugar vanilla-yogurt lemon-juice &lt;s&gt; toss 2 cup berry sugar &lt;/s&gt; &lt;s&gt; let stand 45 minute stir occasionally &lt;/s&gt; &lt;s&gt; transfer berry sugar mixture food processor &lt;/s&gt; &lt;s&gt; add yogurt process smooth &lt;/s&gt; &lt;s&gt; strain fine sieve &lt;/s&gt; &lt;s&gt; pour bake pan transfer ice cream maker process accord manufacturer direction &lt;/s&gt; &lt;s&gt; freeze uncover edge solid centre soft &lt;/s&gt; &lt;s&gt; transfer processor blend smooth &lt;/s&gt; &lt;s&gt; return pan freeze edge solid &lt;/s&gt; &lt;s&gt; transfer processor blend smooth &lt;/s&gt; &lt;s&gt; fold remain 2 cup blueberry &lt;/s&gt; &lt;s&gt; pour plastic mold freeze overnight &lt;/s&gt; &lt;s&gt; let soften slightly serve &lt;/s&gt;</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7eaa5ca5-1398-4c99-8c55-245821f6198a')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-7eaa5ca5-1398-4c99-8c55-245821f6198a button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-7eaa5ca5-1398-4c99-8c55-245821f6198a');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":92}]},{"cell_type":"code","source":["print(len(training_data))\n","training_data.head(1)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":212},"id":"F-sntYSocL-S","executionInfo":{"status":"ok","timestamp":1651546442606,"user_tz":240,"elapsed":15,"user":{"displayName":"Lakshyana","userId":"14846287915491486779"}},"outputId":"301b4f1e-54bb-4e1d-9e21-932104ca857a"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["201970\n"]},{"output_type":"execute_result","data":{"text/plain":["    index  RecipeId                         Name RecipeCategory RatingId                                 RecipeIngredientParts                                                                                                                                                                                                                                                                                                         RecipeInstructions                                                                                                                                                                                                                                                                                                                                                                          Recipe\n","0  235422    406189  Dulce De Leche Rice Pudding        Dessert        5  milk cinnamon-sticks ground-cinnamon long-grain-rice  <s> heat milk cinnamon stick large saucepan medium high heat reach boil remove cinnamon stick </s> <s> reduce heat medium low add rice </s> <s> cook stir frequently 15 20 minute </s> <s> add dulce de leche cook stir frequently 15 20 minute rice tender sauce thicken </s> <s> garnish slice fresh fruit desire </s>   milk cinnamon-sticks ground-cinnamon long-grain-rice <s> heat milk cinnamon stick large saucepan medium high heat reach boil remove cinnamon stick </s> <s> reduce heat medium low add rice </s> <s> cook stir frequently 15 20 minute </s> <s> add dulce de leche cook stir frequently 15 20 minute rice tender sauce thicken </s> <s> garnish slice fresh fruit desire </s> "],"text/html":["\n","  <div id=\"df-5444df9f-dc05-4690-951e-4bfbe6238975\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>index</th>\n","      <th>RecipeId</th>\n","      <th>Name</th>\n","      <th>RecipeCategory</th>\n","      <th>RatingId</th>\n","      <th>RecipeIngredientParts</th>\n","      <th>RecipeInstructions</th>\n","      <th>Recipe</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>235422</td>\n","      <td>406189</td>\n","      <td>Dulce De Leche Rice Pudding</td>\n","      <td>Dessert</td>\n","      <td>5</td>\n","      <td>milk cinnamon-sticks ground-cinnamon long-grain-rice</td>\n","      <td>&lt;s&gt; heat milk cinnamon stick large saucepan medium high heat reach boil remove cinnamon stick &lt;/s&gt; &lt;s&gt; reduce heat medium low add rice &lt;/s&gt; &lt;s&gt; cook stir frequently 15 20 minute &lt;/s&gt; &lt;s&gt; add dulce de leche cook stir frequently 15 20 minute rice tender sauce thicken &lt;/s&gt; &lt;s&gt; garnish slice fresh fruit desire &lt;/s&gt;</td>\n","      <td>milk cinnamon-sticks ground-cinnamon long-grain-rice &lt;s&gt; heat milk cinnamon stick large saucepan medium high heat reach boil remove cinnamon stick &lt;/s&gt; &lt;s&gt; reduce heat medium low add rice &lt;/s&gt; &lt;s&gt; cook stir frequently 15 20 minute &lt;/s&gt; &lt;s&gt; add dulce de leche cook stir frequently 15 20 minute rice tender sauce thicken &lt;/s&gt; &lt;s&gt; garnish slice fresh fruit desire &lt;/s&gt;</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-5444df9f-dc05-4690-951e-4bfbe6238975')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-5444df9f-dc05-4690-951e-4bfbe6238975 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-5444df9f-dc05-4690-951e-4bfbe6238975');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":93}]},{"cell_type":"code","source":["print(len(testing_data))\n","testing_data.head(1)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":159},"id":"HS7LKBXScPmH","executionInfo":{"status":"ok","timestamp":1651546442607,"user_tz":240,"elapsed":12,"user":{"displayName":"Lakshyana","userId":"14846287915491486779"}},"outputId":"3020f2a0-18e4-418c-a83d-437c0816b3de"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["67324\n"]},{"output_type":"execute_result","data":{"text/plain":["   index  RecipeId                          Name RecipeCategory RatingId                                                  RecipeIngredientParts                                                                    RecipeInstructions                                                                                                                                                      Recipe\n","0  44736     62218  Tasty Twist on Chicken Salad   Lunch/Snacks        5  boneless-skinless-chicken-breast celery jicama green-onion mayonnaise  <s> add ingredient bowl stir well </s> <s> enjoy like mine straight bowl bread </s>   boneless-skinless-chicken-breast celery jicama green-onion mayonnaise <s> add ingredient bowl stir well </s> <s> enjoy like mine straight bowl bread </s> "],"text/html":["\n","  <div id=\"df-2fd22891-94f2-4f22-abcd-cfd4a420a2a4\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>index</th>\n","      <th>RecipeId</th>\n","      <th>Name</th>\n","      <th>RecipeCategory</th>\n","      <th>RatingId</th>\n","      <th>RecipeIngredientParts</th>\n","      <th>RecipeInstructions</th>\n","      <th>Recipe</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>44736</td>\n","      <td>62218</td>\n","      <td>Tasty Twist on Chicken Salad</td>\n","      <td>Lunch/Snacks</td>\n","      <td>5</td>\n","      <td>boneless-skinless-chicken-breast celery jicama green-onion mayonnaise</td>\n","      <td>&lt;s&gt; add ingredient bowl stir well &lt;/s&gt; &lt;s&gt; enjoy like mine straight bowl bread &lt;/s&gt;</td>\n","      <td>boneless-skinless-chicken-breast celery jicama green-onion mayonnaise &lt;s&gt; add ingredient bowl stir well &lt;/s&gt; &lt;s&gt; enjoy like mine straight bowl bread &lt;/s&gt;</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-2fd22891-94f2-4f22-abcd-cfd4a420a2a4')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-2fd22891-94f2-4f22-abcd-cfd4a420a2a4 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-2fd22891-94f2-4f22-abcd-cfd4a420a2a4');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":94}]},{"cell_type":"markdown","source":["### **Load the saved Doc2Vec Embedding Model**\n","\n","*   Load the pre-trained doc2vec model trained on the recipe dataset\n","*   Test Similar Recipes\n","*   Convert the model and prepare meta-data for visualization in tensorflow embedding projector\n","\n"],"metadata":{"id":"peKirhuuzi5p"}},{"cell_type":"code","source":["###### Model 1\n","from gensim.models.doc2vec import Doc2Vec\n","\n","# doc2vec_path = '/content/gdrive/My Drive/Colab Notebooks/CS6120NLP_FinalProject/Models/archive/doc2vec2_t.model'\n","doc2vec_model   = Doc2Vec.load(doc2vec_path)\n"],"metadata":{"id":"4goYjE1pzh-0"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["doc2vec_model.docvecs[0]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"NGYi7DxERFAd","executionInfo":{"status":"ok","timestamp":1651618032688,"user_tz":240,"elapsed":6,"user":{"displayName":"Lakshyana","userId":"14846287915491486779"}},"outputId":"2e6b31c9-86c8-46da-eaed-92964f34efcf"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([-0.67104775,  0.28307813,  0.737946  ,  0.3985006 ,  0.49221504,\n","       -0.8778497 , -0.28440645,  0.61967134, -1.2615206 , -0.49930638,\n","        0.5837085 ,  0.1175489 ,  0.06379298, -0.22750738,  0.17585632,\n","        0.47683293, -0.49880403, -1.0964055 , -0.27218783, -0.5743127 ,\n","       -1.4270345 , -0.5266007 , -0.0739331 , -0.9465427 ,  0.05609548,\n","        0.8913738 ,  0.28346667,  0.9714314 ,  0.43279567, -0.55803007,\n","       -0.9037891 , -0.4056593 , -0.1922238 , -0.2740505 , -0.9092181 ,\n","       -0.8722193 ,  0.3717816 ,  1.6154871 ,  0.7916882 , -1.0482035 ,\n","       -0.23578274,  0.9014744 ,  0.14754438, -0.6919935 ,  1.1490105 ,\n","       -0.3776072 ,  0.09313972, -0.31556588, -0.67811465,  1.9491652 ],\n","      dtype=float32)"]},"metadata":{},"execution_count":10}]},{"cell_type":"markdown","source":["#### **Find similar documents**"],"metadata":{"id":"42fEhGO0V2Kc"}},{"cell_type":"code","source":["# doc2vec model \n","\n","## try any index of the recipe\n","index = 0\n","example = text_feature['RecipeInstructions'][index].split()\n","\n","print(example)\n","inferred_vector1 = doc2vec_model.infer_vector(example)\n","sims1  = doc2vec_model.docvecs.most_similar([inferred_vector1])\n","\n","# print(inferred_vector)\n","print(sims1)\n","\n","print(\"\\nDocument\")\n","print(example)\n","display(text_feature.iloc[[index]])\n","# print(\"keywords\",text_feature['Keywords'][2])\n","\n","\n","sims1\n","print(\"\\nSimilar Documents\")\n","for i in range(len(sims1)):\n","  print('index: ', sims1[i][0])\n","  # print(\"\\nKeywords\", text_feature['Keywords'][sims1[i][0]])\n","  print(\"Similarity: \", sims1[i][1]) #d[sims1[i][0]]\n","  # print(sims1[i][0])\n","  print(\"Recipe: \")\n","  display(text_feature.iloc[[sims1[i][0]]])\n","\n","## Doc 1 seems most similar to doc ..?\n","# print(' '.join(data[sims2[0][0]])+'\\n')"],"metadata":{"id":"ZAQB7yG6y7E5","colab":{"base_uri":"https://localhost:8080/","height":1000},"executionInfo":{"status":"ok","timestamp":1651618034619,"user_tz":240,"elapsed":710,"user":{"displayName":"Lakshyana","userId":"14846287915491486779"}},"outputId":"f9940878-5728-4f63-a0b8-3933f41f90cf"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["['<s>', 'toss', '2', 'cup', 'berry', 'sugar', '</s>', '<s>', 'let', 'stand', '45', 'minute', 'stir', 'occasionally', '</s>', '<s>', 'transfer', 'berry', 'sugar', 'mixture', 'food', 'processor', '</s>', '<s>', 'add', 'yogurt', 'process', 'smooth', '</s>', '<s>', 'strain', 'fine', 'sieve', '</s>', '<s>', 'pour', 'bake', 'pan', 'transfer', 'ice', 'cream', 'maker', 'process', 'accord', 'manufacturer', 'direction', '</s>', '<s>', 'freeze', 'uncover', 'edge', 'solid', 'centre', 'soft', '</s>', '<s>', 'transfer', 'processor', 'blend', 'smooth', '</s>', '<s>', 'return', 'pan', 'freeze', 'edge', 'solid', '</s>', '<s>', 'transfer', 'processor', 'blend', 'smooth', '</s>', '<s>', 'fold', 'remain', '2', 'cup', 'blueberry', '</s>', '<s>', 'pour', 'plastic', 'mold', 'freeze', 'overnight', '</s>', '<s>', 'let', 'soften', 'slightly', 'serve', '</s>']\n","[(0, 0.9658677577972412), (22543, 0.6774750351905823), (215988, 0.6744435429573059), (22494, 0.673481285572052), (153999, 0.6697591543197632), (255976, 0.6549301743507385), (253521, 0.6360390782356262), (229364, 0.6349404454231262), (26358, 0.6339403390884399), (246777, 0.6321957111358643)]\n","\n","Document\n","['<s>', 'toss', '2', 'cup', 'berry', 'sugar', '</s>', '<s>', 'let', 'stand', '45', 'minute', 'stir', 'occasionally', '</s>', '<s>', 'transfer', 'berry', 'sugar', 'mixture', 'food', 'processor', '</s>', '<s>', 'add', 'yogurt', 'process', 'smooth', '</s>', '<s>', 'strain', 'fine', 'sieve', '</s>', '<s>', 'pour', 'bake', 'pan', 'transfer', 'ice', 'cream', 'maker', 'process', 'accord', 'manufacturer', 'direction', '</s>', '<s>', 'freeze', 'uncover', 'edge', 'solid', 'centre', 'soft', '</s>', '<s>', 'transfer', 'processor', 'blend', 'smooth', '</s>', '<s>', 'return', 'pan', 'freeze', 'edge', 'solid', '</s>', '<s>', 'transfer', 'processor', 'blend', 'smooth', '</s>', '<s>', 'fold', 'remain', '2', 'cup', 'blueberry', '</s>', '<s>', 'pour', 'plastic', 'mold', 'freeze', 'overnight', '</s>', '<s>', 'let', 'soften', 'slightly', 'serve', '</s>']\n"]},{"output_type":"display_data","data":{"text/plain":["   index  RecipeId                               Name   RecipeCategory RatingId                                    RecipeIngredientPartsecipeInstructions  \\\n","0      0        38  Low-Fat Berry Blue Frozen Dessert  Frozen Desserts        4  blueberries granulated-sugar vanilla-yogurt lemon-juice  <s> toss 2 cup berry sugar </s> <s> let stand 45 minute stir occasionally </s> <s> transfer berry sugar mixture food processor </s> <s> add yogurt process smooth </s> <s> strain fine sieve </s> <s> pour bake pan transfer ice cream maker process accord manufacturer direction </s> <s> freeze uncover edge solid centre soft </s> <s> transfer processor blend smooth </s> <s> return pan freeze edge solid </s> <s> transfer processor blend smooth </s> <s> fold remain 2 cup blueberry </s> <s> pour plastic mold freeze overnight </s> <s> let soften slightly serve </s>    \n","\necipe  \n","0  blueberries granulated-sugar vanilla-yogurt lemon-juice <s> toss 2 cup berry sugar </s> <s> let stand 45 minute stir occasionally </s> <s> transfer berry sugar mixture food processor </s> <s> add yogurt process smooth </s> <s> strain fine sieve </s> <s> pour bake pan transfer ice cream maker process accord manufacturer direction </s> <s> freeze uncover edge solid centre soft </s> <s> transfer processor blend smooth </s> <s> return pan freeze edge solid </s> <s> transfer processor blend smooth </s> <s> fold remain 2 cup blueberry </s> <s> pour plastic mold freeze overnight </s> <s> let soften slightly serve </s>   "],"text/html":["\n","  <div id=\"df-d6ad0e40-d59f-4798-abc9-5d022c65399a\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>index</th>\n","      <th>RecipeId</th>\n","      <th>Name</th>\n","      <th>RecipeCategory</th>\n","      <th>RatingId</th>\n","      <th>RecipeIngredientParts</th>\n","      <th>RecipeInstructions</th>\n","      <th>Recipe</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>38</td>\n","      <td>Low-Fat Berry Blue Frozen Dessert</td>\n","      <td>Frozen Desserts</td>\n","      <td>4</td>\n","      <td>blueberries granulated-sugar vanilla-yogurt lemon-juice</td>\n","      <td>&lt;s&gt; toss 2 cup berry sugar &lt;/s&gt; &lt;s&gt; let stand 45 minute stir occasionally &lt;/s&gt; &lt;s&gt; transfer berry sugar mixture food processor &lt;/s&gt; &lt;s&gt; add yogurt process smooth &lt;/s&gt; &lt;s&gt; strain fine sieve &lt;/s&gt; &lt;s&gt; pour bake pan transfer ice cream maker process accord manufacturer direction &lt;/s&gt; &lt;s&gt; freeze uncover edge solid centre soft &lt;/s&gt; &lt;s&gt; transfer processor blend smooth &lt;/s&gt; &lt;s&gt; return pan freeze edge solid &lt;/s&gt; &lt;s&gt; transfer processor blend smooth &lt;/s&gt; &lt;s&gt; fold remain 2 cup blueberry &lt;/s&gt; &lt;s&gt; pour plastic mold freeze overnight &lt;/s&gt; &lt;s&gt; let soften slightly serve &lt;/s&gt;</td>\n","      <td>blueberries granulated-sugar vanilla-yogurt lemon-juice &lt;s&gt; toss 2 cup berry sugar &lt;/s&gt; &lt;s&gt; let stand 45 minute stir occasionally &lt;/s&gt; &lt;s&gt; transfer berry sugar mixture food processor &lt;/s&gt; &lt;s&gt; add yogurt process smooth &lt;/s&gt; &lt;s&gt; strain fine sieve &lt;/s&gt; &lt;s&gt; pour bake pan transfer ice cream maker process accord manufacturer direction &lt;/s&gt; &lt;s&gt; freeze uncover edge solid centre soft &lt;/s&gt; &lt;s&gt; transfer processor blend smooth &lt;/s&gt; &lt;s&gt; return pan freeze edge solid &lt;/s&gt; &lt;s&gt; transfer processor blend smooth &lt;/s&gt; &lt;s&gt; fold remain 2 cup blueberry &lt;/s&gt; &lt;s&gt; pour plastic mold freeze overnight &lt;/s&gt; &lt;s&gt; let soften slightly serve &lt;/s&gt;</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d6ad0e40-d59f-4798-abc9-5d022c65399a')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-d6ad0e40-d59f-4798-abc9-5d022c65399a button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-d6ad0e40-d59f-4798-abc9-5d022c65399a');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{}},{"output_type":"stream","name":"stdout","text":["\n","Similar Documents\n","index:  0\n","Similarity:  0.9658677577972412\n","Recipe: \n"]},{"output_type":"display_data","data":{"text/plain":["   index  RecipeId                               Name   RecipeCategory RatingId                                    RecipeIngredientPartsecipeInstructions  \\\n","0      0        38  Low-Fat Berry Blue Frozen Dessert  Frozen Desserts        4  blueberries granulated-sugar vanilla-yogurt lemon-juice  <s> toss 2 cup berry sugar </s> <s> let stand 45 minute stir occasionally </s> <s> transfer berry sugar mixture food processor </s> <s> add yogurt process smooth </s> <s> strain fine sieve </s> <s> pour bake pan transfer ice cream maker process accord manufacturer direction </s> <s> freeze uncover edge solid centre soft </s> <s> transfer processor blend smooth </s> <s> return pan freeze edge solid </s> <s> transfer processor blend smooth </s> <s> fold remain 2 cup blueberry </s> <s> pour plastic mold freeze overnight </s> <s> let soften slightly serve </s>    \n","\necipe  \n","0  blueberries granulated-sugar vanilla-yogurt lemon-juice <s> toss 2 cup berry sugar </s> <s> let stand 45 minute stir occasionally </s> <s> transfer berry sugar mixture food processor </s> <s> add yogurt process smooth </s> <s> strain fine sieve </s> <s> pour bake pan transfer ice cream maker process accord manufacturer direction </s> <s> freeze uncover edge solid centre soft </s> <s> transfer processor blend smooth </s> <s> return pan freeze edge solid </s> <s> transfer processor blend smooth </s> <s> fold remain 2 cup blueberry </s> <s> pour plastic mold freeze overnight </s> <s> let soften slightly serve </s>   "],"text/html":["\n","  <div id=\"df-37802a6e-3e0c-457b-84e3-f7f996318dbb\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>index</th>\n","      <th>RecipeId</th>\n","      <th>Name</th>\n","      <th>RecipeCategory</th>\n","      <th>RatingId</th>\n","      <th>RecipeIngredientParts</th>\n","      <th>RecipeInstructions</th>\n","      <th>Recipe</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>38</td>\n","      <td>Low-Fat Berry Blue Frozen Dessert</td>\n","      <td>Frozen Desserts</td>\n","      <td>4</td>\n","      <td>blueberries granulated-sugar vanilla-yogurt lemon-juice</td>\n","      <td>&lt;s&gt; toss 2 cup berry sugar &lt;/s&gt; &lt;s&gt; let stand 45 minute stir occasionally &lt;/s&gt; &lt;s&gt; transfer berry sugar mixture food processor &lt;/s&gt; &lt;s&gt; add yogurt process smooth &lt;/s&gt; &lt;s&gt; strain fine sieve &lt;/s&gt; &lt;s&gt; pour bake pan transfer ice cream maker process accord manufacturer direction &lt;/s&gt; &lt;s&gt; freeze uncover edge solid centre soft &lt;/s&gt; &lt;s&gt; transfer processor blend smooth &lt;/s&gt; &lt;s&gt; return pan freeze edge solid &lt;/s&gt; &lt;s&gt; transfer processor blend smooth &lt;/s&gt; &lt;s&gt; fold remain 2 cup blueberry &lt;/s&gt; &lt;s&gt; pour plastic mold freeze overnight &lt;/s&gt; &lt;s&gt; let soften slightly serve &lt;/s&gt;</td>\n","      <td>blueberries granulated-sugar vanilla-yogurt lemon-juice &lt;s&gt; toss 2 cup berry sugar &lt;/s&gt; &lt;s&gt; let stand 45 minute stir occasionally &lt;/s&gt; &lt;s&gt; transfer berry sugar mixture food processor &lt;/s&gt; &lt;s&gt; add yogurt process smooth &lt;/s&gt; &lt;s&gt; strain fine sieve &lt;/s&gt; &lt;s&gt; pour bake pan transfer ice cream maker process accord manufacturer direction &lt;/s&gt; &lt;s&gt; freeze uncover edge solid centre soft &lt;/s&gt; &lt;s&gt; transfer processor blend smooth &lt;/s&gt; &lt;s&gt; return pan freeze edge solid &lt;/s&gt; &lt;s&gt; transfer processor blend smooth &lt;/s&gt; &lt;s&gt; fold remain 2 cup blueberry &lt;/s&gt; &lt;s&gt; pour plastic mold freeze overnight &lt;/s&gt; &lt;s&gt; let soften slightly serve &lt;/s&gt;</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-37802a6e-3e0c-457b-84e3-f7f996318dbb')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-37802a6e-3e0c-457b-84e3-f7f996318dbb button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-37802a6e-3e0c-457b-84e3-f7f996318dbb');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{}},{"output_type":"stream","name":"stdout","text":["index:  22543\n","Similarity:  0.6774750351905823\n","Recipe: \n"]},{"output_type":"display_data","data":{"text/plain":["       index  RecipeId                          Name RecipeCategory RatingId  RecipeIngredientParts                                                                                                                                                            RecipeInstructions                                                                                                                                                                                              Recipe\n","22543  22543     32461  Watermelon-Lemonade Ice Pops        Dessert        4  watermelon sugar salt  <s> combine ingredient processor </s> <s> puree smooth </s> <s> divide mixture among 8 ice pop mold 1/4 1/3 cup capacity </s> <s> cover freeze firm least 4 hour 5 day </s>   watermelon sugar salt <s> combine ingredient processor </s> <s> puree smooth </s> <s> divide mixture among 8 ice pop mold 1/4 1/3 cup capacity </s> <s> cover freeze firm least 4 hour 5 day </s> "],"text/html":["\n","  <div id=\"df-fa5846ba-fef4-4474-89d6-dabb6948aa42\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>index</th>\n","      <th>RecipeId</th>\n","      <th>Name</th>\n","      <th>RecipeCategory</th>\n","      <th>RatingId</th>\n","      <th>RecipeIngredientParts</th>\n","      <th>RecipeInstructions</th>\n","      <th>Recipe</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>22543</th>\n","      <td>22543</td>\n","      <td>32461</td>\n","      <td>Watermelon-Lemonade Ice Pops</td>\n","      <td>Dessert</td>\n","      <td>4</td>\n","      <td>watermelon sugar salt</td>\n","      <td>&lt;s&gt; combine ingredient processor &lt;/s&gt; &lt;s&gt; puree smooth &lt;/s&gt; &lt;s&gt; divide mixture among 8 ice pop mold 1/4 1/3 cup capacity &lt;/s&gt; &lt;s&gt; cover freeze firm least 4 hour 5 day &lt;/s&gt;</td>\n","      <td>watermelon sugar salt &lt;s&gt; combine ingredient processor &lt;/s&gt; &lt;s&gt; puree smooth &lt;/s&gt; &lt;s&gt; divide mixture among 8 ice pop mold 1/4 1/3 cup capacity &lt;/s&gt; &lt;s&gt; cover freeze firm least 4 hour 5 day &lt;/s&gt;</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-fa5846ba-fef4-4474-89d6-dabb6948aa42')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-fa5846ba-fef4-4474-89d6-dabb6948aa42 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-fa5846ba-fef4-4474-89d6-dabb6948aa42');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{}},{"output_type":"stream","name":"stdout","text":["index:  215988\n","Similarity:  0.6744435429573059\n","Recipe: \n"]},{"output_type":"display_data","data":{"text/plain":["         index  RecipeId                                  Name   RecipeCategory RatingId                                                                                                                                                               RecipeIngredientParts  \\\n","215988  215988    359760  Ricotta Gelato With Blackberry Sauce  Frozen Desserts        5  half-and-half milk whole-milk-ricotta-cheese sugar cinnamon-sticks lemon-zest light-corn-syrup vanilla sugar water blackberries fresh-lemon-juice creme-de-cassis mango blackberry   \n","\necipeInstructions  \\\n","215988  <s> make gelato saucepan whisk together half half milk ricotta sugar add cinnamon stick bring mixture boil stir </s> <s> remove pan heat add zest let mixture stand cover 10 minute </s> <s> force mixture fine sieve set bowl stir corn syrup vanilla </s> <s> chill mixture cover cold freeze ice cream freezer accord manufacturer instruction </s> <s> pack gelato tightly six 1/2 cup dariole mold cover mold plastic wrap freeze gelato 30 minute ready serve </s> <s> make blackberry sauce heavy saucepan melt sugar moderate heat stir fork cook syrup swirl pan occasionally golden caramel </s> <s> work carefully quickly stir water blackberry lemon juice crème de cassis mixture bubble stir mixture combine well cook mixture moderately low heat caramel dissolve </s> <s> strain mixture fine sieve set bowl press hard solid chill sauce cover cold </s> <s> divide sauce among 6 dessert plate unmold gelato arrange center plate </s> <s> garnish serve mango blackberry </s>    \n","\n","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        Recipe  \n","215988  half-and-half milk whole-milk-ricotta-cheese sugar cinnamon-sticks lemon-zest light-corn-syrup vanilla sugar water blackberries fresh-lemon-juice creme-de-cassis mango blackberry <s> make gelato saucepan whisk together half half milk ricotta sugar add cinnamon stick bring mixture boil stir </s> <s> remove pan heat add zest let mixture stand cover 10 minute </s> <s> force mixture fine sieve set bowl stir corn syrup vanilla </s> <s> chill mixture cover cold freeze ice cream freezer accord manufacturer instruction </s> <s> pack gelato tightly six 1/2 cup dariole mold cover mold plastic wrap freeze gelato 30 minute ready serve </s> <s> make blackberry sauce heavy saucepan melt sugar moderate heat stir fork cook syrup swirl pan occasionally golden caramel </s> <s> work carefully quickly stir water blackberry lemon juice crème de cassis mixture bubble stir mixture combine well cook mixture moderately low heat caramel dissolve </s> <s> strain mixture fine sieve set bowl press hard solid chill sauce cover cold </s> <s> divide sauce among 6 dessert plate unmold gelato arrange center plate </s> <s> garnish serve mango blackberry </s>   "],"text/html":["\n","  <div id=\"df-84cedbc2-72da-4f8a-9a70-6c98bb91d75f\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>index</th>\n","      <th>RecipeId</th>\n","      <th>Name</th>\n","      <th>RecipeCategory</th>\n","      <th>RatingId</th>\n","      <th>RecipeIngredientParts</th>\n","      <th>RecipeInstructions</th>\n","      <th>Recipe</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>215988</th>\n","      <td>215988</td>\n","      <td>359760</td>\n","      <td>Ricotta Gelato With Blackberry Sauce</td>\n","      <td>Frozen Desserts</td>\n","      <td>5</td>\n","      <td>half-and-half milk whole-milk-ricotta-cheese sugar cinnamon-sticks lemon-zest light-corn-syrup vanilla sugar water blackberries fresh-lemon-juice creme-de-cassis mango blackberry</td>\n","      <td>&lt;s&gt; make gelato saucepan whisk together half half milk ricotta sugar add cinnamon stick bring mixture boil stir &lt;/s&gt; &lt;s&gt; remove pan heat add zest let mixture stand cover 10 minute &lt;/s&gt; &lt;s&gt; force mixture fine sieve set bowl stir corn syrup vanilla &lt;/s&gt; &lt;s&gt; chill mixture cover cold freeze ice cream freezer accord manufacturer instruction &lt;/s&gt; &lt;s&gt; pack gelato tightly six 1/2 cup dariole mold cover mold plastic wrap freeze gelato 30 minute ready serve &lt;/s&gt; &lt;s&gt; make blackberry sauce heavy saucepan melt sugar moderate heat stir fork cook syrup swirl pan occasionally golden caramel &lt;/s&gt; &lt;s&gt; work carefully quickly stir water blackberry lemon juice crème de cassis mixture bubble stir mixture combine well cook mixture moderately low heat caramel dissolve &lt;/s&gt; &lt;s&gt; strain mixture fine sieve set bowl press hard solid chill sauce cover cold &lt;/s&gt; &lt;s&gt; divide sauce among 6 dessert plate unmold gelato arrange center plate &lt;/s&gt; &lt;s&gt; garnish serve mango blackberry &lt;/s&gt;</td>\n","      <td>half-and-half milk whole-milk-ricotta-cheese sugar cinnamon-sticks lemon-zest light-corn-syrup vanilla sugar water blackberries fresh-lemon-juice creme-de-cassis mango blackberry &lt;s&gt; make gelato saucepan whisk together half half milk ricotta sugar add cinnamon stick bring mixture boil stir &lt;/s&gt; &lt;s&gt; remove pan heat add zest let mixture stand cover 10 minute &lt;/s&gt; &lt;s&gt; force mixture fine sieve set bowl stir corn syrup vanilla &lt;/s&gt; &lt;s&gt; chill mixture cover cold freeze ice cream freezer accord manufacturer instruction &lt;/s&gt; &lt;s&gt; pack gelato tightly six 1/2 cup dariole mold cover mold plastic wrap freeze gelato 30 minute ready serve &lt;/s&gt; &lt;s&gt; make blackberry sauce heavy saucepan melt sugar moderate heat stir fork cook syrup swirl pan occasionally golden caramel &lt;/s&gt; &lt;s&gt; work carefully quickly stir water blackberry lemon juice crème de cassis mixture bubble stir mixture combine well cook mixture moderately low heat caramel dissolve &lt;/s&gt; &lt;s&gt; strain mixture fine sieve set bowl press hard solid chill sauce cover cold &lt;/s&gt; &lt;s&gt; divide sauce among 6 dessert plate unmold gelato arrange center plate &lt;/s&gt; &lt;s&gt; garnish serve mango blackberry &lt;/s&gt;</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-84cedbc2-72da-4f8a-9a70-6c98bb91d75f')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-84cedbc2-72da-4f8a-9a70-6c98bb91d75f button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-84cedbc2-72da-4f8a-9a70-6c98bb91d75f');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{}},{"output_type":"stream","name":"stdout","text":["index:  22494\n","Similarity:  0.673481285572052\n","Recipe: \n"]},{"output_type":"display_data","data":{"text/plain":["       index  RecipeId                      Name   RecipeCategory RatingId                RecipeIngredientParts                                                                                                                                                   RecipeInstructions                                                                                                                                                                                                   Recipe\n","22494  22494     32394  Royal Blueberry Ice Pops  Frozen Desserts        5  fresh-blueberries water honey sugar  <s> combine ingredient processor puree smooth </s> <s> divide mixture among 8 ice pop mold 1/4 1/3 cup capacity </s> <s> cover freeze firm least 4 hour 5 day </s>   fresh-blueberries water honey sugar <s> combine ingredient processor puree smooth </s> <s> divide mixture among 8 ice pop mold 1/4 1/3 cup capacity </s> <s> cover freeze firm least 4 hour 5 day </s> "],"text/html":["\n","  <div id=\"df-e9029f10-6772-4d4a-b808-b9ee4c53bed5\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>index</th>\n","      <th>RecipeId</th>\n","      <th>Name</th>\n","      <th>RecipeCategory</th>\n","      <th>RatingId</th>\n","      <th>RecipeIngredientParts</th>\n","      <th>RecipeInstructions</th>\n","      <th>Recipe</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>22494</th>\n","      <td>22494</td>\n","      <td>32394</td>\n","      <td>Royal Blueberry Ice Pops</td>\n","      <td>Frozen Desserts</td>\n","      <td>5</td>\n","      <td>fresh-blueberries water honey sugar</td>\n","      <td>&lt;s&gt; combine ingredient processor puree smooth &lt;/s&gt; &lt;s&gt; divide mixture among 8 ice pop mold 1/4 1/3 cup capacity &lt;/s&gt; &lt;s&gt; cover freeze firm least 4 hour 5 day &lt;/s&gt;</td>\n","      <td>fresh-blueberries water honey sugar &lt;s&gt; combine ingredient processor puree smooth &lt;/s&gt; &lt;s&gt; divide mixture among 8 ice pop mold 1/4 1/3 cup capacity &lt;/s&gt; &lt;s&gt; cover freeze firm least 4 hour 5 day &lt;/s&gt;</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e9029f10-6772-4d4a-b808-b9ee4c53bed5')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-e9029f10-6772-4d4a-b808-b9ee4c53bed5 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-e9029f10-6772-4d4a-b808-b9ee4c53bed5');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{}},{"output_type":"stream","name":"stdout","text":["index:  153999\n","Similarity:  0.6697591543197632\n","Recipe: \n"]},{"output_type":"display_data","data":{"text/plain":["         index  RecipeId                  Name RecipeCategory RatingId                                                                                                           RecipeIngredientParts                                                                                                                                                                                                                                                                                                      RecipeInstructions                                                                                                                                                                                                                                                                                                                                                                                                                                                 Recipe\n","153999  153999    235090  Harvest Corn Pudding           Corn        3  corn-kernels cornmeal mild-cheddar-cheese butter mild-green-chili green-onions sugar salt baking-soda cinnamon eggs buttermilk  <s> preheat oven 350 </s> <s> grease medium bake dish </s> <s> food processor blender puree 2 cup corn </s> <s> transfer puree corn remain kernel large mix bowl </s> <s> mix remain ingredient </s> <s> pour batter prepare dish </s> <s> bake pudding 50 55 minute till lightly brown firm </s> <s> serve warm </s>   corn-kernels cornmeal mild-cheddar-cheese butter mild-green-chili green-onions sugar salt baking-soda cinnamon eggs buttermilk <s> preheat oven 350 </s> <s> grease medium bake dish </s> <s> food processor blender puree 2 cup corn </s> <s> transfer puree corn remain kernel large mix bowl </s> <s> mix remain ingredient </s> <s> pour batter prepare dish </s> <s> bake pudding 50 55 minute till lightly brown firm </s> <s> serve warm </s> "],"text/html":["\n","  <div id=\"df-c0dbe29c-f767-4d48-88cd-959e6f00a972\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>index</th>\n","      <th>RecipeId</th>\n","      <th>Name</th>\n","      <th>RecipeCategory</th>\n","      <th>RatingId</th>\n","      <th>RecipeIngredientParts</th>\n","      <th>RecipeInstructions</th>\n","      <th>Recipe</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>153999</th>\n","      <td>153999</td>\n","      <td>235090</td>\n","      <td>Harvest Corn Pudding</td>\n","      <td>Corn</td>\n","      <td>3</td>\n","      <td>corn-kernels cornmeal mild-cheddar-cheese butter mild-green-chili green-onions sugar salt baking-soda cinnamon eggs buttermilk</td>\n","      <td>&lt;s&gt; preheat oven 350 &lt;/s&gt; &lt;s&gt; grease medium bake dish &lt;/s&gt; &lt;s&gt; food processor blender puree 2 cup corn &lt;/s&gt; &lt;s&gt; transfer puree corn remain kernel large mix bowl &lt;/s&gt; &lt;s&gt; mix remain ingredient &lt;/s&gt; &lt;s&gt; pour batter prepare dish &lt;/s&gt; &lt;s&gt; bake pudding 50 55 minute till lightly brown firm &lt;/s&gt; &lt;s&gt; serve warm &lt;/s&gt;</td>\n","      <td>corn-kernels cornmeal mild-cheddar-cheese butter mild-green-chili green-onions sugar salt baking-soda cinnamon eggs buttermilk &lt;s&gt; preheat oven 350 &lt;/s&gt; &lt;s&gt; grease medium bake dish &lt;/s&gt; &lt;s&gt; food processor blender puree 2 cup corn &lt;/s&gt; &lt;s&gt; transfer puree corn remain kernel large mix bowl &lt;/s&gt; &lt;s&gt; mix remain ingredient &lt;/s&gt; &lt;s&gt; pour batter prepare dish &lt;/s&gt; &lt;s&gt; bake pudding 50 55 minute till lightly brown firm &lt;/s&gt; &lt;s&gt; serve warm &lt;/s&gt;</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c0dbe29c-f767-4d48-88cd-959e6f00a972')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-c0dbe29c-f767-4d48-88cd-959e6f00a972 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-c0dbe29c-f767-4d48-88cd-959e6f00a972');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{}},{"output_type":"stream","name":"stdout","text":["index:  255976\n","Similarity:  0.6549301743507385\n","Recipe: \n"]},{"output_type":"display_data","data":{"text/plain":["         index  RecipeId                     Name RecipeCategory RatingId                                                        RecipeIngredientParts                                                                                                                                                                                                                                                                                                                                                                                                                                         RecipeInstructions  \\\n","255976  255976    467390  Blueberry Frozen Yogurt        Dessert        5  fresh-blueberries orange-juice-and-rind-of maple-syrup plain-low-fat-yogurt  <s> place blueberry orange rind juice food processor blender process puree </s> <s> strain sieve bowl pitcher </s> <s> stir maple syrup yogurt together large mix bowl fold fruit puree </s> <s> churn mixture ice cream machine follow manufacturer instruction freeze 5 6 hour </s> <s> ice cream machine transfer mixture freezerproof container freeze 2 hour </s> <s> remove freezer turn bowl beat smooth </s> <s> return freezer freeze firm </s>    \n","\necipe  \n","255976  fresh-blueberries orange-juice-and-rind-of maple-syrup plain-low-fat-yogurt <s> place blueberry orange rind juice food processor blender process puree </s> <s> strain sieve bowl pitcher </s> <s> stir maple syrup yogurt together large mix bowl fold fruit puree </s> <s> churn mixture ice cream machine follow manufacturer instruction freeze 5 6 hour </s> <s> ice cream machine transfer mixture freezerproof container freeze 2 hour </s> <s> remove freezer turn bowl beat smooth </s> <s> return freezer freeze firm </s>   "],"text/html":["\n","  <div id=\"df-cd47420e-2fe1-438e-8a6d-00267d3c2f79\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>index</th>\n","      <th>RecipeId</th>\n","      <th>Name</th>\n","      <th>RecipeCategory</th>\n","      <th>RatingId</th>\n","      <th>RecipeIngredientParts</th>\n","      <th>RecipeInstructions</th>\n","      <th>Recipe</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>255976</th>\n","      <td>255976</td>\n","      <td>467390</td>\n","      <td>Blueberry Frozen Yogurt</td>\n","      <td>Dessert</td>\n","      <td>5</td>\n","      <td>fresh-blueberries orange-juice-and-rind-of maple-syrup plain-low-fat-yogurt</td>\n","      <td>&lt;s&gt; place blueberry orange rind juice food processor blender process puree &lt;/s&gt; &lt;s&gt; strain sieve bowl pitcher &lt;/s&gt; &lt;s&gt; stir maple syrup yogurt together large mix bowl fold fruit puree &lt;/s&gt; &lt;s&gt; churn mixture ice cream machine follow manufacturer instruction freeze 5 6 hour &lt;/s&gt; &lt;s&gt; ice cream machine transfer mixture freezerproof container freeze 2 hour &lt;/s&gt; &lt;s&gt; remove freezer turn bowl beat smooth &lt;/s&gt; &lt;s&gt; return freezer freeze firm &lt;/s&gt;</td>\n","      <td>fresh-blueberries orange-juice-and-rind-of maple-syrup plain-low-fat-yogurt &lt;s&gt; place blueberry orange rind juice food processor blender process puree &lt;/s&gt; &lt;s&gt; strain sieve bowl pitcher &lt;/s&gt; &lt;s&gt; stir maple syrup yogurt together large mix bowl fold fruit puree &lt;/s&gt; &lt;s&gt; churn mixture ice cream machine follow manufacturer instruction freeze 5 6 hour &lt;/s&gt; &lt;s&gt; ice cream machine transfer mixture freezerproof container freeze 2 hour &lt;/s&gt; &lt;s&gt; remove freezer turn bowl beat smooth &lt;/s&gt; &lt;s&gt; return freezer freeze firm &lt;/s&gt;</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-cd47420e-2fe1-438e-8a6d-00267d3c2f79')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-cd47420e-2fe1-438e-8a6d-00267d3c2f79 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-cd47420e-2fe1-438e-8a6d-00267d3c2f79');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{}},{"output_type":"stream","name":"stdout","text":["index:  253521\n","Similarity:  0.6360390782356262\n","Recipe: \n"]},{"output_type":"display_data","data":{"text/plain":["         index  RecipeId                  Name   RecipeCategory RatingId                          RecipeIngredientParts                                                                                          RecipeInstructions                                                                                                                                                    Recipe\n","253521  253521    459463  Homemade Fudgesicles  Frozen Desserts        5  sweetened-condensed-milk milk vanilla-extract  <s> mix together ingredient smooth </s> <s> pour ice pop mold freeze solid least 4 hour unmold serve </s>   sweetened-condensed-milk milk vanilla-extract <s> mix together ingredient smooth </s> <s> pour ice pop mold freeze solid least 4 hour unmold serve </s> "],"text/html":["\n","  <div id=\"df-a08b99d1-1f98-4455-a1c9-e6a0a5f04713\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>index</th>\n","      <th>RecipeId</th>\n","      <th>Name</th>\n","      <th>RecipeCategory</th>\n","      <th>RatingId</th>\n","      <th>RecipeIngredientParts</th>\n","      <th>RecipeInstructions</th>\n","      <th>Recipe</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>253521</th>\n","      <td>253521</td>\n","      <td>459463</td>\n","      <td>Homemade Fudgesicles</td>\n","      <td>Frozen Desserts</td>\n","      <td>5</td>\n","      <td>sweetened-condensed-milk milk vanilla-extract</td>\n","      <td>&lt;s&gt; mix together ingredient smooth &lt;/s&gt; &lt;s&gt; pour ice pop mold freeze solid least 4 hour unmold serve &lt;/s&gt;</td>\n","      <td>sweetened-condensed-milk milk vanilla-extract &lt;s&gt; mix together ingredient smooth &lt;/s&gt; &lt;s&gt; pour ice pop mold freeze solid least 4 hour unmold serve &lt;/s&gt;</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a08b99d1-1f98-4455-a1c9-e6a0a5f04713')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-a08b99d1-1f98-4455-a1c9-e6a0a5f04713 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-a08b99d1-1f98-4455-a1c9-e6a0a5f04713');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{}},{"output_type":"stream","name":"stdout","text":["index:  229364\n","Similarity:  0.6349404454231262\n","Recipe: \n"]},{"output_type":"display_data","data":{"text/plain":["         index  RecipeId                                                      Name   RecipeCategory RatingId                                                       RecipeIngredientParts                                                                                                                                   RecipeInstructions                                                                                                                                                                                                                          Recipe\n","229364  229364    389959  Blueberry Sour Cream Ice Cream (Low Fat, No Added Sugar)  Frozen Desserts        5  fresh-blueberries stevia-powder lemon-juice reduced-fat-sour-cream berries  <s> puree blueberry food processor </s> <s> blend ingredient chill 2 4 hour </s> <s> freeze ice cream machine accord manufacturer instruction </s>   fresh-blueberries stevia-powder lemon-juice reduced-fat-sour-cream berries <s> puree blueberry food processor </s> <s> blend ingredient chill 2 4 hour </s> <s> freeze ice cream machine accord manufacturer instruction </s> "],"text/html":["\n","  <div id=\"df-be29d80c-1638-4a58-93b2-fcf5678d5a89\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>index</th>\n","      <th>RecipeId</th>\n","      <th>Name</th>\n","      <th>RecipeCategory</th>\n","      <th>RatingId</th>\n","      <th>RecipeIngredientParts</th>\n","      <th>RecipeInstructions</th>\n","      <th>Recipe</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>229364</th>\n","      <td>229364</td>\n","      <td>389959</td>\n","      <td>Blueberry Sour Cream Ice Cream (Low Fat, No Added Sugar)</td>\n","      <td>Frozen Desserts</td>\n","      <td>5</td>\n","      <td>fresh-blueberries stevia-powder lemon-juice reduced-fat-sour-cream berries</td>\n","      <td>&lt;s&gt; puree blueberry food processor &lt;/s&gt; &lt;s&gt; blend ingredient chill 2 4 hour &lt;/s&gt; &lt;s&gt; freeze ice cream machine accord manufacturer instruction &lt;/s&gt;</td>\n","      <td>fresh-blueberries stevia-powder lemon-juice reduced-fat-sour-cream berries &lt;s&gt; puree blueberry food processor &lt;/s&gt; &lt;s&gt; blend ingredient chill 2 4 hour &lt;/s&gt; &lt;s&gt; freeze ice cream machine accord manufacturer instruction &lt;/s&gt;</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-be29d80c-1638-4a58-93b2-fcf5678d5a89')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-be29d80c-1638-4a58-93b2-fcf5678d5a89 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-be29d80c-1638-4a58-93b2-fcf5678d5a89');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{}},{"output_type":"stream","name":"stdout","text":["index:  26358\n","Similarity:  0.6339403390884399\n","Recipe: \n"]},{"output_type":"display_data","data":{"text/plain":["       index  RecipeId                     Name RecipeCategory RatingId                   RecipeIngredientParts                                                                                                                                       RecipeInstructions                                                                                                                                                                                          Recipe\n","26358  26358     37654  Banana Pineapple Freeze        Dessert        5  baas fresh-lemon-juice ground-cinnamon  <s> combine ingredient food processor process smooth creamy </s> <s> pour mixture 9 9 2 inch bake dish freeze overnight firm </s> <s> serve chill </s>   baas fresh-lemon-juice ground-cinnamon <s> combine ingredient food processor process smooth creamy </s> <s> pour mixture 9 9 2 inch bake dish freeze overnight firm </s> <s> serve chill </s> "],"text/html":["\n","  <div id=\"df-c7d68d78-e2ac-4bf3-890f-c7bb01fe7724\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>index</th>\n","      <th>RecipeId</th>\n","      <th>Name</th>\n","      <th>RecipeCategory</th>\n","      <th>RatingId</th>\n","      <th>RecipeIngredientParts</th>\n","      <th>RecipeInstructions</th>\n","      <th>Recipe</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>26358</th>\n","      <td>26358</td>\n","      <td>37654</td>\n","      <td>Banana Pineapple Freeze</td>\n","      <td>Dessert</td>\n","      <td>5</td>\n","      <td>baas fresh-lemon-juice ground-cinnamon</td>\n","      <td>&lt;s&gt; combine ingredient food processor process smooth creamy &lt;/s&gt; &lt;s&gt; pour mixture 9 9 2 inch bake dish freeze overnight firm &lt;/s&gt; &lt;s&gt; serve chill &lt;/s&gt;</td>\n","      <td>baas fresh-lemon-juice ground-cinnamon &lt;s&gt; combine ingredient food processor process smooth creamy &lt;/s&gt; &lt;s&gt; pour mixture 9 9 2 inch bake dish freeze overnight firm &lt;/s&gt; &lt;s&gt; serve chill &lt;/s&gt;</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c7d68d78-e2ac-4bf3-890f-c7bb01fe7724')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-c7d68d78-e2ac-4bf3-890f-c7bb01fe7724 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-c7d68d78-e2ac-4bf3-890f-c7bb01fe7724');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{}},{"output_type":"stream","name":"stdout","text":["index:  246777\n","Similarity:  0.6321957111358643\n","Recipe: \n"]},{"output_type":"display_data","data":{"text/plain":["         index  RecipeId                   Name RecipeCategory RatingId                                              RecipeIngredientParts                                                                                                                                                                                                                                                                                                                                                                                               RecipeInstructions  \\\n","246777  246777    438582  Dairy Queen Ice Cream      Ice Cream        5  unflavored-gelatin cold-water milk sugar vanilla salt heavy-cream  <s> sprinkle gelatin water let stand 5 minute </s> <s> meanwhile heat milk almost simmer medium low heat </s> <s> remove heat </s> <s> stir sugar vanilla sugar wire whisk sugar completely dissolve least 2 minute </s> <s> stir gelatin mixture let cool </s> <s> stir cream </s> <s> cover refrigerate 6 hour </s> <s> transfer ice cream maker process accord manufacturer direction 20 minute creamy </s>    \n","\n","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   Recipe  \n","246777  unflavored-gelatin cold-water milk sugar vanilla salt heavy-cream <s> sprinkle gelatin water let stand 5 minute </s> <s> meanwhile heat milk almost simmer medium low heat </s> <s> remove heat </s> <s> stir sugar vanilla sugar wire whisk sugar completely dissolve least 2 minute </s> <s> stir gelatin mixture let cool </s> <s> stir cream </s> <s> cover refrigerate 6 hour </s> <s> transfer ice cream maker process accord manufacturer direction 20 minute creamy </s>   "],"text/html":["\n","  <div id=\"df-dc7294cf-6b06-4e47-ae3f-4337f894ff4b\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>index</th>\n","      <th>RecipeId</th>\n","      <th>Name</th>\n","      <th>RecipeCategory</th>\n","      <th>RatingId</th>\n","      <th>RecipeIngredientParts</th>\n","      <th>RecipeInstructions</th>\n","      <th>Recipe</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>246777</th>\n","      <td>246777</td>\n","      <td>438582</td>\n","      <td>Dairy Queen Ice Cream</td>\n","      <td>Ice Cream</td>\n","      <td>5</td>\n","      <td>unflavored-gelatin cold-water milk sugar vanilla salt heavy-cream</td>\n","      <td>&lt;s&gt; sprinkle gelatin water let stand 5 minute &lt;/s&gt; &lt;s&gt; meanwhile heat milk almost simmer medium low heat &lt;/s&gt; &lt;s&gt; remove heat &lt;/s&gt; &lt;s&gt; stir sugar vanilla sugar wire whisk sugar completely dissolve least 2 minute &lt;/s&gt; &lt;s&gt; stir gelatin mixture let cool &lt;/s&gt; &lt;s&gt; stir cream &lt;/s&gt; &lt;s&gt; cover refrigerate 6 hour &lt;/s&gt; &lt;s&gt; transfer ice cream maker process accord manufacturer direction 20 minute creamy &lt;/s&gt;</td>\n","      <td>unflavored-gelatin cold-water milk sugar vanilla salt heavy-cream &lt;s&gt; sprinkle gelatin water let stand 5 minute &lt;/s&gt; &lt;s&gt; meanwhile heat milk almost simmer medium low heat &lt;/s&gt; &lt;s&gt; remove heat &lt;/s&gt; &lt;s&gt; stir sugar vanilla sugar wire whisk sugar completely dissolve least 2 minute &lt;/s&gt; &lt;s&gt; stir gelatin mixture let cool &lt;/s&gt; &lt;s&gt; stir cream &lt;/s&gt; &lt;s&gt; cover refrigerate 6 hour &lt;/s&gt; &lt;s&gt; transfer ice cream maker process accord manufacturer direction 20 minute creamy &lt;/s&gt;</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-dc7294cf-6b06-4e47-ae3f-4337f894ff4b')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-dc7294cf-6b06-4e47-ae3f-4337f894ff4b button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-dc7294cf-6b06-4e47-ae3f-4337f894ff4b');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{}}]},{"cell_type":"markdown","source":["#### **Visualizing the doc2vec embedding** \n","This was done using tensorboard projector\n","\n","\n","After projecting the doc2vec embedding model trained on the recipes, we observed some clusters within the recipes. \n","\n","**The screenshots and the videos of the visualization is in the output folder**\n","\n","---\n","\n","\n","\n","\n"],"metadata":{"id":"nnOSXwTYOWId"}},{"cell_type":"code","source":["# Save in a word2vec format, needed to convert to tensorflow format\n","doc2vec_model.save_word2vec_format('/content/gdrive/My Drive/Colab Notebooks/CS6120NLP_FinalProject/Models/doc2vec2_t_tensor.w2v', doctag_vec=True, word_vec=False)\n"],"metadata":{"id":"Wlsc2HRtHEI4"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Convert to tsv format to use tensorboard projector\n","!python3 -m gensim.scripts.word2vec2tensor -i /content/gdrive/My\\ Drive/Colab\\ Notebooks/CS6120NLP_FinalProject/Models/doc2vec2_t_tensor.w2v -o /content/gdrive/My\\ Drive/Colab\\ Notebooks/CS6120NLP_FinalProject/Models/doc2vec2_t_tf.tsv"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"R_HpqimbH5j8","executionInfo":{"status":"ok","timestamp":1651435005686,"user_tz":240,"elapsed":19935,"user":{"displayName":"Lakshyana K C","userId":"03123992237616606989"}},"outputId":"4c4bcdbb-43dc-4de8-f882-9f334eb0c813"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["2022-05-01 19:56:26,926 - word2vec2tensor - INFO - running /usr/local/lib/python3.7/dist-packages/gensim/scripts/word2vec2tensor.py -i /content/gdrive/My Drive/Colab Notebooks/CS6120NLP_FinalProject/Models/doc2vec2_t_tensor.w2v -o /content/gdrive/My Drive/Colab Notebooks/CS6120NLP_FinalProject/Models/doc2vec2_t_tf.tsv\n","2022-05-01 19:56:26,927 - utils_any2vec - INFO - loading projection weights from /content/gdrive/My Drive/Colab Notebooks/CS6120NLP_FinalProject/Models/doc2vec2_t_tensor.w2v\n","2022-05-01 19:56:34,954 - utils_any2vec - INFO - loaded (269294, 50) matrix from /content/gdrive/My Drive/Colab Notebooks/CS6120NLP_FinalProject/Models/doc2vec2_t_tensor.w2v\n","2022-05-01 19:56:45,274 - word2vec2tensor - INFO - 2D tensor file saved to /content/gdrive/My Drive/Colab Notebooks/CS6120NLP_FinalProject/Models/doc2vec2_t_tf.tsv_tensor.tsv\n","2022-05-01 19:56:45,275 - word2vec2tensor - INFO - Tensor metadata file saved to /content/gdrive/My Drive/Colab Notebooks/CS6120NLP_FinalProject/Models/doc2vec2_t_tf.tsv_metadata.tsv\n","2022-05-01 19:56:45,322 - word2vec2tensor - INFO - finished running word2vec2tensor.py\n"]}]},{"cell_type":"code","source":["### Update the metadata in by adding recipe information\n","with open(\"/content/gdrive/My Drive/Colab Notebooks/CS6120NLP_FinalProject/Models/doc2vec2_t_tf.tsv_metadata.tsv\",'w') as w:\n","    w.write('Name\\tRatingId\\tIngredients\\tRecipe\\n')\n","    for i,j,k,l in zip(text_feature['RecipeCategory']+\": \" +text_feature['Name']+\" (\"+text_feature['RatingId'].astype(str)+\")\",\n","                       text_feature['RatingId'], text_feature[\"RecipeIngredientParts\"], text_feature[\"RecipeInstructions\"]):\n","        w.write(\"%s\\t%s\\t%s\\t%s\\n\" % (i,j,k,l))"],"metadata":{"id":"u05UWWxOIjrg"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"ix2On6zat8G2"},"source":["# **Step 3: Feedforward Neural Language Model**\n","--------------------------"]},{"cell_type":"markdown","metadata":{"id":"FHcTJeqwejcr"},"source":["### DATA PREPROCESSING\n","Deep Neural Networks input layers make use of input variables to feed the network for training the model. But in this task (experiment), we're dealing with words text. How do we represent these words in order to feed our model?\n","\n","In our experiment, we used densed representation of those text (comments) and their semanticity together. The advantage of using this approach is the best way for fitting neural networks onto a text data (as in our case), as well as less memory usage compared to other sparse representation approaches.\n","\n","\n","#### Word Embedding\n","Two ways to feed embeddings to neural networks:\n","   * Using your own word embeddings by training\n","   * Using pre-trained embedding (e.g Word2vec, lad2vec, Glove etc)\n","   \n"]},{"cell_type":"markdown","source":["#### **Format the dataset: X train, X test, Y train, and Y test**"],"metadata":{"id":"TyeYBndeEQOI"}},{"cell_type":"code","source":["##Update the labels to be values between 0 - 3 to represent the four labels 2, 3,4,5. \n","\n","def reduceLabelIndex(label):\n","  return label - 2\n","\n","X_train = training_data['Recipe']\n","X_train_indices = training_data['index'].to_numpy().reshape(len(training_data['index']),1)\n","y_train = training_data['RatingId'].apply(reduceLabelIndex).to_numpy()\n","# .reshape(len(training_data['index']),1)\n","X_test = training_data['Recipe']\n","X_test_indices = testing_data['index'].to_numpy().reshape(len(testing_data['index']),1)\n","y_test = testing_data['RatingId'].apply(reduceLabelIndex).to_numpy()\n","# .reshape(len(testing_data['index']),1)\n","\n","print(\"Training Data Indices\",X_train_indices[:5])\n","print(\"Training Data Labels\",y_train[:5])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"TEdTHQdpmO0A","executionInfo":{"status":"ok","timestamp":1651618045876,"user_tz":240,"elapsed":154,"user":{"displayName":"Lakshyana","userId":"14846287915491486779"}},"outputId":"06357f53-423b-4ee3-f9fd-7c2605825d86"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Training Data Indices [[235422]\n"," [ 16937]\n"," [123315]\n"," [ 35989]\n"," [252151]]\n","Training Data Labels [3 3 2 3 3]\n"]}]},{"cell_type":"markdown","source":["#### **Prepare Vectorized Dataset**"],"metadata":{"id":"WKsoFEQrF6Yy"}},{"cell_type":"code","source":["##########################\n","###     SETTINGS       ###\n","##########################\n","\n","# Hyperparameters\n","learning_rate = 0.05\n","batch_size = 300\n","num_epochs = 500\n","\n","# Architecture\n","NUM_CLASSES = 4  #(1-2,3,4,5)"],"metadata":{"id":"In1k6vgRF6Yy"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["#### **Get the Doc2vec Embedding Matrix to create the embedding layer**"],"metadata":{"id":"C4ycBCP4Ebpm"}},{"cell_type":"code","source":["### creating the embedding matrix\n","import tensorflow as tf\n","from keras.layers import Input\n","from keras.initializers import Constant\n","from tensorflow.keras import Sequential\n","from tensorflow.keras.layers import Dense, Embedding, Dropout\n","\n","\n","EMBEDDINGS_SIZE = 50 \n","\n","df = text_feature\n","DATA_SIZE = len(df)\n","\n","embedding_matrix = np.zeros((len(df)+1, EMBEDDINGS_SIZE))\n","for i, row in df.iterrows():\n","    embedding = doc2vec_model.docvecs[row['index']]\n","    embedding_matrix[i+1] = embedding\n","\n","\n","### input with the id of document\n","doc_input = Input(shape=(1,),dtype='int16', name='doc_input')\n","\n","### Now create an embedding layer intialized with the matrix created earlier to later feed into the model\n","embedding_layer = Embedding(output_dim=EMBEDDINGS_SIZE, input_dim= DATA_SIZE+ 1,embeddings_initializer = Constant(embedding_matrix), input_length=1, trainable=False)"],"metadata":{"id":"SelSlxCXSQYh"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["#### **Setup Ordinal Classification Model**"],"metadata":{"id":"57kKalqDFsK7"}},{"cell_type":"markdown","source":["**Evaluation Metrics for Test Dataset**"],"metadata":{"id":"F2Sv_P9AQbdF"}},{"cell_type":"code","source":["def recall_m(y_true, y_pred):\n","    true_positives = K.sum(K.round(K.clip(y_true * y_pred, 0, 1)))\n","    possible_positives = K.sum(K.round(K.clip(y_true, 0, 1)))\n","    recall = true_positives / (possible_positives + K.epsilon())\n","    return recall\n","\n","def precision_m(y_true, y_pred):\n","    true_positives = K.sum(K.round(K.clip(y_true * y_pred, 0, 1)))\n","    predicted_positives = K.sum(K.round(K.clip(y_pred, 0, 1)))\n","    precision = true_positives / (predicted_positives + K.epsilon())\n","    return precision\n","\n","def f1_m(y_true, y_pred):\n","    precision = precision_m(y_true, y_pred)\n","    recall = recall_m(y_true, y_pred)\n","    return 2*((precision*recall)/(precision+recall+K.epsilon()))  \n"],"metadata":{"id":"xvRxVZMwDShv"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["**Create a Ordinal Classification Model**"],"metadata":{"id":"5Yvdw0JfQj8s"}},{"cell_type":"code","source":["### creating the embedding matrix\n","import tensorflow as tf\n","from keras.layers import Input\n","from keras.initializers import Constant\n","from tensorflow.keras import Sequential\n","from tensorflow.keras.layers import Dense, Embedding, Dropout\n","from keras.layers import Reshape\n","from keras import backend as K\n","\n","\n","\n","def create_model():\n","  model = Sequential([\n","                    # Embedding layer\n","                    embedding_layer,\n","                    # Reshape \n","                    Reshape([EMBEDDINGS_SIZE]),\n","                    # Dense Layer\n","                    Dense(50, activation='relu'),\n","                    # Dropout\n","                    Dropout(0.2),\n","                    # Dense Layer\n","                    Dense(16, activation='relu'),\n","                    Dropout(0.1),\n","                    coral.CoralOrdinal(NUM_CLASSES),\n","                    # Dense(6, activation=tf.nn.softmax)\n","                    ])\n","  \n","  model.compile(optimizer = tf.keras.optimizers.Adam(learning_rate = learning_rate),\n","              loss = coral.OrdinalCrossEntropy(num_classes = NUM_CLASSES),\n","              metrics = [coral.MeanAbsoluteErrorLabels()\n","                        #  ,f1_m,\n","                        #  precision_m,\n","                        #  recall_m\n","                         ])\n","  \n","  return model\n","\n","model = create_model()\n","print(model.summary()) "],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"SAWCuJH-8zJl","executionInfo":{"status":"ok","timestamp":1651618109413,"user_tz":240,"elapsed":548,"user":{"displayName":"Lakshyana","userId":"14846287915491486779"}},"outputId":"5966b363-07db-440a-bdde-38156e4085a0"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Model: \"sequential\"\n","_________________________________________________________________\n"," Layer (type)                Output Shape              Param #   \n","=================================================================\n"," embedding (Embedding)       (None, 1, 50)             13464750  \n","                                                                 \n"," reshape (Reshape)           (None, 50)                0         \n","                                                                 \n"," dense (Dense)               (None, 50)                2550      \n","                                                                 \n"," dropout (Dropout)           (None, 50)                0         \n","                                                                 \n"," dense_1 (Dense)             (None, 16)                816       \n","                                                                 \n"," dropout_1 (Dropout)         (None, 16)                0         \n","                                                                 \n"," coral_ordinal (CoralOrdinal  (None, 3)                19        \n"," )                                                               \n","                                                                 \n","=================================================================\n","Total params: 13,468,135\n","Trainable params: 3,385\n","Non-trainable params: 13,464,750\n","_________________________________________________________________\n","None\n"]}]},{"cell_type":"markdown","source":["**Prepare Tensor Datasets for Batch Processing: Training, Test and Validation Datasets**"],"metadata":{"id":"60QJ-5IMQx00"}},{"cell_type":"code","source":["### Training Data\n","dataset = tf.data.Dataset.from_tensor_slices(\n","  (tf.cast(np.array(X_train_indices)[..., tf.newaxis], tf.float32),\n","   tf.cast(np.array(y_train), tf.int64)))\n","\n","dataset = dataset.batch(batch_size)\n","\n","\n","## Testing and validation datasets\n","\n","## Get 80/20 split\n","testing_data_size = len(testing_data)\n","testing_split = int(np.floor(0.80*testing_data_size))\n","validatation_split = int(np.floor(0.20*testing_data_size))\n","\n","test_dataset = tf.data.Dataset.from_tensor_slices(\n","  (tf.cast(np.array(X_test_indices[:testing_split])[..., tf.newaxis], tf.float32),\n","   tf.cast(np.array(y_test[:testing_split]), tf.int64)))\n","\n","test_dataset = test_dataset.shuffle(50).batch(batch_size)\n","# without shuffling the test dataset.\n","# test_dataset = test_dataset.batch(batch_size)\n","\n","\n","val_dataset = tf.data.Dataset.from_tensor_slices(\n","  (tf.cast(np.array(X_test_indices[testing_split: testing_split+validatation_split])[..., tf.newaxis], tf.float32),\n","   tf.cast(np.array(y_test[testing_split: testing_split+validatation_split]), tf.int64)))\n","val_dataset = val_dataset.shuffle(50).batch(batch_size)\n"],"metadata":{"id":"SXFWs2kwm82M"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["training_data['RatingId']"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"tEKsjXXccN0o","executionInfo":{"status":"ok","timestamp":1651596826537,"user_tz":240,"elapsed":130,"user":{"displayName":"Lakshyana K C","userId":"03123992237616606989"}},"outputId":"3ed2f776-0a2e-4b59-88f3-c2cf3865827b"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0         5\n","1         5\n","2         4\n","3         5\n","4         5\n","         ..\n","201965    4\n","201966    4\n","201967    5\n","201968    5\n","201969    4\n","Name: RatingId, Length: 201970, dtype: category\n","Categories (4, int64): [2, 3, 4, 5]"]},"metadata":{},"execution_count":18}]},{"cell_type":"markdown","source":["**Balance the classes in the Imbalanced Dataset**"],"metadata":{"id":"0zYX9hB1RBSC"}},{"cell_type":"code","source":["from sklearn.utils.class_weight import compute_class_weight\n","\n","# Count samples per class\n","classes_two   = training_data[training_data['RatingId'] == 2]\n","classes_three = training_data[training_data['RatingId'] == 3]\n","classes_four  = training_data[training_data['RatingId'] == 4]\n","classes_five  = training_data[training_data['RatingId'] == 5]\n","\n","# Convert parts into NumPy arrays for weight computation\n","two_numpy = classes_two['RatingId'].to_numpy()\n","three_numpy = classes_three['RatingId'].to_numpy()\n","four_numpy = classes_four['RatingId'].to_numpy()\n","five_numpy = classes_five['RatingId'].to_numpy()\n","\n","all_together = np.concatenate((two_numpy, three_numpy, four_numpy, five_numpy))\n","unique_classes = np.unique(all_together)\n","\n","class_labels = np.array([0,1,2,3])\n","# Compute weights\n","class_weights = compute_class_weight(class_weight = \"balanced\", classes= np.unique(all_together), y= all_together)\n","class_weights = dict(zip(class_labels, class_weights))\n","\n","# weights = sklearn.utils.class_weight.compute_class_weight('balanced', unique_classes, all_together)\n","print(class_weights)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"TamucFvzaucx","executionInfo":{"status":"ok","timestamp":1651618338158,"user_tz":240,"elapsed":163,"user":{"displayName":"Lakshyana","userId":"14846287915491486779"}},"outputId":"9e55ede6-73ba-4a71-f8b4-777600c92242"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["{0: 14.951880367189814, 1: 5.128745556119858, 2: 0.8710709726391332, 3: 0.38608141793213135}\n"]}]},{"cell_type":"markdown","source":["**Model 1:**\n","\n","\n","---\n","\n","\n","Batch-size: 500, Epochs: 500, Learning Rate: 0.05\n","\n","\n","*Monitoring Validation Loss for Early Stopping*"],"metadata":{"id":"iPxmaicBRRNe"}},{"cell_type":"code","source":["%%time\n","from tensorflow.keras.callbacks import EarlyStopping, ModelCheckpoint\n","\n","\n","checkpoint_path = \"/content/gdrive/My Drive/FinalProject_LakshyanaKC_NhatPham/Models/training/cp.ckpt\"\n","checkpoint_dir = os.path.dirname(\"/content/gdrive/My Drive/FinalProject_LakshyanaKC_NhatPham/Models/\")\n","\n","\n","callbacks = [tf.keras.callbacks.EarlyStopping(\n","                        monitor='val_loss',\n","                        mode='min', \n","                        verbose=1, \n","                        patience = 50,\n","                        restore_best_weights = True),          \n","              ModelCheckpoint(filepath=checkpoint_path, monitor='val_loss', save_best_only=True, mode='min')]\n","\n","# callbacks = tf.keras.callbacks.ModelCheckpoint(filepath=checkpoint_path,\n","#                                                  save_weights_only=True,\n","#                                                  verbose=1)\n","\n","history = model.fit(dataset, \n","                    epochs = num_epochs,\n","                    validation_data = val_dataset,\n","                    class_weight = class_weights,\n","                    use_multiprocessing=True,\n","                    callbacks=callbacks\n","                    )\n","\n","\n","## Save the history\n","np.save('/content/gdrive/My Drive/FinalProject_LakshyanaKC_NhatPham/Models/training/model_history.npy',history.history)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"cRiLjRYneIzz","executionInfo":{"status":"ok","timestamp":1651552924401,"user_tz":240,"elapsed":672311,"user":{"displayName":"Lakshyana","userId":"14846287915491486779"}},"outputId":"e8a7f916-e570-4815-be65-57c49efe354a"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Epoch 1/500\n","400/404 [============================>.] - ETA: 0s - loss: 0.9821 - mean_absolute_error_labels: 0.4349 - f1_m: 1.4899 - precision_m: 0.9922 - recall_m: 2.9983INFO:tensorflow:Assets written to: /content/gdrive/My Drive/Colab Notebooks/CS6120NLP_FinalProject/Models/classifiers/training/cp.ckpt/assets\n","404/404 [==============================] - 100s 247ms/step - loss: 0.9818 - mean_absolute_error_labels: 0.4348 - f1_m: 1.4898 - precision_m: 0.9921 - recall_m: 2.9983 - val_loss: 0.9987 - val_mean_absolute_error_labels: 0.4415 - val_f1_m: 1.4793 - val_precision_m: 0.9817 - val_recall_m: 3.0000\n","Epoch 2/500\n","397/404 [============================>.] - ETA: 0s - loss: 0.9822 - mean_absolute_error_labels: 0.4350 - f1_m: 1.4893 - precision_m: 0.9915 - recall_m: 2.9991INFO:tensorflow:Assets written to: /content/gdrive/My Drive/Colab Notebooks/CS6120NLP_FinalProject/Models/classifiers/training/cp.ckpt/assets\n","404/404 [==============================] - 94s 233ms/step - loss: 0.9810 - mean_absolute_error_labels: 0.4347 - f1_m: 1.4892 - precision_m: 0.9914 - recall_m: 2.9991 - val_loss: 0.9987 - val_mean_absolute_error_labels: 0.4414 - val_f1_m: 1.4793 - val_precision_m: 0.9817 - val_recall_m: 3.0000\n","Epoch 3/500\n","404/404 [==============================] - 3s 7ms/step - loss: 0.9810 - mean_absolute_error_labels: 0.4346 - f1_m: 1.4892 - precision_m: 0.9914 - recall_m: 2.9992 - val_loss: 0.9987 - val_mean_absolute_error_labels: 0.4415 - val_f1_m: 1.4793 - val_precision_m: 0.9817 - val_recall_m: 3.0000\n","Epoch 4/500\n","404/404 [==============================] - 3s 7ms/step - loss: 0.9810 - mean_absolute_error_labels: 0.4346 - f1_m: 1.4892 - precision_m: 0.9914 - recall_m: 2.9992 - val_loss: 0.9987 - val_mean_absolute_error_labels: 0.4414 - val_f1_m: 1.4793 - val_precision_m: 0.9817 - val_recall_m: 3.0000\n","Epoch 5/500\n","404/404 [==============================] - 3s 7ms/step - loss: 0.9809 - mean_absolute_error_labels: 0.4346 - f1_m: 1.4892 - precision_m: 0.9914 - recall_m: 2.9992 - val_loss: 0.9987 - val_mean_absolute_error_labels: 0.4414 - val_f1_m: 1.4793 - val_precision_m: 0.9817 - val_recall_m: 3.0000\n","Epoch 6/500\n","404/404 [==============================] - 3s 7ms/step - loss: 0.9809 - mean_absolute_error_labels: 0.4347 - f1_m: 1.4892 - precision_m: 0.9914 - recall_m: 2.9992 - val_loss: 0.9987 - val_mean_absolute_error_labels: 0.4414 - val_f1_m: 1.4793 - val_precision_m: 0.9817 - val_recall_m: 3.0000\n","Epoch 7/500\n","404/404 [==============================] - 3s 7ms/step - loss: 0.9809 - mean_absolute_error_labels: 0.4346 - f1_m: 1.4892 - precision_m: 0.9914 - recall_m: 2.9992 - val_loss: 0.9987 - val_mean_absolute_error_labels: 0.4414 - val_f1_m: 1.4793 - val_precision_m: 0.9817 - val_recall_m: 3.0000\n","Epoch 8/500\n","404/404 [==============================] - 3s 7ms/step - loss: 0.9809 - mean_absolute_error_labels: 0.4346 - f1_m: 1.4892 - precision_m: 0.9914 - recall_m: 2.9992 - val_loss: 0.9987 - val_mean_absolute_error_labels: 0.4415 - val_f1_m: 1.4793 - val_precision_m: 0.9817 - val_recall_m: 3.0000\n","Epoch 9/500\n","404/404 [==============================] - 3s 7ms/step - loss: 0.9809 - mean_absolute_error_labels: 0.4346 - f1_m: 1.4892 - precision_m: 0.9914 - recall_m: 2.9992 - val_loss: 0.9987 - val_mean_absolute_error_labels: 0.4415 - val_f1_m: 1.4793 - val_precision_m: 0.9817 - val_recall_m: 3.0000\n","Epoch 10/500\n","404/404 [==============================] - 3s 7ms/step - loss: 0.9809 - mean_absolute_error_labels: 0.4346 - f1_m: 1.4892 - precision_m: 0.9914 - recall_m: 2.9992 - val_loss: 0.9987 - val_mean_absolute_error_labels: 0.4414 - val_f1_m: 1.4793 - val_precision_m: 0.9817 - val_recall_m: 3.0000\n","Epoch 11/500\n","404/404 [==============================] - 3s 7ms/step - loss: 0.9809 - mean_absolute_error_labels: 0.4346 - f1_m: 1.4892 - precision_m: 0.9914 - recall_m: 2.9992 - val_loss: 0.9987 - val_mean_absolute_error_labels: 0.4414 - val_f1_m: 1.4793 - val_precision_m: 0.9817 - val_recall_m: 3.0000\n","Epoch 12/500\n","404/404 [==============================] - 3s 7ms/step - loss: 0.9809 - mean_absolute_error_labels: 0.4346 - f1_m: 1.4892 - precision_m: 0.9914 - recall_m: 2.9992 - val_loss: 0.9987 - val_mean_absolute_error_labels: 0.4415 - val_f1_m: 1.4793 - val_precision_m: 0.9817 - val_recall_m: 3.0000\n","Epoch 13/500\n","400/404 [============================>.] - ETA: 0s - loss: 0.9812 - mean_absolute_error_labels: 0.4348 - f1_m: 1.4892 - precision_m: 0.9915 - recall_m: 2.9992INFO:tensorflow:Assets written to: /content/gdrive/My Drive/Colab Notebooks/CS6120NLP_FinalProject/Models/classifiers/training/cp.ckpt/assets\n","404/404 [==============================] - 83s 206ms/step - loss: 0.9809 - mean_absolute_error_labels: 0.4346 - f1_m: 1.4892 - precision_m: 0.9914 - recall_m: 2.9992 - val_loss: 0.9987 - val_mean_absolute_error_labels: 0.4414 - val_f1_m: 1.4793 - val_precision_m: 0.9817 - val_recall_m: 3.0000\n","Epoch 14/500\n","404/404 [==============================] - 3s 7ms/step - loss: 0.9810 - mean_absolute_error_labels: 0.4346 - f1_m: 1.4892 - precision_m: 0.9914 - recall_m: 2.9992 - val_loss: 0.9987 - val_mean_absolute_error_labels: 0.4414 - val_f1_m: 1.4793 - val_precision_m: 0.9817 - val_recall_m: 3.0000\n","Epoch 15/500\n","404/404 [==============================] - 3s 7ms/step - loss: 0.9809 - mean_absolute_error_labels: 0.4346 - f1_m: 1.4892 - precision_m: 0.9914 - recall_m: 2.9992 - val_loss: 0.9987 - val_mean_absolute_error_labels: 0.4414 - val_f1_m: 1.4793 - val_precision_m: 0.9817 - val_recall_m: 3.0000\n","Epoch 16/500\n","404/404 [==============================] - 3s 7ms/step - loss: 0.9809 - mean_absolute_error_labels: 0.4346 - f1_m: 1.4892 - precision_m: 0.9914 - recall_m: 2.9992 - val_loss: 0.9987 - val_mean_absolute_error_labels: 0.4414 - val_f1_m: 1.4793 - val_precision_m: 0.9817 - val_recall_m: 3.0000\n","Epoch 17/500\n","404/404 [==============================] - 3s 7ms/step - loss: 0.9809 - mean_absolute_error_labels: 0.4346 - f1_m: 1.4892 - precision_m: 0.9914 - recall_m: 2.9992 - val_loss: 0.9987 - val_mean_absolute_error_labels: 0.4414 - val_f1_m: 1.4793 - val_precision_m: 0.9817 - val_recall_m: 3.0000\n","Epoch 18/500\n","404/404 [==============================] - 3s 7ms/step - loss: 0.9809 - mean_absolute_error_labels: 0.4346 - f1_m: 1.4892 - precision_m: 0.9914 - recall_m: 2.9992 - val_loss: 0.9987 - val_mean_absolute_error_labels: 0.4414 - val_f1_m: 1.4793 - val_precision_m: 0.9817 - val_recall_m: 3.0000\n","Epoch 19/500\n","404/404 [==============================] - 3s 7ms/step - loss: 0.9809 - mean_absolute_error_labels: 0.4346 - f1_m: 1.4892 - precision_m: 0.9914 - recall_m: 2.9992 - val_loss: 0.9987 - val_mean_absolute_error_labels: 0.4414 - val_f1_m: 1.4793 - val_precision_m: 0.9817 - val_recall_m: 3.0000\n","Epoch 20/500\n","404/404 [==============================] - 3s 7ms/step - loss: 0.9809 - mean_absolute_error_labels: 0.4346 - f1_m: 1.4892 - precision_m: 0.9914 - recall_m: 2.9992 - val_loss: 0.9987 - val_mean_absolute_error_labels: 0.4414 - val_f1_m: 1.4793 - val_precision_m: 0.9817 - val_recall_m: 3.0000\n","Epoch 21/500\n","404/404 [==============================] - 3s 7ms/step - loss: 0.9809 - mean_absolute_error_labels: 0.4346 - f1_m: 1.4892 - precision_m: 0.9914 - recall_m: 2.9992 - val_loss: 0.9987 - val_mean_absolute_error_labels: 0.4415 - val_f1_m: 1.4793 - val_precision_m: 0.9817 - val_recall_m: 3.0000\n","Epoch 22/500\n","404/404 [==============================] - 3s 7ms/step - loss: 0.9809 - mean_absolute_error_labels: 0.4346 - f1_m: 1.4892 - precision_m: 0.9914 - recall_m: 2.9992 - val_loss: 0.9987 - val_mean_absolute_error_labels: 0.4414 - val_f1_m: 1.4793 - val_precision_m: 0.9817 - val_recall_m: 3.0000\n","Epoch 23/500\n","404/404 [==============================] - 3s 7ms/step - loss: 0.9809 - mean_absolute_error_labels: 0.4346 - f1_m: 1.4892 - precision_m: 0.9914 - recall_m: 2.9992 - val_loss: 0.9987 - val_mean_absolute_error_labels: 0.4414 - val_f1_m: 1.4793 - val_precision_m: 0.9817 - val_recall_m: 3.0000\n","Epoch 24/500\n","404/404 [==============================] - 3s 7ms/step - loss: 0.9809 - mean_absolute_error_labels: 0.4347 - f1_m: 1.4892 - precision_m: 0.9914 - recall_m: 2.9991 - val_loss: 0.9987 - val_mean_absolute_error_labels: 0.4414 - val_f1_m: 1.4793 - val_precision_m: 0.9817 - val_recall_m: 3.0000\n","Epoch 25/500\n","404/404 [==============================] - 3s 7ms/step - loss: 0.9809 - mean_absolute_error_labels: 0.4346 - f1_m: 1.4892 - precision_m: 0.9914 - recall_m: 2.9992 - val_loss: 0.9987 - val_mean_absolute_error_labels: 0.4415 - val_f1_m: 1.4793 - val_precision_m: 0.9817 - val_recall_m: 3.0000\n","Epoch 26/500\n","404/404 [==============================] - 3s 7ms/step - loss: 0.9809 - mean_absolute_error_labels: 0.4346 - f1_m: 1.4892 - precision_m: 0.9914 - recall_m: 2.9992 - val_loss: 0.9987 - val_mean_absolute_error_labels: 0.4415 - val_f1_m: 1.4793 - val_precision_m: 0.9817 - val_recall_m: 3.0000\n","Epoch 27/500\n","404/404 [==============================] - 3s 7ms/step - loss: 0.9809 - mean_absolute_error_labels: 0.4346 - f1_m: 1.4892 - precision_m: 0.9914 - recall_m: 2.9992 - val_loss: 0.9987 - val_mean_absolute_error_labels: 0.4414 - val_f1_m: 1.4793 - val_precision_m: 0.9817 - val_recall_m: 3.0000\n","Epoch 28/500\n","404/404 [==============================] - 3s 7ms/step - loss: 0.9809 - mean_absolute_error_labels: 0.4346 - f1_m: 1.4892 - precision_m: 0.9914 - recall_m: 2.9992 - val_loss: 0.9987 - val_mean_absolute_error_labels: 0.4415 - val_f1_m: 1.4793 - val_precision_m: 0.9817 - val_recall_m: 3.0000\n","Epoch 29/500\n","404/404 [==============================] - 3s 7ms/step - loss: 0.9809 - mean_absolute_error_labels: 0.4346 - f1_m: 1.4892 - precision_m: 0.9914 - recall_m: 2.9992 - val_loss: 0.9987 - val_mean_absolute_error_labels: 0.4415 - val_f1_m: 1.4793 - val_precision_m: 0.9817 - val_recall_m: 3.0000\n","Epoch 30/500\n","404/404 [==============================] - 3s 7ms/step - loss: 0.9809 - mean_absolute_error_labels: 0.4346 - f1_m: 1.4892 - precision_m: 0.9914 - recall_m: 2.9992 - val_loss: 0.9987 - val_mean_absolute_error_labels: 0.4415 - val_f1_m: 1.4793 - val_precision_m: 0.9817 - val_recall_m: 3.0000\n","Epoch 31/500\n","404/404 [==============================] - 3s 7ms/step - loss: 0.9809 - mean_absolute_error_labels: 0.4346 - f1_m: 1.4892 - precision_m: 0.9914 - recall_m: 2.9992 - val_loss: 0.9987 - val_mean_absolute_error_labels: 0.4414 - val_f1_m: 1.4793 - val_precision_m: 0.9817 - val_recall_m: 3.0000\n","Epoch 32/500\n","404/404 [==============================] - 3s 7ms/step - loss: 0.9809 - mean_absolute_error_labels: 0.4346 - f1_m: 1.4892 - precision_m: 0.9914 - recall_m: 2.9992 - val_loss: 0.9987 - val_mean_absolute_error_labels: 0.4415 - val_f1_m: 1.4793 - val_precision_m: 0.9817 - val_recall_m: 3.0000\n","Epoch 33/500\n","404/404 [==============================] - 3s 7ms/step - loss: 0.9809 - mean_absolute_error_labels: 0.4346 - f1_m: 1.4892 - precision_m: 0.9914 - recall_m: 2.9992 - val_loss: 0.9987 - val_mean_absolute_error_labels: 0.4415 - val_f1_m: 1.4793 - val_precision_m: 0.9817 - val_recall_m: 3.0000\n","Epoch 34/500\n","404/404 [==============================] - 3s 7ms/step - loss: 0.9809 - mean_absolute_error_labels: 0.4346 - f1_m: 1.4892 - precision_m: 0.9914 - recall_m: 2.9992 - val_loss: 0.9987 - val_mean_absolute_error_labels: 0.4415 - val_f1_m: 1.4793 - val_precision_m: 0.9817 - val_recall_m: 3.0000\n","Epoch 35/500\n","404/404 [==============================] - 3s 7ms/step - loss: 0.9809 - mean_absolute_error_labels: 0.4346 - f1_m: 1.4892 - precision_m: 0.9914 - recall_m: 2.9992 - val_loss: 0.9987 - val_mean_absolute_error_labels: 0.4414 - val_f1_m: 1.4793 - val_precision_m: 0.9817 - val_recall_m: 3.0000\n","Epoch 36/500\n","404/404 [==============================] - 3s 7ms/step - loss: 0.9809 - mean_absolute_error_labels: 0.4346 - f1_m: 1.4892 - precision_m: 0.9914 - recall_m: 2.9992 - val_loss: 0.9987 - val_mean_absolute_error_labels: 0.4414 - val_f1_m: 1.4793 - val_precision_m: 0.9817 - val_recall_m: 3.0000\n","Epoch 37/500\n","404/404 [==============================] - 3s 7ms/step - loss: 0.9809 - mean_absolute_error_labels: 0.4346 - f1_m: 1.4892 - precision_m: 0.9914 - recall_m: 2.9992 - val_loss: 0.9987 - val_mean_absolute_error_labels: 0.4414 - val_f1_m: 1.4793 - val_precision_m: 0.9817 - val_recall_m: 3.0000\n","Epoch 38/500\n","404/404 [==============================] - 3s 7ms/step - loss: 0.9809 - mean_absolute_error_labels: 0.4346 - f1_m: 1.4892 - precision_m: 0.9914 - recall_m: 2.9992 - val_loss: 0.9987 - val_mean_absolute_error_labels: 0.4414 - val_f1_m: 1.4793 - val_precision_m: 0.9817 - val_recall_m: 3.0000\n","Epoch 39/500\n","404/404 [==============================] - 3s 7ms/step - loss: 0.9809 - mean_absolute_error_labels: 0.4346 - f1_m: 1.4892 - precision_m: 0.9914 - recall_m: 2.9992 - val_loss: 0.9987 - val_mean_absolute_error_labels: 0.4415 - val_f1_m: 1.4793 - val_precision_m: 0.9817 - val_recall_m: 3.0000\n","Epoch 40/500\n","404/404 [==============================] - 3s 7ms/step - loss: 0.9809 - mean_absolute_error_labels: 0.4346 - f1_m: 1.4892 - precision_m: 0.9914 - recall_m: 2.9992 - val_loss: 0.9987 - val_mean_absolute_error_labels: 0.4415 - val_f1_m: 1.4793 - val_precision_m: 0.9817 - val_recall_m: 3.0000\n","Epoch 41/500\n","404/404 [==============================] - 3s 7ms/step - loss: 0.9822 - mean_absolute_error_labels: 0.4346 - f1_m: 1.4892 - precision_m: 0.9914 - recall_m: 2.9992 - val_loss: 0.9987 - val_mean_absolute_error_labels: 0.4415 - val_f1_m: 1.4793 - val_precision_m: 0.9817 - val_recall_m: 3.0000\n","Epoch 42/500\n","404/404 [==============================] - 3s 7ms/step - loss: 0.9816 - mean_absolute_error_labels: 0.4346 - f1_m: 1.4892 - precision_m: 0.9914 - recall_m: 2.9991 - val_loss: 0.9987 - val_mean_absolute_error_labels: 0.4415 - val_f1_m: 1.4793 - val_precision_m: 0.9817 - val_recall_m: 3.0000\n","Epoch 43/500\n","404/404 [==============================] - 3s 7ms/step - loss: 0.9809 - mean_absolute_error_labels: 0.4346 - f1_m: 1.4892 - precision_m: 0.9914 - recall_m: 2.9992 - val_loss: 0.9987 - val_mean_absolute_error_labels: 0.4414 - val_f1_m: 1.4793 - val_precision_m: 0.9817 - val_recall_m: 3.0000\n","Epoch 44/500\n","404/404 [==============================] - 3s 7ms/step - loss: 0.9809 - mean_absolute_error_labels: 0.4346 - f1_m: 1.4892 - precision_m: 0.9914 - recall_m: 2.9992 - val_loss: 0.9987 - val_mean_absolute_error_labels: 0.4415 - val_f1_m: 1.4793 - val_precision_m: 0.9817 - val_recall_m: 3.0000\n","Epoch 45/500\n","404/404 [==============================] - 3s 7ms/step - loss: 0.9809 - mean_absolute_error_labels: 0.4346 - f1_m: 1.4892 - precision_m: 0.9914 - recall_m: 2.9992 - val_loss: 0.9987 - val_mean_absolute_error_labels: 0.4415 - val_f1_m: 1.4793 - val_precision_m: 0.9817 - val_recall_m: 3.0000\n","Epoch 46/500\n","404/404 [==============================] - 3s 7ms/step - loss: 0.9809 - mean_absolute_error_labels: 0.4346 - f1_m: 1.4892 - precision_m: 0.9914 - recall_m: 2.9992 - val_loss: 0.9987 - val_mean_absolute_error_labels: 0.4414 - val_f1_m: 1.4793 - val_precision_m: 0.9817 - val_recall_m: 3.0000\n","Epoch 47/500\n","404/404 [==============================] - 3s 7ms/step - loss: 0.9809 - mean_absolute_error_labels: 0.4346 - f1_m: 1.4892 - precision_m: 0.9914 - recall_m: 2.9992 - val_loss: 0.9987 - val_mean_absolute_error_labels: 0.4415 - val_f1_m: 1.4793 - val_precision_m: 0.9817 - val_recall_m: 3.0000\n","Epoch 48/500\n","404/404 [==============================] - 3s 7ms/step - loss: 0.9809 - mean_absolute_error_labels: 0.4346 - f1_m: 1.4892 - precision_m: 0.9914 - recall_m: 2.9992 - val_loss: 0.9987 - val_mean_absolute_error_labels: 0.4415 - val_f1_m: 1.4793 - val_precision_m: 0.9817 - val_recall_m: 3.0000\n","Epoch 49/500\n","404/404 [==============================] - 3s 7ms/step - loss: 0.9809 - mean_absolute_error_labels: 0.4346 - f1_m: 1.4892 - precision_m: 0.9914 - recall_m: 2.9992 - val_loss: 0.9987 - val_mean_absolute_error_labels: 0.4414 - val_f1_m: 1.4793 - val_precision_m: 0.9817 - val_recall_m: 3.0000\n","Epoch 50/500\n","404/404 [==============================] - 3s 7ms/step - loss: 0.9809 - mean_absolute_error_labels: 0.4346 - f1_m: 1.4892 - precision_m: 0.9914 - recall_m: 2.9992 - val_loss: 0.9987 - val_mean_absolute_error_labels: 0.4414 - val_f1_m: 1.4793 - val_precision_m: 0.9817 - val_recall_m: 3.0000\n","Epoch 51/500\n","404/404 [==============================] - 3s 7ms/step - loss: 0.9809 - mean_absolute_error_labels: 0.4346 - f1_m: 1.4892 - precision_m: 0.9914 - recall_m: 2.9992 - val_loss: 0.9987 - val_mean_absolute_error_labels: 0.4415 - val_f1_m: 1.4793 - val_precision_m: 0.9817 - val_recall_m: 3.0000\n","Epoch 52/500\n","404/404 [==============================] - 3s 7ms/step - loss: 0.9809 - mean_absolute_error_labels: 0.4346 - f1_m: 1.4892 - precision_m: 0.9914 - recall_m: 2.9992 - val_loss: 0.9987 - val_mean_absolute_error_labels: 0.4414 - val_f1_m: 1.4793 - val_precision_m: 0.9817 - val_recall_m: 3.0000\n","Epoch 53/500\n","404/404 [==============================] - 3s 7ms/step - loss: 0.9809 - mean_absolute_error_labels: 0.4346 - f1_m: 1.4892 - precision_m: 0.9914 - recall_m: 2.9992 - val_loss: 0.9987 - val_mean_absolute_error_labels: 0.4414 - val_f1_m: 1.4793 - val_precision_m: 0.9817 - val_recall_m: 3.0000\n","Epoch 54/500\n","404/404 [==============================] - 3s 7ms/step - loss: 0.9809 - mean_absolute_error_labels: 0.4346 - f1_m: 1.4892 - precision_m: 0.9914 - recall_m: 2.9992 - val_loss: 0.9987 - val_mean_absolute_error_labels: 0.4414 - val_f1_m: 1.4793 - val_precision_m: 0.9817 - val_recall_m: 3.0000\n","Epoch 55/500\n","404/404 [==============================] - 3s 7ms/step - loss: 0.9809 - mean_absolute_error_labels: 0.4347 - f1_m: 1.4892 - precision_m: 0.9914 - recall_m: 2.9991 - val_loss: 0.9987 - val_mean_absolute_error_labels: 0.4414 - val_f1_m: 1.4793 - val_precision_m: 0.9817 - val_recall_m: 3.0000\n","Epoch 56/500\n","404/404 [==============================] - 3s 7ms/step - loss: 0.9809 - mean_absolute_error_labels: 0.4346 - f1_m: 1.4892 - precision_m: 0.9914 - recall_m: 2.9992 - val_loss: 0.9987 - val_mean_absolute_error_labels: 0.4414 - val_f1_m: 1.4793 - val_precision_m: 0.9817 - val_recall_m: 3.0000\n","Epoch 57/500\n","404/404 [==============================] - 3s 7ms/step - loss: 0.9809 - mean_absolute_error_labels: 0.4346 - f1_m: 1.4892 - precision_m: 0.9914 - recall_m: 2.9992 - val_loss: 0.9987 - val_mean_absolute_error_labels: 0.4414 - val_f1_m: 1.4793 - val_precision_m: 0.9817 - val_recall_m: 3.0000\n","Epoch 58/500\n","404/404 [==============================] - 3s 7ms/step - loss: 0.9809 - mean_absolute_error_labels: 0.4346 - f1_m: 1.4892 - precision_m: 0.9914 - recall_m: 2.9992 - val_loss: 0.9987 - val_mean_absolute_error_labels: 0.4414 - val_f1_m: 1.4793 - val_precision_m: 0.9817 - val_recall_m: 3.0000\n","Epoch 59/500\n","404/404 [==============================] - 3s 7ms/step - loss: 0.9809 - mean_absolute_error_labels: 0.4346 - f1_m: 1.4892 - precision_m: 0.9914 - recall_m: 2.9992 - val_loss: 0.9987 - val_mean_absolute_error_labels: 0.4414 - val_f1_m: 1.4793 - val_precision_m: 0.9817 - val_recall_m: 3.0000\n","Epoch 60/500\n","404/404 [==============================] - 3s 7ms/step - loss: 0.9809 - mean_absolute_error_labels: 0.4346 - f1_m: 1.4892 - precision_m: 0.9914 - recall_m: 2.9992 - val_loss: 0.9987 - val_mean_absolute_error_labels: 0.4414 - val_f1_m: 1.4793 - val_precision_m: 0.9817 - val_recall_m: 3.0000\n","Epoch 61/500\n","404/404 [==============================] - 3s 7ms/step - loss: 0.9809 - mean_absolute_error_labels: 0.4346 - f1_m: 1.4892 - precision_m: 0.9914 - recall_m: 2.9992 - val_loss: 0.9987 - val_mean_absolute_error_labels: 0.4415 - val_f1_m: 1.4793 - val_precision_m: 0.9817 - val_recall_m: 3.0000\n","Epoch 62/500\n","404/404 [==============================] - 3s 7ms/step - loss: 0.9809 - mean_absolute_error_labels: 0.4346 - f1_m: 1.4892 - precision_m: 0.9914 - recall_m: 2.9992 - val_loss: 0.9987 - val_mean_absolute_error_labels: 0.4414 - val_f1_m: 1.4793 - val_precision_m: 0.9817 - val_recall_m: 3.0000\n","Epoch 63/500\n","399/404 [============================>.] - ETA: 0s - loss: 0.9819 - mean_absolute_error_labels: 0.4350 - f1_m: 1.4892 - precision_m: 0.9915 - recall_m: 2.9991Restoring model weights from the end of the best epoch: 13.\n","404/404 [==============================] - 3s 7ms/step - loss: 0.9810 - mean_absolute_error_labels: 0.4346 - f1_m: 1.4892 - precision_m: 0.9914 - recall_m: 2.9992 - val_loss: 0.9987 - val_mean_absolute_error_labels: 0.4414 - val_f1_m: 1.4793 - val_precision_m: 0.9817 - val_recall_m: 3.0000\n","Epoch 63: early stopping\n","CPU times: user 6min 59s, sys: 1min 23s, total: 8min 23s\n","Wall time: 11min 11s\n"]}]},{"cell_type":"markdown","source":["**Evaluate Model 1**"],"metadata":{"id":"v6hm89Q9Ru1s"}},{"cell_type":"code","source":["from sklearn.metrics import precision_score, f1_score, classification_report\n","from sklearn.metrics import ConfusionMatrixDisplay\n","from sklearn.metrics import confusion_matrix\n","import matplotlib.pyplot as plt\n","import numpy as np\n","\n","from sklearn.metrics import mean_absolute_error\n","\n","\n","\n","### Update the label from 0-3 back to original ratings 2-5\n","def update_labels(label):\n","  return label+2\n","\n","\n","## Get the test dataset\n","test_dataset = tf.data.Dataset.from_tensor_slices(\n","  (tf.cast(np.array(X_test_indices)[..., tf.newaxis], tf.float32),\n","   tf.cast(np.array(y_test), tf.int64)))\n","\n","test_dataset = test_dataset.shuffle(50).batch(batch_size)\n","\n","checkpoint_path = \"/content/gdrive/My Drive/FinalProject_LakshyanaKC_NhatPham/Data/Models/classifiers/training/cp.ckpt\"\n","checkpoint_dir = os.path.dirname(\"/content/gdrive/My Drive/Colab Notebooks/CS6120NLP_FinalProject/Models/classifiers/\")\n","\n","## Create model instance\n","model = create_model()\n","\n","# Loads the weights\n","model.load_weights(checkpoint_path)\n","\n","## Evaluate the model on test dataset\n","model.evaluate(test_dataset)\n","\n","# Note that these are ordinal (cumulative) logits, not probabilities or regular logits.\n","ordinal_logits = model.predict(test_dataset)\n","\n","# Convert from logits to label probabilities. This is initially a tensorflow tensor.\n","tensor_probs = coral.ordinal_softmax(ordinal_logits)\n","\n","# Convert the tensor into a pandas dataframe.\n","probs_df = pd.DataFrame(tensor_probs.numpy())\n","\n","predictions = pd.DataFrame()\n","predictions[\"predicted_label\"]  = np.argmax(tensor_probs.numpy(), axis = 1)\n","predictions[\"true_label\"]       = y_test\n","\n","predictions[\"predicted_label\"]  = predictions[\"predicted_label\"].apply(update_labels)\n","predictions[\"true_label\"]       = predictions[\"true_label\"].apply(update_labels)\n","\n","\n","y_pred = predictions[\"predicted_label\"].to_numpy()\n","y_true = predictions[\"true_label\"].to_numpy()\n","labels =  ['Class 1-2', 'Class 3', 'Class 4', 'Class 5']\n","\n","cm = confusion_matrix(y_true, y_pred)\n","\n","disp = ConfusionMatrixDisplay(confusion_matrix=cm, display_labels=labels)\n","\n","disp.plot(cmap=plt.cm.Blues)\n","plt.show()\n","\n","\n","predictions = pd.DataFrame()\n","predictions[\"predicted_label\"]  = np.argmax(tensor_probs.numpy(), axis = 1)\n","predictions[\"true_label\"]       = y_test\n","\n","# y_pred = predictions[\"predicted_label\"].to_numpy()\n","# y_true = predictions[\"true_label\"].to_numpy()\n","\n","target_names = ['class 2', 'class 3', 'class 4','class 5']\n","print(\"\\n\\tMean Absolute Error: \",mean_absolute_error(y_true,y_pred),\"\\n\")\n","print(classification_report(y_true, y_pred, target_names=target_names))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":677},"id":"djjOLdGcRP-1","executionInfo":{"status":"ok","timestamp":1651594970043,"user_tz":240,"elapsed":5648,"user":{"displayName":"Lakshyana K C","userId":"03123992237616606989"}},"outputId":"f1dba68b-5a2e-49cb-e929-e79fd1e32438"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["225/225 [==============================] - 2s 4ms/step - loss: 85.7614 - mean_absolute_error_labels: 0.4696 - f1_m: 1.4688 - precision_m: 0.9846 - recall_m: 2.8899\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 2 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}},{"output_type":"stream","name":"stdout","text":["\n","\tMean Absolute Error:  0.46794605192799 \n","\n","              precision    recall  f1-score   support\n","\n","     class 2       0.00      0.00      0.00      1098\n","     class 3       0.06      0.01      0.01      3299\n","     class 4       0.29      0.10      0.14     19193\n","     class 5       0.65      0.90      0.75     43734\n","\n","    accuracy                           0.61     67324\n","   macro avg       0.25      0.25      0.23     67324\n","weighted avg       0.51      0.61      0.53     67324\n","\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/sklearn/metrics/_classification.py:1318: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.7/dist-packages/sklearn/metrics/_classification.py:1318: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.7/dist-packages/sklearn/metrics/_classification.py:1318: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n"]}]},{"cell_type":"code","source":["# xx = np.array([1,2,3])\n","# width = 0.15\n","# gb_prf = np.array([0.83, 0.83, 0.83])\n","# ax = plt.subplot(111)\n","# ax.bar(xx - width, height=np.array(nb_prf), width=width, color='b', align='center', label='NB', tick_label=['Precision', 'Recall', 'f1'])\n","# ax.bar(xx ,height=np.array(log_prf), width=width, color='g', align='center', label='Log_Reg')\n","# ax.bar(xx + width, height=np.array(svm_prf), width=width, color='r', align='center', label='SVM')\n","# ax.bar(xx + 2*width, height=np.array(rf_prf), width=width, color='y', align='center', label='Random Forest')\n","\n","# plt.xlabel('Classification Metrics')\n","# plt.ylabel('Scores')\n","# plt.legend(loc='lower right')\n","# plt.show()"],"metadata":{"id":"mw3enwBVuEOf"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["**Model 2**\n","\n","\n","---\n","\n","\n","learning_rate = 0.01\n","batch_size = 200\n","num_epochs = 500"],"metadata":{"id":"uWPJ2jB9vksP"}},{"cell_type":"code","source":["%%time\n","from tensorflow.keras.callbacks import EarlyStopping, ModelCheckpoint\n","\n","\n","# Hyperparameters\n","learning_rate = 0.1\n","batch_size = 500\n","num_epochs = 100\n","\n","\n","checkpoint_path = \"/content/gdrive/My Drive/Colab Notebooks/CS6120NLP_FinalProject/Models/classifiers/training/cp_one_metric_mae.ckpt\"\n","checkpoint_dir = os.path.dirname(\"/content/gdrive/My Drive/Colab Notebooks/CS6120NLP_FinalProject/Models/classifiers/\")\n","\n","## Create model instance\n","model = create_model()\n","\n","# Loads the weights\n","model.load_weights(\"/content/gdrive/My Drive/Colab Notebooks/CS6120NLP_FinalProject/Models/classifiers/ordinal_classifier_main\")\n","\n","callbacks = [tf.keras.callbacks.EarlyStopping(\n","                        monitor='mean_absolute_error_labels',\n","                        # mode='min', \n","                        verbose=1, \n","                        patience = 50,\n","                        restore_best_weights = False\n","                        ),          \n","              ModelCheckpoint(filepath=checkpoint_path, \n","                              monitor='mean_absolute_error_labels', \n","\n","                              min_delta = 0.001,\n","                              # save_best_only=True\n","                              # ,mode='min'\n","                              )]\n","\n","history = model.fit(dataset, \n","                    epochs = num_epochs,\n","                    validation_data = val_dataset,\n","                    # validation_split = 0.2,\n","                    class_weight = class_weights,\n","                    use_multiprocessing=True,\n","                    callbacks=callbacks\n","                    )\n","\n","\n","## Save the history\n","np.save('/content/gdrive/My Drive/Colab Notebooks/CS6120NLP_FinalProject/Models/classifiers/training/model_history_one_metric_mae.npy',history.history)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ubJnIdVsyAYb","outputId":"d0e827ee-3be1-4efb-a2f7-a3ff30757e90","executionInfo":{"status":"ok","timestamp":1651623589380,"user_tz":240,"elapsed":1465165,"user":{"displayName":"Lakshyana","userId":"14846287915491486779"}}},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Epoch 1/100\n","666/674 [============================>.] - ETA: 0s - loss: 1.1791 - mean_absolute_error_labels: 0.4648INFO:tensorflow:Assets written to: /content/gdrive/My Drive/Colab Notebooks/CS6120NLP_FinalProject/Models/classifiers/training/cp_one_metric_mae.ckpt/assets\n","674/674 [==============================] - 81s 120ms/step - loss: 1.1767 - mean_absolute_error_labels: 0.4642 - val_loss: 0.9987 - val_mean_absolute_error_labels: 0.4416\n","Epoch 2/100\n","664/674 [============================>.] - ETA: 0s - loss: 0.9849 - mean_absolute_error_labels: 0.4350INFO:tensorflow:Assets written to: /content/gdrive/My Drive/Colab Notebooks/CS6120NLP_FinalProject/Models/classifiers/training/cp_one_metric_mae.ckpt/assets\n","674/674 [==============================] - 85s 126ms/step - loss: 0.9841 - mean_absolute_error_labels: 0.4347 - val_loss: 0.9990 - val_mean_absolute_error_labels: 0.4415\n","Epoch 3/100\n","671/674 [============================>.] - ETA: 0s - loss: 0.9848 - mean_absolute_error_labels: 0.4349INFO:tensorflow:Assets written to: /content/gdrive/My Drive/Colab Notebooks/CS6120NLP_FinalProject/Models/classifiers/training/cp_one_metric_mae.ckpt/assets\n","674/674 [==============================] - 70s 103ms/step - loss: 0.9841 - mean_absolute_error_labels: 0.4346 - val_loss: 0.9991 - val_mean_absolute_error_labels: 0.4416\n","Epoch 4/100\n","672/674 [============================>.] - ETA: 0s - loss: 0.9846 - mean_absolute_error_labels: 0.4348INFO:tensorflow:Assets written to: /content/gdrive/My Drive/Colab Notebooks/CS6120NLP_FinalProject/Models/classifiers/training/cp_one_metric_mae.ckpt/assets\n","674/674 [==============================] - 90s 134ms/step - loss: 0.9841 - mean_absolute_error_labels: 0.4346 - val_loss: 0.9992 - val_mean_absolute_error_labels: 0.4414\n","Epoch 5/100\n","665/674 [============================>.] - ETA: 0s - loss: 0.9850 - mean_absolute_error_labels: 0.4350INFO:tensorflow:Assets written to: /content/gdrive/My Drive/Colab Notebooks/CS6120NLP_FinalProject/Models/classifiers/training/cp_one_metric_mae.ckpt/assets\n","674/674 [==============================] - 70s 104ms/step - loss: 0.9841 - mean_absolute_error_labels: 0.4346 - val_loss: 0.9993 - val_mean_absolute_error_labels: 0.4415\n","Epoch 6/100\n","666/674 [============================>.] - ETA: 0s - loss: 0.9844 - mean_absolute_error_labels: 0.4349INFO:tensorflow:Assets written to: /content/gdrive/My Drive/Colab Notebooks/CS6120NLP_FinalProject/Models/classifiers/training/cp_one_metric_mae.ckpt/assets\n","674/674 [==============================] - 74s 110ms/step - loss: 0.9841 - mean_absolute_error_labels: 0.4346 - val_loss: 0.9994 - val_mean_absolute_error_labels: 0.4415\n","Epoch 7/100\n","672/674 [============================>.] - ETA: 0s - loss: 0.9846 - mean_absolute_error_labels: 0.4348INFO:tensorflow:Assets written to: /content/gdrive/My Drive/Colab Notebooks/CS6120NLP_FinalProject/Models/classifiers/training/cp_one_metric_mae.ckpt/assets\n","674/674 [==============================] - 76s 113ms/step - loss: 0.9841 - mean_absolute_error_labels: 0.4346 - val_loss: 0.9994 - val_mean_absolute_error_labels: 0.4415\n","Epoch 8/100\n","666/674 [============================>.] - ETA: 0s - loss: 0.9844 - mean_absolute_error_labels: 0.4349INFO:tensorflow:Assets written to: /content/gdrive/My Drive/Colab Notebooks/CS6120NLP_FinalProject/Models/classifiers/training/cp_one_metric_mae.ckpt/assets\n","674/674 [==============================] - 84s 124ms/step - loss: 0.9842 - mean_absolute_error_labels: 0.4346 - val_loss: 0.9994 - val_mean_absolute_error_labels: 0.4415\n","Epoch 9/100\n","665/674 [============================>.] - ETA: 0s - loss: 0.9850 - mean_absolute_error_labels: 0.4350INFO:tensorflow:Assets written to: /content/gdrive/My Drive/Colab Notebooks/CS6120NLP_FinalProject/Models/classifiers/training/cp_one_metric_mae.ckpt/assets\n","674/674 [==============================] - 73s 108ms/step - loss: 0.9841 - mean_absolute_error_labels: 0.4346 - val_loss: 0.9994 - val_mean_absolute_error_labels: 0.4415\n","Epoch 10/100\n","674/674 [==============================] - ETA: 0s - loss: 0.9842 - mean_absolute_error_labels: 0.4346INFO:tensorflow:Assets written to: /content/gdrive/My Drive/Colab Notebooks/CS6120NLP_FinalProject/Models/classifiers/training/cp_one_metric_mae.ckpt/assets\n","674/674 [==============================] - 71s 106ms/step - loss: 0.9842 - mean_absolute_error_labels: 0.4346 - val_loss: 0.9994 - val_mean_absolute_error_labels: 0.4415\n","Epoch 11/100\n","671/674 [============================>.] - ETA: 0s - loss: 0.9848 - mean_absolute_error_labels: 0.4348INFO:tensorflow:Assets written to: /content/gdrive/My Drive/Colab Notebooks/CS6120NLP_FinalProject/Models/classifiers/training/cp_one_metric_mae.ckpt/assets\n","674/674 [==============================] - 70s 105ms/step - loss: 0.9841 - mean_absolute_error_labels: 0.4346 - val_loss: 0.9994 - val_mean_absolute_error_labels: 0.4415\n","Epoch 12/100\n","673/674 [============================>.] - ETA: 0s - loss: 0.9843 - mean_absolute_error_labels: 0.4347INFO:tensorflow:Assets written to: /content/gdrive/My Drive/Colab Notebooks/CS6120NLP_FinalProject/Models/classifiers/training/cp_one_metric_mae.ckpt/assets\n","674/674 [==============================] - 72s 106ms/step - loss: 0.9841 - mean_absolute_error_labels: 0.4346 - val_loss: 0.9994 - val_mean_absolute_error_labels: 0.4415\n","Epoch 13/100\n","668/674 [============================>.] - ETA: 0s - loss: 0.9850 - mean_absolute_error_labels: 0.4349INFO:tensorflow:Assets written to: /content/gdrive/My Drive/Colab Notebooks/CS6120NLP_FinalProject/Models/classifiers/training/cp_one_metric_mae.ckpt/assets\n","674/674 [==============================] - 70s 104ms/step - loss: 0.9841 - mean_absolute_error_labels: 0.4346 - val_loss: 0.9994 - val_mean_absolute_error_labels: 0.4414\n","Epoch 14/100\n","664/674 [============================>.] - ETA: 0s - loss: 0.9851 - mean_absolute_error_labels: 0.4350INFO:tensorflow:Assets written to: /content/gdrive/My Drive/Colab Notebooks/CS6120NLP_FinalProject/Models/classifiers/training/cp_one_metric_mae.ckpt/assets\n","674/674 [==============================] - 73s 109ms/step - loss: 0.9843 - mean_absolute_error_labels: 0.4346 - val_loss: 0.9994 - val_mean_absolute_error_labels: 0.4415\n","Epoch 15/100\n","671/674 [============================>.] - ETA: 0s - loss: 0.9848 - mean_absolute_error_labels: 0.4348INFO:tensorflow:Assets written to: /content/gdrive/My Drive/Colab Notebooks/CS6120NLP_FinalProject/Models/classifiers/training/cp_one_metric_mae.ckpt/assets\n","674/674 [==============================] - 76s 113ms/step - loss: 0.9841 - mean_absolute_error_labels: 0.4346 - val_loss: 0.9994 - val_mean_absolute_error_labels: 0.4415\n","Epoch 16/100\n","666/674 [============================>.] - ETA: 0s - loss: 0.9844 - mean_absolute_error_labels: 0.4349INFO:tensorflow:Assets written to: /content/gdrive/My Drive/Colab Notebooks/CS6120NLP_FinalProject/Models/classifiers/training/cp_one_metric_mae.ckpt/assets\n","674/674 [==============================] - 74s 109ms/step - loss: 0.9841 - mean_absolute_error_labels: 0.4346 - val_loss: 0.9994 - val_mean_absolute_error_labels: 0.4415\n","Epoch 17/100\n","671/674 [============================>.] - ETA: 0s - loss: 0.9854 - mean_absolute_error_labels: 0.4349INFO:tensorflow:Assets written to: /content/gdrive/My Drive/Colab Notebooks/CS6120NLP_FinalProject/Models/classifiers/training/cp_one_metric_mae.ckpt/assets\n","674/674 [==============================] - 74s 110ms/step - loss: 0.9848 - mean_absolute_error_labels: 0.4346 - val_loss: 0.9994 - val_mean_absolute_error_labels: 0.4415\n","Epoch 18/100\n","667/674 [============================>.] - ETA: 0s - loss: 0.9854 - mean_absolute_error_labels: 0.4348INFO:tensorflow:Assets written to: /content/gdrive/My Drive/Colab Notebooks/CS6120NLP_FinalProject/Models/classifiers/training/cp_one_metric_mae.ckpt/assets\n","674/674 [==============================] - 75s 111ms/step - loss: 0.9852 - mean_absolute_error_labels: 0.4346 - val_loss: 0.9995 - val_mean_absolute_error_labels: 0.4416\n","Epoch 19/100\n","674/674 [==============================] - ETA: 0s - loss: 0.9843 - mean_absolute_error_labels: 0.4346INFO:tensorflow:Assets written to: /content/gdrive/My Drive/Colab Notebooks/CS6120NLP_FinalProject/Models/classifiers/training/cp_one_metric_mae.ckpt/assets\n","674/674 [==============================] - 71s 106ms/step - loss: 0.9843 - mean_absolute_error_labels: 0.4346 - val_loss: 0.9994 - val_mean_absolute_error_labels: 0.4415\n","Epoch 20/100\n","664/674 [============================>.] - ETA: 0s - loss: 0.9851 - mean_absolute_error_labels: 0.4349INFO:tensorflow:Assets written to: /content/gdrive/My Drive/Colab Notebooks/CS6120NLP_FinalProject/Models/classifiers/training/cp_one_metric_mae.ckpt/assets\n","674/674 [==============================] - 71s 105ms/step - loss: 0.9843 - mean_absolute_error_labels: 0.4346 - val_loss: 0.9994 - val_mean_absolute_error_labels: 0.4415\n","Epoch 21/100\n","671/674 [============================>.] - ETA: 0s - loss: 0.9848 - mean_absolute_error_labels: 0.4348INFO:tensorflow:Assets written to: /content/gdrive/My Drive/Colab Notebooks/CS6120NLP_FinalProject/Models/classifiers/training/cp_one_metric_mae.ckpt/assets\n","674/674 [==============================] - 72s 106ms/step - loss: 0.9841 - mean_absolute_error_labels: 0.4346 - val_loss: 0.9994 - val_mean_absolute_error_labels: 0.4416\n","Epoch 22/100\n","665/674 [============================>.] - ETA: 0s - loss: 0.9850 - mean_absolute_error_labels: 0.4350INFO:tensorflow:Assets written to: /content/gdrive/My Drive/Colab Notebooks/CS6120NLP_FinalProject/Models/classifiers/training/cp_one_metric_mae.ckpt/assets\n","674/674 [==============================] - 75s 111ms/step - loss: 0.9841 - mean_absolute_error_labels: 0.4346 - val_loss: 0.9994 - val_mean_absolute_error_labels: 0.4415\n","Epoch 23/100\n","674/674 [==============================] - ETA: 0s - loss: 0.9841 - mean_absolute_error_labels: 0.4346INFO:tensorflow:Assets written to: /content/gdrive/My Drive/Colab Notebooks/CS6120NLP_FinalProject/Models/classifiers/training/cp_one_metric_mae.ckpt/assets\n","674/674 [==============================] - 71s 105ms/step - loss: 0.9841 - mean_absolute_error_labels: 0.4346 - val_loss: 0.9994 - val_mean_absolute_error_labels: 0.4415\n","Epoch 24/100\n","666/674 [============================>.] - ETA: 0s - loss: 0.9844 - mean_absolute_error_labels: 0.4349INFO:tensorflow:Assets written to: /content/gdrive/My Drive/Colab Notebooks/CS6120NLP_FinalProject/Models/classifiers/training/cp_one_metric_mae.ckpt/assets\n","674/674 [==============================] - 73s 109ms/step - loss: 0.9841 - mean_absolute_error_labels: 0.4346 - val_loss: 0.9994 - val_mean_absolute_error_labels: 0.4415\n","Epoch 25/100\n","670/674 [============================>.] - ETA: 0s - loss: 0.9848 - mean_absolute_error_labels: 0.4349INFO:tensorflow:Assets written to: /content/gdrive/My Drive/Colab Notebooks/CS6120NLP_FinalProject/Models/classifiers/training/cp_one_metric_mae.ckpt/assets\n","674/674 [==============================] - 71s 105ms/step - loss: 0.9842 - mean_absolute_error_labels: 0.4346 - val_loss: 0.9994 - val_mean_absolute_error_labels: 0.4415\n","Epoch 26/100\n","672/674 [============================>.] - ETA: 0s - loss: 0.9846 - mean_absolute_error_labels: 0.4348INFO:tensorflow:Assets written to: /content/gdrive/My Drive/Colab Notebooks/CS6120NLP_FinalProject/Models/classifiers/training/cp_one_metric_mae.ckpt/assets\n","674/674 [==============================] - 74s 109ms/step - loss: 0.9841 - mean_absolute_error_labels: 0.4346 - val_loss: 0.9994 - val_mean_absolute_error_labels: 0.4416\n","Epoch 27/100\n","669/674 [============================>.] - ETA: 0s - loss: 0.9855 - mean_absolute_error_labels: 0.4349INFO:tensorflow:Assets written to: /content/gdrive/My Drive/Colab Notebooks/CS6120NLP_FinalProject/Models/classifiers/training/cp_one_metric_mae.ckpt/assets\n","674/674 [==============================] - 73s 108ms/step - loss: 0.9848 - mean_absolute_error_labels: 0.4346 - val_loss: 0.9994 - val_mean_absolute_error_labels: 0.4415\n","Epoch 28/100\n","672/674 [============================>.] - ETA: 0s - loss: 0.9846 - mean_absolute_error_labels: 0.4348INFO:tensorflow:Assets written to: /content/gdrive/My Drive/Colab Notebooks/CS6120NLP_FinalProject/Models/classifiers/training/cp_one_metric_mae.ckpt/assets\n","674/674 [==============================] - 74s 110ms/step - loss: 0.9841 - mean_absolute_error_labels: 0.4346 - val_loss: 0.9994 - val_mean_absolute_error_labels: 0.4415\n","Epoch 29/100\n","666/674 [============================>.] - ETA: 0s - loss: 0.9844 - mean_absolute_error_labels: 0.4349INFO:tensorflow:Assets written to: /content/gdrive/My Drive/Colab Notebooks/CS6120NLP_FinalProject/Models/classifiers/training/cp_one_metric_mae.ckpt/assets\n","674/674 [==============================] - 72s 108ms/step - loss: 0.9841 - mean_absolute_error_labels: 0.4346 - val_loss: 0.9994 - val_mean_absolute_error_labels: 0.4415\n","Epoch 30/100\n","674/674 [==============================] - ETA: 0s - loss: 0.9841 - mean_absolute_error_labels: 0.4346INFO:tensorflow:Assets written to: /content/gdrive/My Drive/Colab Notebooks/CS6120NLP_FinalProject/Models/classifiers/training/cp_one_metric_mae.ckpt/assets\n","674/674 [==============================] - 75s 111ms/step - loss: 0.9841 - mean_absolute_error_labels: 0.4346 - val_loss: 0.9994 - val_mean_absolute_error_labels: 0.4415\n","Epoch 31/100\n","672/674 [============================>.] - ETA: 0s - loss: 0.9846 - mean_absolute_error_labels: 0.4348INFO:tensorflow:Assets written to: /content/gdrive/My Drive/Colab Notebooks/CS6120NLP_FinalProject/Models/classifiers/training/cp_one_metric_mae.ckpt/assets\n","674/674 [==============================] - 71s 106ms/step - loss: 0.9841 - mean_absolute_error_labels: 0.4346 - val_loss: 0.9994 - val_mean_absolute_error_labels: 0.4415\n","Epoch 32/100\n","671/674 [============================>.] - ETA: 0s - loss: 0.9848 - mean_absolute_error_labels: 0.4348INFO:tensorflow:Assets written to: /content/gdrive/My Drive/Colab Notebooks/CS6120NLP_FinalProject/Models/classifiers/training/cp_one_metric_mae.ckpt/assets\n","674/674 [==============================] - 75s 112ms/step - loss: 0.9841 - mean_absolute_error_labels: 0.4346 - val_loss: 0.9994 - val_mean_absolute_error_labels: 0.4415\n","Epoch 33/100\n","667/674 [============================>.] - ETA: 0s - loss: 0.9843 - mean_absolute_error_labels: 0.4348INFO:tensorflow:Assets written to: /content/gdrive/My Drive/Colab Notebooks/CS6120NLP_FinalProject/Models/classifiers/training/cp_one_metric_mae.ckpt/assets\n","674/674 [==============================] - 70s 105ms/step - loss: 0.9841 - mean_absolute_error_labels: 0.4346 - val_loss: 0.9994 - val_mean_absolute_error_labels: 0.4415\n","Epoch 34/100\n","669/674 [============================>.] - ETA: 0s - loss: 0.9848 - mean_absolute_error_labels: 0.4349INFO:tensorflow:Assets written to: /content/gdrive/My Drive/Colab Notebooks/CS6120NLP_FinalProject/Models/classifiers/training/cp_one_metric_mae.ckpt/assets\n","674/674 [==============================] - 70s 104ms/step - loss: 0.9841 - mean_absolute_error_labels: 0.4346 - val_loss: 0.9994 - val_mean_absolute_error_labels: 0.4415\n","Epoch 35/100\n","667/674 [============================>.] - ETA: 0s - loss: 0.9843 - mean_absolute_error_labels: 0.4348INFO:tensorflow:Assets written to: /content/gdrive/My Drive/Colab Notebooks/CS6120NLP_FinalProject/Models/classifiers/training/cp_one_metric_mae.ckpt/assets\n","674/674 [==============================] - 71s 106ms/step - loss: 0.9841 - mean_absolute_error_labels: 0.4346 - val_loss: 0.9994 - val_mean_absolute_error_labels: 0.4415\n","Epoch 36/100\n","669/674 [============================>.] - ETA: 0s - loss: 0.9848 - mean_absolute_error_labels: 0.4349INFO:tensorflow:Assets written to: /content/gdrive/My Drive/Colab Notebooks/CS6120NLP_FinalProject/Models/classifiers/training/cp_one_metric_mae.ckpt/assets\n","674/674 [==============================] - 72s 107ms/step - loss: 0.9841 - mean_absolute_error_labels: 0.4346 - val_loss: 0.9994 - val_mean_absolute_error_labels: 0.4415\n","Epoch 37/100\n","674/674 [==============================] - ETA: 0s - loss: 0.9841 - mean_absolute_error_labels: 0.4346INFO:tensorflow:Assets written to: /content/gdrive/My Drive/Colab Notebooks/CS6120NLP_FinalProject/Models/classifiers/training/cp_one_metric_mae.ckpt/assets\n","674/674 [==============================] - 78s 116ms/step - loss: 0.9841 - mean_absolute_error_labels: 0.4346 - val_loss: 0.9994 - val_mean_absolute_error_labels: 0.4415\n","Epoch 38/100\n","670/674 [============================>.] - ETA: 0s - loss: 0.9847 - mean_absolute_error_labels: 0.4348INFO:tensorflow:Assets written to: /content/gdrive/My Drive/Colab Notebooks/CS6120NLP_FinalProject/Models/classifiers/training/cp_one_metric_mae.ckpt/assets\n","674/674 [==============================] - 73s 109ms/step - loss: 0.9841 - mean_absolute_error_labels: 0.4346 - val_loss: 0.9994 - val_mean_absolute_error_labels: 0.4416\n","Epoch 39/100\n","671/674 [============================>.] - ETA: 0s - loss: 0.9848 - mean_absolute_error_labels: 0.4348INFO:tensorflow:Assets written to: /content/gdrive/My Drive/Colab Notebooks/CS6120NLP_FinalProject/Models/classifiers/training/cp_one_metric_mae.ckpt/assets\n","674/674 [==============================] - 71s 106ms/step - loss: 0.9841 - mean_absolute_error_labels: 0.4346 - val_loss: 0.9994 - val_mean_absolute_error_labels: 0.4415\n","Epoch 40/100\n","670/674 [============================>.] - ETA: 0s - loss: 0.9847 - mean_absolute_error_labels: 0.4348INFO:tensorflow:Assets written to: /content/gdrive/My Drive/Colab Notebooks/CS6120NLP_FinalProject/Models/classifiers/training/cp_one_metric_mae.ckpt/assets\n","674/674 [==============================] - 70s 104ms/step - loss: 0.9841 - mean_absolute_error_labels: 0.4346 - val_loss: 0.9994 - val_mean_absolute_error_labels: 0.4415\n","Epoch 41/100\n","667/674 [============================>.] - ETA: 0s - loss: 0.9843 - mean_absolute_error_labels: 0.4348INFO:tensorflow:Assets written to: /content/gdrive/My Drive/Colab Notebooks/CS6120NLP_FinalProject/Models/classifiers/training/cp_one_metric_mae.ckpt/assets\n","674/674 [==============================] - 70s 104ms/step - loss: 0.9841 - mean_absolute_error_labels: 0.4346 - val_loss: 0.9994 - val_mean_absolute_error_labels: 0.4415\n","Epoch 42/100\n","666/674 [============================>.] - ETA: 0s - loss: 0.9844 - mean_absolute_error_labels: 0.4349INFO:tensorflow:Assets written to: /content/gdrive/My Drive/Colab Notebooks/CS6120NLP_FinalProject/Models/classifiers/training/cp_one_metric_mae.ckpt/assets\n","674/674 [==============================] - 73s 108ms/step - loss: 0.9841 - mean_absolute_error_labels: 0.4346 - val_loss: 0.9994 - val_mean_absolute_error_labels: 0.4415\n","Epoch 43/100\n","674/674 [==============================] - ETA: 0s - loss: 0.9841 - mean_absolute_error_labels: 0.4346INFO:tensorflow:Assets written to: /content/gdrive/My Drive/Colab Notebooks/CS6120NLP_FinalProject/Models/classifiers/training/cp_one_metric_mae.ckpt/assets\n","674/674 [==============================] - 70s 104ms/step - loss: 0.9841 - mean_absolute_error_labels: 0.4346 - val_loss: 0.9994 - val_mean_absolute_error_labels: 0.4415\n","Epoch 44/100\n","662/674 [============================>.] - ETA: 0s - loss: 0.9853 - mean_absolute_error_labels: 0.4350INFO:tensorflow:Assets written to: /content/gdrive/My Drive/Colab Notebooks/CS6120NLP_FinalProject/Models/classifiers/training/cp_one_metric_mae.ckpt/assets\n","674/674 [==============================] - 73s 109ms/step - loss: 0.9841 - mean_absolute_error_labels: 0.4346 - val_loss: 0.9994 - val_mean_absolute_error_labels: 0.4416\n","Epoch 45/100\n","666/674 [============================>.] - ETA: 0s - loss: 0.9844 - mean_absolute_error_labels: 0.4349INFO:tensorflow:Assets written to: /content/gdrive/My Drive/Colab Notebooks/CS6120NLP_FinalProject/Models/classifiers/training/cp_one_metric_mae.ckpt/assets\n","674/674 [==============================] - 75s 112ms/step - loss: 0.9842 - mean_absolute_error_labels: 0.4346 - val_loss: 0.9994 - val_mean_absolute_error_labels: 0.4415\n","Epoch 46/100\n","667/674 [============================>.] - ETA: 0s - loss: 0.9843 - mean_absolute_error_labels: 0.4348INFO:tensorflow:Assets written to: /content/gdrive/My Drive/Colab Notebooks/CS6120NLP_FinalProject/Models/classifiers/training/cp_one_metric_mae.ckpt/assets\n","674/674 [==============================] - 70s 103ms/step - loss: 0.9841 - mean_absolute_error_labels: 0.4346 - val_loss: 0.9994 - val_mean_absolute_error_labels: 0.4415\n","Epoch 47/100\n","669/674 [============================>.] - ETA: 0s - loss: 0.9848 - mean_absolute_error_labels: 0.4349INFO:tensorflow:Assets written to: /content/gdrive/My Drive/Colab Notebooks/CS6120NLP_FinalProject/Models/classifiers/training/cp_one_metric_mae.ckpt/assets\n","674/674 [==============================] - 69s 102ms/step - loss: 0.9841 - mean_absolute_error_labels: 0.4346 - val_loss: 0.9994 - val_mean_absolute_error_labels: 0.4414\n","Epoch 48/100\n","672/674 [============================>.] - ETA: 0s - loss: 0.9846 - mean_absolute_error_labels: 0.4348INFO:tensorflow:Assets written to: /content/gdrive/My Drive/Colab Notebooks/CS6120NLP_FinalProject/Models/classifiers/training/cp_one_metric_mae.ckpt/assets\n","674/674 [==============================] - 69s 103ms/step - loss: 0.9841 - mean_absolute_error_labels: 0.4346 - val_loss: 0.9994 - val_mean_absolute_error_labels: 0.4415\n","Epoch 49/100\n","673/674 [============================>.] - ETA: 0s - loss: 0.9843 - mean_absolute_error_labels: 0.4347INFO:tensorflow:Assets written to: /content/gdrive/My Drive/Colab Notebooks/CS6120NLP_FinalProject/Models/classifiers/training/cp_one_metric_mae.ckpt/assets\n","674/674 [==============================] - 71s 106ms/step - loss: 0.9841 - mean_absolute_error_labels: 0.4346 - val_loss: 0.9994 - val_mean_absolute_error_labels: 0.4415\n","Epoch 50/100\n","662/674 [============================>.] - ETA: 0s - loss: 0.9854 - mean_absolute_error_labels: 0.4350INFO:tensorflow:Assets written to: /content/gdrive/My Drive/Colab Notebooks/CS6120NLP_FinalProject/Models/classifiers/training/cp_one_metric_mae.ckpt/assets\n","674/674 [==============================] - 69s 103ms/step - loss: 0.9842 - mean_absolute_error_labels: 0.4346 - val_loss: 0.9994 - val_mean_absolute_error_labels: 0.4415\n","Epoch 51/100\n","672/674 [============================>.] - ETA: 0s - loss: 0.9846 - mean_absolute_error_labels: 0.4348INFO:tensorflow:Assets written to: /content/gdrive/My Drive/Colab Notebooks/CS6120NLP_FinalProject/Models/classifiers/training/cp_one_metric_mae.ckpt/assets\n","674/674 [==============================] - 72s 106ms/step - loss: 0.9841 - mean_absolute_error_labels: 0.4346 - val_loss: 0.9994 - val_mean_absolute_error_labels: 0.4416\n","Epoch 52/100\n","672/674 [============================>.] - ETA: 0s - loss: 0.9846 - mean_absolute_error_labels: 0.4348INFO:tensorflow:Assets written to: /content/gdrive/My Drive/Colab Notebooks/CS6120NLP_FinalProject/Models/classifiers/training/cp_one_metric_mae.ckpt/assets\n","674/674 [==============================] - 69s 103ms/step - loss: 0.9841 - mean_absolute_error_labels: 0.4346 - val_loss: 0.9994 - val_mean_absolute_error_labels: 0.4415\n","Epoch 53/100\n","672/674 [============================>.] - ETA: 0s - loss: 0.9846 - mean_absolute_error_labels: 0.4348INFO:tensorflow:Assets written to: /content/gdrive/My Drive/Colab Notebooks/CS6120NLP_FinalProject/Models/classifiers/training/cp_one_metric_mae.ckpt/assets\n","674/674 [==============================] - 71s 105ms/step - loss: 0.9841 - mean_absolute_error_labels: 0.4346 - val_loss: 0.9994 - val_mean_absolute_error_labels: 0.4415\n","Epoch 54/100\n","668/674 [============================>.] - ETA: 0s - loss: 0.9850 - mean_absolute_error_labels: 0.4349INFO:tensorflow:Assets written to: /content/gdrive/My Drive/Colab Notebooks/CS6120NLP_FinalProject/Models/classifiers/training/cp_one_metric_mae.ckpt/assets\n","674/674 [==============================] - 71s 106ms/step - loss: 0.9841 - mean_absolute_error_labels: 0.4346 - val_loss: 0.9994 - val_mean_absolute_error_labels: 0.4415\n","Epoch 55/100\n","668/674 [============================>.] - ETA: 0s - loss: 0.9851 - mean_absolute_error_labels: 0.4349INFO:tensorflow:Assets written to: /content/gdrive/My Drive/Colab Notebooks/CS6120NLP_FinalProject/Models/classifiers/training/cp_one_metric_mae.ckpt/assets\n","674/674 [==============================] - 69s 103ms/step - loss: 0.9842 - mean_absolute_error_labels: 0.4346 - val_loss: 0.9994 - val_mean_absolute_error_labels: 0.4415\n","Epoch 56/100\n","669/674 [============================>.] - ETA: 0s - loss: 0.9848 - mean_absolute_error_labels: 0.4349INFO:tensorflow:Assets written to: /content/gdrive/My Drive/Colab Notebooks/CS6120NLP_FinalProject/Models/classifiers/training/cp_one_metric_mae.ckpt/assets\n","674/674 [==============================] - 68s 101ms/step - loss: 0.9841 - mean_absolute_error_labels: 0.4346 - val_loss: 0.9994 - val_mean_absolute_error_labels: 0.4415\n","Epoch 57/100\n","671/674 [============================>.] - ETA: 0s - loss: 0.9848 - mean_absolute_error_labels: 0.4348INFO:tensorflow:Assets written to: /content/gdrive/My Drive/Colab Notebooks/CS6120NLP_FinalProject/Models/classifiers/training/cp_one_metric_mae.ckpt/assets\n","674/674 [==============================] - 70s 103ms/step - loss: 0.9841 - mean_absolute_error_labels: 0.4346 - val_loss: 0.9994 - val_mean_absolute_error_labels: 0.4415\n","Epoch 58/100\n","674/674 [==============================] - ETA: 0s - loss: 0.9841 - mean_absolute_error_labels: 0.4346INFO:tensorflow:Assets written to: /content/gdrive/My Drive/Colab Notebooks/CS6120NLP_FinalProject/Models/classifiers/training/cp_one_metric_mae.ckpt/assets\n","674/674 [==============================] - 71s 105ms/step - loss: 0.9841 - mean_absolute_error_labels: 0.4346 - val_loss: 0.9994 - val_mean_absolute_error_labels: 0.4415\n","Epoch 59/100\n","669/674 [============================>.] - ETA: 0s - loss: 0.9848 - mean_absolute_error_labels: 0.4349Restoring model weights from the end of the best epoch: 9.\n","INFO:tensorflow:Assets written to: /content/gdrive/My Drive/Colab Notebooks/CS6120NLP_FinalProject/Models/classifiers/training/cp_one_metric_mae.ckpt/assets\n","674/674 [==============================] - 70s 105ms/step - loss: 0.9841 - mean_absolute_error_labels: 0.4346 - val_loss: 0.9994 - val_mean_absolute_error_labels: 0.4415\n","Epoch 59: early stopping\n","CPU times: user 1h 1min 54s, sys: 7min 27s, total: 1h 9min 21s\n","Wall time: 1h 22min 15s\n"]}]},{"cell_type":"code","source":["from sklearn.metrics import precision_score, f1_score, classification_report\n","from sklearn.metrics import ConfusionMatrixDisplay\n","from sklearn.metrics import confusion_matrix\n","import matplotlib.pyplot as plt\n","import numpy as np\n","\n","from sklearn.metrics import mean_absolute_error\n","\n","\n","\n","checkpoint_path = \"/content/gdrive/My Drive/FinalProject_LakshyanaKC_NhatPham/Models/cp_one_metric_mae.ckpt\"\n","# checkpoint_path = \"/content/gdrive/My Drive/Colab Notebooks/CS6120NLP_FinalProject/Models/classifiers/training/cp_allmetrics.ckpt/\"\n","checkpoint_dir = os.path.dirname(\"/content/gdrive/My Drive/FinalProject_LakshyanaKC_NhatPham/Models/\")\n","\n","\n","### Update the label from 0-3 back to original ratings 2-5\n","def update_labels(label):\n","  return label+2\n","\n","\n","## Get the test dataset\n","test_dataset = tf.data.Dataset.from_tensor_slices(\n","  (tf.cast(np.array(X_test_indices)[..., tf.newaxis], tf.float32),\n","   tf.cast(np.array(y_test), tf.int64)))\n","\n","test_dataset = test_dataset.shuffle(50).batch(batch_size)\n","\n","\n","\n","## Create model instance\n","model = create_model()\n","\n","# Loads the weights\n","model.load_weights(checkpoint_path)\n","\n","## Evaluate the model on test dataset\n","model.evaluate(test_dataset)\n","\n","# Note that these are ordinal (cumulative) logits, not probabilities or regular logits.\n","ordinal_logits = model.predict(test_dataset)\n","\n","# Convert from logits to label probabilities. This is initially a tensorflow tensor.\n","tensor_probs = coral.ordinal_softmax(ordinal_logits)\n","\n","# Convert the tensor into a pandas dataframe.\n","probs_df = pd.DataFrame(tensor_probs.numpy())\n","\n","\n","from scipy import special\n","\n","# Compare to logit-based cumulative probs\n","cum_probs = pd.DataFrame(ordinal_logits).apply(special.expit)\n","\n","# Calculate the labels using the style of Cao et al.\n","labels = cum_probs.apply(lambda x: x > 0.5).sum(axis = 1)\n","\n","\n","\n","\n","### \n","predictions = pd.DataFrame()\n","predictions[\"predicted_label\"]  = np.argmax(tensor_probs.numpy(), axis = 1)\n","predictions[\"true_label\"]       = y_test\n","\n","\n","# predictions[\"predicted_label\"]  = predictions[\"predicted_label\"].apply(update_labels)\n","# predictions[\"true_label\"]       = predictions[\"true_label\"].apply(update_labels)\n","\n","\n","y_pred = predictions[\"predicted_label\"].to_numpy()\n","y_true = predictions[\"true_label\"].to_numpy()\n","labels =  ['Class 1-2', 'Class 3', 'Class 4', 'Class 5']\n","\n","cm = confusion_matrix(y_true, y_pred)\n","\n","disp = ConfusionMatrixDisplay(confusion_matrix=cm, display_labels=labels)\n","\n","disp.plot(cmap=plt.cm.Blues)\n","plt.show()\n","\n","\n","predictions = pd.DataFrame()\n","predictions[\"predicted_label\"]  = np.argmax(tensor_probs.numpy(), axis = 1)\n","predictions[\"true_label\"]       = y_test\n","\n","# y_pred = predictions[\"predicted_label\"].to_numpy()\n","# y_true = predictions[\"true_label\"].to_numpy()\n","\n","target_names = ['class 2', 'class 3', 'class 4','class 5']\n","print(\"\\n\\tMean Absolute Error: \",mean_absolute_error(y_true,y_pred),\"\\n\")\n","print(classification_report(y_true, y_pred, target_names=target_names))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":677},"id":"Na7TClBT0N7w","executionInfo":{"status":"ok","timestamp":1651618272100,"user_tz":240,"elapsed":28210,"user":{"displayName":"Lakshyana","userId":"14846287915491486779"}},"outputId":"1772cc59-4d17-45c2-f1d9-8a87d0144f9b"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["225/225 [==============================] - 4s 3ms/step - loss: 0.9738 - mean_absolute_error_labels: 0.4321\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 2 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}},{"output_type":"stream","name":"stdout","text":["\n","\tMean Absolute Error:  0.4320153288574654 \n","\n","              precision    recall  f1-score   support\n","\n","     class 2       0.00      0.00      0.00      1098\n","     class 3       0.00      0.00      0.00      3299\n","     class 4       0.00      0.00      0.00     19193\n","     class 5       0.65      1.00      0.79     43734\n","\n","    accuracy                           0.65     67324\n","   macro avg       0.16      0.25      0.20     67324\n","weighted avg       0.42      0.65      0.51     67324\n","\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/sklearn/metrics/_classification.py:1318: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.7/dist-packages/sklearn/metrics/_classification.py:1318: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.7/dist-packages/sklearn/metrics/_classification.py:1318: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n"]}]},{"cell_type":"code","source":["%%time\n","\n","from tensorflow.keras.callbacks import EarlyStopping, ModelCheckpoint\n","\n","\n","learning_rate = 0.01\n","batch_size = 200\n","num_epochs = 500\n","\n","\n","checkpoint_path = \"/content/gdrive/My Drive/Colab Notebooks/CS6120NLP_FinalProject/Models/classifiers/training/cp_allmetrics.ckpt\"\n","checkpoint_dir = os.path.dirname(\"/content/gdrive/My Drive/Colab Notebooks/CS6120NLP_FinalProject/Models/classifiers/\")\n","\n","\n","callbacks = [tf.keras.callbacks.EarlyStopping(\n","                        monitor='val_loss',\n","                        mode='min', \n","                        verbose=1, \n","                        patience = 200,\n","                        restore_best_weights = True),          \n","              ModelCheckpoint(filepath=checkpoint_path, monitor='val_loss', save_best_only=True, mode='min')]\n","\n","# callbacks = tf.keras.callbacks.ModelCheckpoint(filepath=checkpoint_path,\n","#                                                  save_weights_only=True,\n","#                                                  verbose=1)\n","\n","model = create_model()\n","\n","\n","history = model.fit(dataset, \n","                    epochs = num_epochs,\n","                    validation_data = val_dataset,\n","                    class_weight = class_weights,\n","                    use_multiprocessing=True,\n","                    callbacks=callbacks\n","                    )\n","\n","\n","## Save the history\n","np.save('/content/gdrive/My Drive/Colab Notebooks/CS6120NLP_FinalProject/Models/classifiers/training/model1_history.npy',history.history)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"eJijkYdmQooH","executionInfo":{"status":"error","timestamp":1651555027992,"user_tz":240,"elapsed":492717,"user":{"displayName":"Lakshyana","userId":"14846287915491486779"}},"outputId":"133f1d1d-cc8a-4469-f8dc-2582654de691"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Epoch 1/500\n","398/404 [============================>.] - ETA: 0s - loss: 1.0430 - mean_absolute_error_labels: 0.4393 - f1_m: 1.5389 - precision_m: 1.0423 - recall_m: 2.9440INFO:tensorflow:Assets written to: /content/gdrive/My Drive/Colab Notebooks/CS6120NLP_FinalProject/Models/classifiers/training/cp1.ckpt/assets\n","404/404 [==============================] - 90s 221ms/step - loss: 1.0412 - mean_absolute_error_labels: 0.4390 - f1_m: 1.5392 - precision_m: 1.0426 - recall_m: 2.9438 - val_loss: 0.9993 - val_mean_absolute_error_labels: 0.4414 - val_f1_m: 1.4808 - val_precision_m: 0.9830 - val_recall_m: 2.9998\n","Epoch 2/500\n","400/404 [============================>.] - ETA: 0s - loss: 0.9886 - mean_absolute_error_labels: 0.4374 - f1_m: 1.5681 - precision_m: 1.0695 - recall_m: 2.9414INFO:tensorflow:Assets written to: /content/gdrive/My Drive/Colab Notebooks/CS6120NLP_FinalProject/Models/classifiers/training/cp1.ckpt/assets\n","404/404 [==============================] - 89s 220ms/step - loss: 0.9882 - mean_absolute_error_labels: 0.4372 - f1_m: 1.5679 - precision_m: 1.0693 - recall_m: 2.9416 - val_loss: 0.9977 - val_mean_absolute_error_labels: 0.4415 - val_f1_m: 1.4828 - val_precision_m: 0.9849 - val_recall_m: 2.9983\n","Epoch 3/500\n","404/404 [==============================] - 3s 7ms/step - loss: 0.9859 - mean_absolute_error_labels: 0.4358 - f1_m: 1.5694 - precision_m: 1.0685 - recall_m: 2.9585 - val_loss: 0.9978 - val_mean_absolute_error_labels: 0.4414 - val_f1_m: 1.4811 - val_precision_m: 0.9833 - val_recall_m: 2.9997\n","Epoch 4/500\n","404/404 [==============================] - 3s 7ms/step - loss: 0.9840 - mean_absolute_error_labels: 0.4349 - f1_m: 1.5667 - precision_m: 1.0639 - recall_m: 2.9747 - val_loss: 0.9981 - val_mean_absolute_error_labels: 0.4414 - val_f1_m: 1.4801 - val_precision_m: 0.9824 - val_recall_m: 2.9996\n","Epoch 5/500\n","404/404 [==============================] - 3s 7ms/step - loss: 0.9826 - mean_absolute_error_labels: 0.4347 - f1_m: 1.5628 - precision_m: 1.0593 - recall_m: 2.9829 - val_loss: 0.9982 - val_mean_absolute_error_labels: 0.4418 - val_f1_m: 1.4921 - val_precision_m: 0.9943 - val_recall_m: 2.9890\n","Epoch 6/500\n","404/404 [==============================] - 3s 7ms/step - loss: 0.9816 - mean_absolute_error_labels: 0.4347 - f1_m: 1.5508 - precision_m: 1.0477 - recall_m: 2.9887 - val_loss: 0.9989 - val_mean_absolute_error_labels: 0.4415 - val_f1_m: 1.4857 - val_precision_m: 0.9880 - val_recall_m: 2.9943\n","Epoch 7/500\n","404/404 [==============================] - 3s 7ms/step - loss: 0.9806 - mean_absolute_error_labels: 0.4347 - f1_m: 1.5338 - precision_m: 1.0318 - recall_m: 2.9912 - val_loss: 0.9987 - val_mean_absolute_error_labels: 0.4415 - val_f1_m: 1.4954 - val_precision_m: 0.9964 - val_recall_m: 2.9957\n","Epoch 8/500\n","404/404 [==============================] - 3s 7ms/step - loss: 0.9800 - mean_absolute_error_labels: 0.4346 - f1_m: 1.5250 - precision_m: 1.0235 - recall_m: 2.9925 - val_loss: 0.9985 - val_mean_absolute_error_labels: 0.4415 - val_f1_m: 1.4916 - val_precision_m: 0.9929 - val_recall_m: 2.9972\n","Epoch 9/500\n","404/404 [==============================] - 3s 7ms/step - loss: 0.9795 - mean_absolute_error_labels: 0.4346 - f1_m: 1.5183 - precision_m: 1.0172 - recall_m: 2.9943 - val_loss: 0.9997 - val_mean_absolute_error_labels: 0.4415 - val_f1_m: 1.5155 - val_precision_m: 1.0146 - val_recall_m: 2.9934\n","Epoch 10/500\n","404/404 [==============================] - 3s 7ms/step - loss: 0.9793 - mean_absolute_error_labels: 0.4347 - f1_m: 1.5171 - precision_m: 1.0162 - recall_m: 2.9936 - val_loss: 0.9998 - val_mean_absolute_error_labels: 0.4414 - val_f1_m: 1.5010 - val_precision_m: 1.0013 - val_recall_m: 2.9964\n","Epoch 11/500\n","404/404 [==============================] - 3s 7ms/step - loss: 0.9787 - mean_absolute_error_labels: 0.4346 - f1_m: 1.5179 - precision_m: 1.0171 - recall_m: 2.9923 - val_loss: 1.0003 - val_mean_absolute_error_labels: 0.4414 - val_f1_m: 1.5262 - val_precision_m: 1.0245 - val_recall_m: 2.9911\n","Epoch 12/500\n","404/404 [==============================] - 3s 7ms/step - loss: 0.9786 - mean_absolute_error_labels: 0.4347 - f1_m: 1.5221 - precision_m: 1.0209 - recall_m: 2.9917 - val_loss: 0.9999 - val_mean_absolute_error_labels: 0.4414 - val_f1_m: 1.5131 - val_precision_m: 1.0124 - val_recall_m: 2.9940\n","Epoch 13/500\n","404/404 [==============================] - 3s 7ms/step - loss: 0.9785 - mean_absolute_error_labels: 0.4348 - f1_m: 1.5119 - precision_m: 1.0116 - recall_m: 2.9924 - val_loss: 0.9993 - val_mean_absolute_error_labels: 0.4414 - val_f1_m: 1.4842 - val_precision_m: 0.9861 - val_recall_m: 2.9995\n","Epoch 14/500\n","404/404 [==============================] - 3s 7ms/step - loss: 0.9780 - mean_absolute_error_labels: 0.4347 - f1_m: 1.5052 - precision_m: 1.0057 - recall_m: 2.9913 - val_loss: 1.0006 - val_mean_absolute_error_labels: 0.4413 - val_f1_m: 1.5018 - val_precision_m: 1.0022 - val_recall_m: 2.9943\n","Epoch 15/500\n","404/404 [==============================] - 3s 7ms/step - loss: 0.9778 - mean_absolute_error_labels: 0.4346 - f1_m: 1.5020 - precision_m: 1.0030 - recall_m: 2.9905 - val_loss: 0.9999 - val_mean_absolute_error_labels: 0.4417 - val_f1_m: 1.5014 - val_precision_m: 1.0021 - val_recall_m: 2.9921\n","Epoch 16/500\n","404/404 [==============================] - 3s 7ms/step - loss: 0.9775 - mean_absolute_error_labels: 0.4345 - f1_m: 1.5018 - precision_m: 1.0029 - recall_m: 2.9899 - val_loss: 1.0010 - val_mean_absolute_error_labels: 0.4428 - val_f1_m: 1.4896 - val_precision_m: 0.9916 - val_recall_m: 2.9923\n","Epoch 17/500\n","404/404 [==============================] - 3s 7ms/step - loss: 0.9774 - mean_absolute_error_labels: 0.4347 - f1_m: 1.4975 - precision_m: 0.9990 - recall_m: 2.9903 - val_loss: 1.0010 - val_mean_absolute_error_labels: 0.4424 - val_f1_m: 1.4925 - val_precision_m: 0.9943 - val_recall_m: 2.9915\n","Epoch 18/500\n","404/404 [==============================] - 3s 7ms/step - loss: 0.9771 - mean_absolute_error_labels: 0.4346 - f1_m: 1.4987 - precision_m: 1.0002 - recall_m: 2.9891 - val_loss: 1.0024 - val_mean_absolute_error_labels: 0.4421 - val_f1_m: 1.4920 - val_precision_m: 0.9941 - val_recall_m: 2.9895\n","Epoch 19/500\n","404/404 [==============================] - 3s 7ms/step - loss: 0.9769 - mean_absolute_error_labels: 0.4345 - f1_m: 1.4973 - precision_m: 0.9991 - recall_m: 2.9879 - val_loss: 1.0037 - val_mean_absolute_error_labels: 0.4441 - val_f1_m: 1.4944 - val_precision_m: 0.9966 - val_recall_m: 2.9865\n","Epoch 20/500\n","404/404 [==============================] - 3s 7ms/step - loss: 0.9765 - mean_absolute_error_labels: 0.4346 - f1_m: 1.4941 - precision_m: 0.9963 - recall_m: 2.9871 - val_loss: 1.0039 - val_mean_absolute_error_labels: 0.4465 - val_f1_m: 1.4922 - val_precision_m: 0.9952 - val_recall_m: 2.9815\n","Epoch 21/500\n","404/404 [==============================] - 3s 7ms/step - loss: 0.9764 - mean_absolute_error_labels: 0.4346 - f1_m: 1.4948 - precision_m: 0.9967 - recall_m: 2.9879 - val_loss: 1.0025 - val_mean_absolute_error_labels: 0.4450 - val_f1_m: 1.4910 - val_precision_m: 0.9935 - val_recall_m: 2.9866\n","Epoch 22/500\n","404/404 [==============================] - 3s 7ms/step - loss: 0.9760 - mean_absolute_error_labels: 0.4344 - f1_m: 1.4973 - precision_m: 0.9993 - recall_m: 2.9860 - val_loss: 1.0040 - val_mean_absolute_error_labels: 0.4455 - val_f1_m: 1.4912 - val_precision_m: 0.9938 - val_recall_m: 2.9854\n","Epoch 23/500\n","404/404 [==============================] - 3s 7ms/step - loss: 0.9755 - mean_absolute_error_labels: 0.4343 - f1_m: 1.4977 - precision_m: 0.9997 - recall_m: 2.9854 - val_loss: 1.0073 - val_mean_absolute_error_labels: 0.4480 - val_f1_m: 1.4928 - val_precision_m: 0.9963 - val_recall_m: 2.9763\n","Epoch 24/500\n","404/404 [==============================] - 3s 7ms/step - loss: 0.9755 - mean_absolute_error_labels: 0.4344 - f1_m: 1.4954 - precision_m: 0.9976 - recall_m: 2.9856 - val_loss: 1.0069 - val_mean_absolute_error_labels: 0.4477 - val_f1_m: 1.4952 - val_precision_m: 0.9985 - val_recall_m: 2.9757\n","Epoch 25/500\n","404/404 [==============================] - 3s 7ms/step - loss: 0.9751 - mean_absolute_error_labels: 0.4339 - f1_m: 1.4976 - precision_m: 0.9998 - recall_m: 2.9848 - val_loss: 1.0040 - val_mean_absolute_error_labels: 0.4464 - val_f1_m: 1.4925 - val_precision_m: 0.9956 - val_recall_m: 2.9796\n","Epoch 26/500\n","404/404 [==============================] - 3s 7ms/step - loss: 0.9748 - mean_absolute_error_labels: 0.4340 - f1_m: 1.4956 - precision_m: 0.9978 - recall_m: 2.9860 - val_loss: 1.0063 - val_mean_absolute_error_labels: 0.4473 - val_f1_m: 1.4874 - val_precision_m: 0.9913 - val_recall_m: 2.9778\n","Epoch 27/500\n","404/404 [==============================] - 3s 7ms/step - loss: 0.9749 - mean_absolute_error_labels: 0.4338 - f1_m: 1.4905 - precision_m: 0.9931 - recall_m: 2.9871 - val_loss: 1.0051 - val_mean_absolute_error_labels: 0.4471 - val_f1_m: 1.4875 - val_precision_m: 0.9914 - val_recall_m: 2.9778\n","Epoch 28/500\n","404/404 [==============================] - 3s 7ms/step - loss: 0.9745 - mean_absolute_error_labels: 0.4339 - f1_m: 1.5024 - precision_m: 1.0042 - recall_m: 2.9848 - val_loss: 1.0081 - val_mean_absolute_error_labels: 0.4469 - val_f1_m: 1.5925 - val_precision_m: 1.0884 - val_recall_m: 2.9661\n","Epoch 29/500\n","404/404 [==============================] - 3s 7ms/step - loss: 0.9746 - mean_absolute_error_labels: 0.4338 - f1_m: 1.4980 - precision_m: 1.0000 - recall_m: 2.9858 - val_loss: 1.0089 - val_mean_absolute_error_labels: 0.4470 - val_f1_m: 1.6037 - val_precision_m: 1.0996 - val_recall_m: 2.9618\n","Epoch 30/500\n","404/404 [==============================] - 3s 7ms/step - loss: 0.9742 - mean_absolute_error_labels: 0.4340 - f1_m: 1.5075 - precision_m: 1.0089 - recall_m: 2.9840 - val_loss: 1.0082 - val_mean_absolute_error_labels: 0.4484 - val_f1_m: 1.6110 - val_precision_m: 1.1068 - val_recall_m: 2.9597\n","Epoch 31/500\n","404/404 [==============================] - 3s 7ms/step - loss: 0.9743 - mean_absolute_error_labels: 0.4340 - f1_m: 1.5067 - precision_m: 1.0082 - recall_m: 2.9841 - val_loss: 1.0059 - val_mean_absolute_error_labels: 0.4454 - val_f1_m: 1.6023 - val_precision_m: 1.0973 - val_recall_m: 2.9683\n","Epoch 32/500\n","404/404 [==============================] - 3s 7ms/step - loss: 0.9741 - mean_absolute_error_labels: 0.4337 - f1_m: 1.5040 - precision_m: 1.0056 - recall_m: 2.9855 - val_loss: 1.0104 - val_mean_absolute_error_labels: 0.4479 - val_f1_m: 1.6025 - val_precision_m: 1.0980 - val_recall_m: 2.9644\n","Epoch 33/500\n","404/404 [==============================] - 3s 7ms/step - loss: 0.9736 - mean_absolute_error_labels: 0.4339 - f1_m: 1.5013 - precision_m: 1.0030 - recall_m: 2.9863 - val_loss: 1.0087 - val_mean_absolute_error_labels: 0.4456 - val_f1_m: 1.6012 - val_precision_m: 1.0962 - val_recall_m: 2.9688\n","Epoch 34/500\n","404/404 [==============================] - 3s 7ms/step - loss: 0.9738 - mean_absolute_error_labels: 0.4336 - f1_m: 1.4971 - precision_m: 0.9993 - recall_m: 2.9852 - val_loss: 1.0092 - val_mean_absolute_error_labels: 0.4471 - val_f1_m: 1.5764 - val_precision_m: 1.0730 - val_recall_m: 2.9700\n","Epoch 35/500\n","404/404 [==============================] - 3s 7ms/step - loss: 0.9736 - mean_absolute_error_labels: 0.4335 - f1_m: 1.5036 - precision_m: 1.0053 - recall_m: 2.9847 - val_loss: 1.0094 - val_mean_absolute_error_labels: 0.4461 - val_f1_m: 1.5786 - val_precision_m: 1.0752 - val_recall_m: 2.9690\n","Epoch 36/500\n","404/404 [==============================] - 3s 7ms/step - loss: 0.9734 - mean_absolute_error_labels: 0.4337 - f1_m: 1.5135 - precision_m: 1.0145 - recall_m: 2.9826 - val_loss: 1.0077 - val_mean_absolute_error_labels: 0.4446 - val_f1_m: 1.5805 - val_precision_m: 1.0765 - val_recall_m: 2.9722\n","Epoch 37/500\n","404/404 [==============================] - 3s 7ms/step - loss: 0.9732 - mean_absolute_error_labels: 0.4333 - f1_m: 1.5097 - precision_m: 1.0110 - recall_m: 2.9832 - val_loss: 1.0063 - val_mean_absolute_error_labels: 0.4445 - val_f1_m: 1.5975 - val_precision_m: 1.0925 - val_recall_m: 2.9706\n","Epoch 38/500\n","404/404 [==============================] - 3s 7ms/step - loss: 0.9729 - mean_absolute_error_labels: 0.4334 - f1_m: 1.5218 - precision_m: 1.0222 - recall_m: 2.9823 - val_loss: 1.0084 - val_mean_absolute_error_labels: 0.4470 - val_f1_m: 1.5874 - val_precision_m: 1.0833 - val_recall_m: 2.9692\n","Epoch 39/500\n","404/404 [==============================] - 3s 7ms/step - loss: 0.9730 - mean_absolute_error_labels: 0.4334 - f1_m: 1.5189 - precision_m: 1.0194 - recall_m: 2.9830 - val_loss: 1.0080 - val_mean_absolute_error_labels: 0.4457 - val_f1_m: 1.5993 - val_precision_m: 1.0942 - val_recall_m: 2.9706\n","Epoch 40/500\n","404/404 [==============================] - 3s 7ms/step - loss: 0.9725 - mean_absolute_error_labels: 0.4332 - f1_m: 1.5176 - precision_m: 1.0183 - recall_m: 2.9824 - val_loss: 1.0081 - val_mean_absolute_error_labels: 0.4467 - val_f1_m: 1.4846 - val_precision_m: 0.9881 - val_recall_m: 2.9843\n","Epoch 41/500\n","404/404 [==============================] - 3s 7ms/step - loss: 0.9725 - mean_absolute_error_labels: 0.4331 - f1_m: 1.4955 - precision_m: 0.9978 - recall_m: 2.9859 - val_loss: 1.0077 - val_mean_absolute_error_labels: 0.4464 - val_f1_m: 1.4836 - val_precision_m: 0.9871 - val_recall_m: 2.9857\n","Epoch 42/500\n","404/404 [==============================] - 3s 7ms/step - loss: 0.9723 - mean_absolute_error_labels: 0.4330 - f1_m: 1.4960 - precision_m: 0.9983 - recall_m: 2.9863 - val_loss: 1.0055 - val_mean_absolute_error_labels: 0.4453 - val_f1_m: 1.4833 - val_precision_m: 0.9865 - val_recall_m: 2.9887\n","Epoch 43/500\n","404/404 [==============================] - 3s 7ms/step - loss: 0.9725 - mean_absolute_error_labels: 0.4333 - f1_m: 1.4955 - precision_m: 0.9978 - recall_m: 2.9865 - val_loss: 1.0054 - val_mean_absolute_error_labels: 0.4438 - val_f1_m: 1.5934 - val_precision_m: 1.0882 - val_recall_m: 2.9747\n","Epoch 44/500\n","404/404 [==============================] - 3s 7ms/step - loss: 0.9723 - mean_absolute_error_labels: 0.4332 - f1_m: 1.4960 - precision_m: 0.9984 - recall_m: 2.9849 - val_loss: 1.0064 - val_mean_absolute_error_labels: 0.4454 - val_f1_m: 1.4846 - val_precision_m: 0.9877 - val_recall_m: 2.9880\n","Epoch 45/500\n","404/404 [==============================] - 3s 7ms/step - loss: 0.9721 - mean_absolute_error_labels: 0.4332 - f1_m: 1.4958 - precision_m: 0.9983 - recall_m: 2.9847 - val_loss: 1.0051 - val_mean_absolute_error_labels: 0.4446 - val_f1_m: 1.4827 - val_precision_m: 0.9858 - val_recall_m: 2.9897\n","Epoch 46/500\n","404/404 [==============================] - 3s 7ms/step - loss: 0.9724 - mean_absolute_error_labels: 0.4331 - f1_m: 1.4870 - precision_m: 0.9899 - recall_m: 2.9871 - val_loss: 1.0074 - val_mean_absolute_error_labels: 0.4452 - val_f1_m: 1.4834 - val_precision_m: 0.9867 - val_recall_m: 2.9874\n","Epoch 47/500\n","404/404 [==============================] - 3s 7ms/step - loss: 0.9720 - mean_absolute_error_labels: 0.4328 - f1_m: 1.5103 - precision_m: 1.0116 - recall_m: 2.9841 - val_loss: 1.0082 - val_mean_absolute_error_labels: 0.4461 - val_f1_m: 1.6103 - val_precision_m: 1.1050 - val_recall_m: 2.9678\n","Epoch 48/500\n","404/404 [==============================] - 3s 7ms/step - loss: 0.9719 - mean_absolute_error_labels: 0.4330 - f1_m: 1.5160 - precision_m: 1.0169 - recall_m: 2.9841 - val_loss: 1.0083 - val_mean_absolute_error_labels: 0.4456 - val_f1_m: 1.5953 - val_precision_m: 1.0905 - val_recall_m: 2.9709\n","Epoch 49/500\n","404/404 [==============================] - 3s 8ms/step - loss: 0.9717 - mean_absolute_error_labels: 0.4330 - f1_m: 1.5079 - precision_m: 1.0094 - recall_m: 2.9851 - val_loss: 1.0116 - val_mean_absolute_error_labels: 0.4452 - val_f1_m: 1.5860 - val_precision_m: 1.0818 - val_recall_m: 2.9711\n","Epoch 50/500\n","404/404 [==============================] - 3s 7ms/step - loss: 0.9714 - mean_absolute_error_labels: 0.4327 - f1_m: 1.5301 - precision_m: 1.0301 - recall_m: 2.9809 - val_loss: 1.0083 - val_mean_absolute_error_labels: 0.4457 - val_f1_m: 1.6051 - val_precision_m: 1.0999 - val_recall_m: 2.9692\n","Epoch 51/500\n","404/404 [==============================] - 3s 7ms/step - loss: 0.9718 - mean_absolute_error_labels: 0.4329 - f1_m: 1.5106 - precision_m: 1.0118 - recall_m: 2.9853 - val_loss: 1.0085 - val_mean_absolute_error_labels: 0.4449 - val_f1_m: 1.5868 - val_precision_m: 1.0821 - val_recall_m: 2.9736\n","Epoch 52/500\n","404/404 [==============================] - 3s 7ms/step - loss: 0.9719 - mean_absolute_error_labels: 0.4331 - f1_m: 1.5118 - precision_m: 1.0130 - recall_m: 2.9847 - val_loss: 1.0088 - val_mean_absolute_error_labels: 0.4453 - val_f1_m: 1.5865 - val_precision_m: 1.0820 - val_recall_m: 2.9724\n","Epoch 53/500\n","404/404 [==============================] - 3s 7ms/step - loss: 0.9712 - mean_absolute_error_labels: 0.4326 - f1_m: 1.5089 - precision_m: 1.0102 - recall_m: 2.9850 - val_loss: 1.0095 - val_mean_absolute_error_labels: 0.4446 - val_f1_m: 1.5950 - val_precision_m: 1.0898 - val_recall_m: 2.9739\n","Epoch 54/500\n","404/404 [==============================] - 3s 7ms/step - loss: 0.9714 - mean_absolute_error_labels: 0.4328 - f1_m: 1.5229 - precision_m: 1.0232 - recall_m: 2.9827 - val_loss: 1.0109 - val_mean_absolute_error_labels: 0.4452 - val_f1_m: 1.5822 - val_precision_m: 1.0781 - val_recall_m: 2.9720\n","Epoch 55/500\n","404/404 [==============================] - 3s 7ms/step - loss: 0.9709 - mean_absolute_error_labels: 0.4328 - f1_m: 1.5281 - precision_m: 1.0280 - recall_m: 2.9818 - val_loss: 1.0101 - val_mean_absolute_error_labels: 0.4442 - val_f1_m: 1.6054 - val_precision_m: 1.1000 - val_recall_m: 2.9704\n","Epoch 56/500\n","404/404 [==============================] - 3s 7ms/step - loss: 0.9714 - mean_absolute_error_labels: 0.4328 - f1_m: 1.5331 - precision_m: 1.0326 - recall_m: 2.9818 - val_loss: 1.0099 - val_mean_absolute_error_labels: 0.4449 - val_f1_m: 1.6018 - val_precision_m: 1.0965 - val_recall_m: 2.9714\n","Epoch 57/500\n","404/404 [==============================] - 3s 8ms/step - loss: 0.9710 - mean_absolute_error_labels: 0.4328 - f1_m: 1.5322 - precision_m: 1.0319 - recall_m: 2.9815 - val_loss: 1.0093 - val_mean_absolute_error_labels: 0.4447 - val_f1_m: 1.5931 - val_precision_m: 1.0884 - val_recall_m: 2.9713\n","Epoch 58/500\n","404/404 [==============================] - 3s 7ms/step - loss: 0.9709 - mean_absolute_error_labels: 0.4328 - f1_m: 1.5236 - precision_m: 1.0238 - recall_m: 2.9829 - val_loss: 1.0092 - val_mean_absolute_error_labels: 0.4452 - val_f1_m: 1.5894 - val_precision_m: 1.0849 - val_recall_m: 2.9712\n","Epoch 59/500\n","404/404 [==============================] - 3s 7ms/step - loss: 0.9709 - mean_absolute_error_labels: 0.4328 - f1_m: 1.5160 - precision_m: 1.0169 - recall_m: 2.9837 - val_loss: 1.0093 - val_mean_absolute_error_labels: 0.4444 - val_f1_m: 1.5997 - val_precision_m: 1.0944 - val_recall_m: 2.9723\n","Epoch 60/500\n","404/404 [==============================] - 3s 8ms/step - loss: 0.9712 - mean_absolute_error_labels: 0.4327 - f1_m: 1.5178 - precision_m: 1.0185 - recall_m: 2.9835 - val_loss: 1.0097 - val_mean_absolute_error_labels: 0.4440 - val_f1_m: 1.6086 - val_precision_m: 1.1026 - val_recall_m: 2.9730\n","Epoch 61/500\n","404/404 [==============================] - 3s 7ms/step - loss: 0.9706 - mean_absolute_error_labels: 0.4325 - f1_m: 1.5273 - precision_m: 1.0273 - recall_m: 2.9823 - val_loss: 1.0095 - val_mean_absolute_error_labels: 0.4446 - val_f1_m: 1.5957 - val_precision_m: 1.0907 - val_recall_m: 2.9718\n","Epoch 62/500\n","404/404 [==============================] - 3s 7ms/step - loss: 0.9706 - mean_absolute_error_labels: 0.4326 - f1_m: 1.5200 - precision_m: 1.0205 - recall_m: 2.9832 - val_loss: 1.0116 - val_mean_absolute_error_labels: 0.4448 - val_f1_m: 1.5983 - val_precision_m: 1.0931 - val_recall_m: 2.9721\n","Epoch 63/500\n","404/404 [==============================] - 3s 7ms/step - loss: 0.9708 - mean_absolute_error_labels: 0.4323 - f1_m: 1.5312 - precision_m: 1.0308 - recall_m: 2.9816 - val_loss: 1.0128 - val_mean_absolute_error_labels: 0.4449 - val_f1_m: 1.6044 - val_precision_m: 1.0989 - val_recall_m: 2.9715\n","Epoch 64/500\n","404/404 [==============================] - 3s 7ms/step - loss: 0.9705 - mean_absolute_error_labels: 0.4324 - f1_m: 1.5377 - precision_m: 1.0370 - recall_m: 2.9802 - val_loss: 1.0102 - val_mean_absolute_error_labels: 0.4444 - val_f1_m: 1.6039 - val_precision_m: 1.0983 - val_recall_m: 2.9729\n","Epoch 65/500\n","404/404 [==============================] - 3s 7ms/step - loss: 0.9706 - mean_absolute_error_labels: 0.4326 - f1_m: 1.5220 - precision_m: 1.0223 - recall_m: 2.9832 - val_loss: 1.0099 - val_mean_absolute_error_labels: 0.4439 - val_f1_m: 1.6006 - val_precision_m: 1.0948 - val_recall_m: 2.9752\n","Epoch 66/500\n","404/404 [==============================] - 3s 7ms/step - loss: 0.9705 - mean_absolute_error_labels: 0.4326 - f1_m: 1.5285 - precision_m: 1.0282 - recall_m: 2.9825 - val_loss: 1.0131 - val_mean_absolute_error_labels: 0.4440 - val_f1_m: 1.6095 - val_precision_m: 1.1034 - val_recall_m: 2.9738\n","Epoch 67/500\n","404/404 [==============================] - 3s 7ms/step - loss: 0.9703 - mean_absolute_error_labels: 0.4328 - f1_m: 1.5327 - precision_m: 1.0323 - recall_m: 2.9818 - val_loss: 1.0116 - val_mean_absolute_error_labels: 0.4444 - val_f1_m: 1.6171 - val_precision_m: 1.1107 - val_recall_m: 2.9725\n","Epoch 68/500\n","404/404 [==============================] - 3s 7ms/step - loss: 0.9703 - mean_absolute_error_labels: 0.4323 - f1_m: 1.5316 - precision_m: 1.0312 - recall_m: 2.9825 - val_loss: 1.0118 - val_mean_absolute_error_labels: 0.4443 - val_f1_m: 1.6035 - val_precision_m: 1.0978 - val_recall_m: 2.9731\n","Epoch 69/500\n","404/404 [==============================] - 3s 7ms/step - loss: 0.9708 - mean_absolute_error_labels: 0.4327 - f1_m: 1.5206 - precision_m: 1.0210 - recall_m: 2.9840 - val_loss: 1.0129 - val_mean_absolute_error_labels: 0.4452 - val_f1_m: 1.4808 - val_precision_m: 0.9845 - val_recall_m: 2.9868\n","Epoch 70/500\n","404/404 [==============================] - 3s 7ms/step - loss: 0.9699 - mean_absolute_error_labels: 0.4324 - f1_m: 1.5324 - precision_m: 1.0318 - recall_m: 2.9822 - val_loss: 1.0112 - val_mean_absolute_error_labels: 0.4451 - val_f1_m: 1.4810 - val_precision_m: 0.9845 - val_recall_m: 2.9880\n","Epoch 71/500\n","404/404 [==============================] - 3s 7ms/step - loss: 0.9707 - mean_absolute_error_labels: 0.4326 - f1_m: 1.5118 - precision_m: 1.0128 - recall_m: 2.9851 - val_loss: 1.0093 - val_mean_absolute_error_labels: 0.4442 - val_f1_m: 1.4808 - val_precision_m: 0.9842 - val_recall_m: 2.9898\n","Epoch 72/500\n","404/404 [==============================] - 3s 7ms/step - loss: 0.9702 - mean_absolute_error_labels: 0.4323 - f1_m: 1.5136 - precision_m: 1.0145 - recall_m: 2.9848 - val_loss: 1.0125 - val_mean_absolute_error_labels: 0.4458 - val_f1_m: 1.6022 - val_precision_m: 1.0967 - val_recall_m: 2.9723\n","Epoch 73/500\n","404/404 [==============================] - 3s 7ms/step - loss: 0.9703 - mean_absolute_error_labels: 0.4322 - f1_m: 1.5214 - precision_m: 1.0217 - recall_m: 2.9840 - val_loss: 1.0097 - val_mean_absolute_error_labels: 0.4445 - val_f1_m: 1.4808 - val_precision_m: 0.9840 - val_recall_m: 2.9907\n","Epoch 74/500\n","404/404 [==============================] - 3s 7ms/step - loss: 0.9702 - mean_absolute_error_labels: 0.4322 - f1_m: 1.5281 - precision_m: 1.0278 - recall_m: 2.9829 - val_loss: 1.0114 - val_mean_absolute_error_labels: 0.4444 - val_f1_m: 1.5905 - val_precision_m: 1.0857 - val_recall_m: 2.9733\n","Epoch 75/500\n","404/404 [==============================] - 3s 7ms/step - loss: 0.9698 - mean_absolute_error_labels: 0.4323 - f1_m: 1.5334 - precision_m: 1.0328 - recall_m: 2.9820 - val_loss: 1.0090 - val_mean_absolute_error_labels: 0.4451 - val_f1_m: 1.6086 - val_precision_m: 1.1030 - val_recall_m: 2.9708\n","Epoch 76/500\n","404/404 [==============================] - 3s 7ms/step - loss: 0.9702 - mean_absolute_error_labels: 0.4323 - f1_m: 1.5223 - precision_m: 1.0225 - recall_m: 2.9833 - val_loss: 1.0099 - val_mean_absolute_error_labels: 0.4448 - val_f1_m: 1.5986 - val_precision_m: 1.0932 - val_recall_m: 2.9735\n","Epoch 77/500\n","404/404 [==============================] - 3s 7ms/step - loss: 0.9700 - mean_absolute_error_labels: 0.4324 - f1_m: 1.5213 - precision_m: 1.0216 - recall_m: 2.9837 - val_loss: 1.0114 - val_mean_absolute_error_labels: 0.4448 - val_f1_m: 1.6092 - val_precision_m: 1.1033 - val_recall_m: 2.9726\n","Epoch 78/500\n","404/404 [==============================] - 3s 7ms/step - loss: 0.9701 - mean_absolute_error_labels: 0.4324 - f1_m: 1.5253 - precision_m: 1.0253 - recall_m: 2.9835 - val_loss: 1.0097 - val_mean_absolute_error_labels: 0.4437 - val_f1_m: 1.6031 - val_precision_m: 1.0974 - val_recall_m: 2.9739\n","Epoch 79/500\n","404/404 [==============================] - 3s 7ms/step - loss: 0.9694 - mean_absolute_error_labels: 0.4325 - f1_m: 1.5253 - precision_m: 1.0253 - recall_m: 2.9832 - val_loss: 1.0087 - val_mean_absolute_error_labels: 0.4439 - val_f1_m: 1.5999 - val_precision_m: 1.0941 - val_recall_m: 2.9761\n","Epoch 80/500\n","404/404 [==============================] - 3s 7ms/step - loss: 0.9700 - mean_absolute_error_labels: 0.4322 - f1_m: 1.5241 - precision_m: 1.0242 - recall_m: 2.9835 - val_loss: 1.0052 - val_mean_absolute_error_labels: 0.4435 - val_f1_m: 1.6032 - val_precision_m: 1.0973 - val_recall_m: 2.9753\n","Epoch 81/500\n","404/404 [==============================] - 3s 7ms/step - loss: 0.9698 - mean_absolute_error_labels: 0.4324 - f1_m: 1.5280 - precision_m: 1.0278 - recall_m: 2.9829 - val_loss: 1.0090 - val_mean_absolute_error_labels: 0.4448 - val_f1_m: 1.6013 - val_precision_m: 1.0958 - val_recall_m: 2.9727\n","Epoch 82/500\n","404/404 [==============================] - 3s 7ms/step - loss: 0.9699 - mean_absolute_error_labels: 0.4322 - f1_m: 1.5139 - precision_m: 1.0148 - recall_m: 2.9842 - val_loss: 1.0118 - val_mean_absolute_error_labels: 0.4441 - val_f1_m: 1.4815 - val_precision_m: 0.9847 - val_recall_m: 2.9899\n","Epoch 83/500\n","404/404 [==============================] - 3s 7ms/step - loss: 0.9700 - mean_absolute_error_labels: 0.4323 - f1_m: 1.5062 - precision_m: 1.0077 - recall_m: 2.9855 - val_loss: 1.0076 - val_mean_absolute_error_labels: 0.4443 - val_f1_m: 1.4813 - val_precision_m: 0.9844 - val_recall_m: 2.9906\n","Epoch 84/500\n","404/404 [==============================] - 3s 7ms/step - loss: 0.9696 - mean_absolute_error_labels: 0.4325 - f1_m: 1.5030 - precision_m: 1.0046 - recall_m: 2.9867 - val_loss: 1.0072 - val_mean_absolute_error_labels: 0.4431 - val_f1_m: 1.4813 - val_precision_m: 0.9842 - val_recall_m: 2.9924\n","Epoch 85/500\n","404/404 [==============================] - 3s 7ms/step - loss: 0.9699 - mean_absolute_error_labels: 0.4325 - f1_m: 1.5062 - precision_m: 1.0076 - recall_m: 2.9861 - val_loss: 1.0099 - val_mean_absolute_error_labels: 0.4441 - val_f1_m: 1.4816 - val_precision_m: 0.9847 - val_recall_m: 2.9908\n","Epoch 86/500\n","404/404 [==============================] - 3s 7ms/step - loss: 0.9696 - mean_absolute_error_labels: 0.4324 - f1_m: 1.5111 - precision_m: 1.0122 - recall_m: 2.9855 - val_loss: 1.0098 - val_mean_absolute_error_labels: 0.4437 - val_f1_m: 1.5984 - val_precision_m: 1.0930 - val_recall_m: 2.9735\n","Epoch 87/500\n","404/404 [==============================] - 3s 7ms/step - loss: 0.9696 - mean_absolute_error_labels: 0.4323 - f1_m: 1.5117 - precision_m: 1.0127 - recall_m: 2.9856 - val_loss: 1.0093 - val_mean_absolute_error_labels: 0.4440 - val_f1_m: 1.4810 - val_precision_m: 0.9841 - val_recall_m: 2.9916\n","Epoch 88/500\n","404/404 [==============================] - 3s 7ms/step - loss: 0.9695 - mean_absolute_error_labels: 0.4319 - f1_m: 1.5155 - precision_m: 1.0162 - recall_m: 2.9851 - val_loss: 1.0104 - val_mean_absolute_error_labels: 0.4449 - val_f1_m: 1.4814 - val_precision_m: 0.9848 - val_recall_m: 2.9882\n","Epoch 89/500\n","404/404 [==============================] - 3s 7ms/step - loss: 0.9696 - mean_absolute_error_labels: 0.4321 - f1_m: 1.5152 - precision_m: 1.0159 - recall_m: 2.9845 - val_loss: 1.0108 - val_mean_absolute_error_labels: 0.4453 - val_f1_m: 1.6020 - val_precision_m: 1.0968 - val_recall_m: 2.9703\n","Epoch 90/500\n","404/404 [==============================] - 3s 7ms/step - loss: 0.9692 - mean_absolute_error_labels: 0.4321 - f1_m: 1.5141 - precision_m: 1.0150 - recall_m: 2.9848 - val_loss: 1.0110 - val_mean_absolute_error_labels: 0.4446 - val_f1_m: 1.4810 - val_precision_m: 0.9843 - val_recall_m: 2.9902\n","Epoch 91/500\n","404/404 [==============================] - 3s 7ms/step - loss: 0.9697 - mean_absolute_error_labels: 0.4323 - f1_m: 1.5074 - precision_m: 1.0087 - recall_m: 2.9857 - val_loss: 1.0117 - val_mean_absolute_error_labels: 0.4443 - val_f1_m: 1.5903 - val_precision_m: 1.0851 - val_recall_m: 2.9753\n","Epoch 92/500\n","404/404 [==============================] - 3s 7ms/step - loss: 0.9692 - mean_absolute_error_labels: 0.4320 - f1_m: 1.5075 - precision_m: 1.0088 - recall_m: 2.9853 - val_loss: 1.0108 - val_mean_absolute_error_labels: 0.4433 - val_f1_m: 1.4805 - val_precision_m: 0.9837 - val_recall_m: 2.9909\n","Epoch 93/500\n","404/404 [==============================] - 3s 7ms/step - loss: 0.9690 - mean_absolute_error_labels: 0.4321 - f1_m: 1.5221 - precision_m: 1.0224 - recall_m: 2.9834 - val_loss: 1.0109 - val_mean_absolute_error_labels: 0.4439 - val_f1_m: 1.4807 - val_precision_m: 0.9841 - val_recall_m: 2.9895\n","Epoch 94/500\n","404/404 [==============================] - 3s 7ms/step - loss: 0.9693 - mean_absolute_error_labels: 0.4321 - f1_m: 1.5259 - precision_m: 1.0259 - recall_m: 2.9833 - val_loss: 1.0112 - val_mean_absolute_error_labels: 0.4435 - val_f1_m: 1.6049 - val_precision_m: 1.0991 - val_recall_m: 2.9733\n","Epoch 95/500\n","404/404 [==============================] - 3s 7ms/step - loss: 0.9692 - mean_absolute_error_labels: 0.4319 - f1_m: 1.5144 - precision_m: 1.0152 - recall_m: 2.9851 - val_loss: 1.0115 - val_mean_absolute_error_labels: 0.4437 - val_f1_m: 1.4815 - val_precision_m: 0.9846 - val_recall_m: 2.9906\n","Epoch 96/500\n","404/404 [==============================] - 3s 7ms/step - loss: 0.9693 - mean_absolute_error_labels: 0.4322 - f1_m: 1.5156 - precision_m: 1.0163 - recall_m: 2.9851 - val_loss: 1.0110 - val_mean_absolute_error_labels: 0.4446 - val_f1_m: 1.4811 - val_precision_m: 0.9843 - val_recall_m: 2.9903\n","Epoch 97/500\n","404/404 [==============================] - 3s 7ms/step - loss: 0.9691 - mean_absolute_error_labels: 0.4321 - f1_m: 1.5197 - precision_m: 1.0201 - recall_m: 2.9841 - val_loss: 1.0122 - val_mean_absolute_error_labels: 0.4452 - val_f1_m: 1.5975 - val_precision_m: 1.0921 - val_recall_m: 2.9734\n","Epoch 98/500\n","404/404 [==============================] - 3s 7ms/step - loss: 0.9696 - mean_absolute_error_labels: 0.4322 - f1_m: 1.5238 - precision_m: 1.0238 - recall_m: 2.9842 - val_loss: 1.0127 - val_mean_absolute_error_labels: 0.4447 - val_f1_m: 1.4806 - val_precision_m: 0.9840 - val_recall_m: 2.9895\n","Epoch 99/500\n","404/404 [==============================] - 3s 7ms/step - loss: 0.9695 - mean_absolute_error_labels: 0.4322 - f1_m: 1.5124 - precision_m: 1.0134 - recall_m: 2.9851 - val_loss: 1.0099 - val_mean_absolute_error_labels: 0.4437 - val_f1_m: 1.4813 - val_precision_m: 0.9844 - val_recall_m: 2.9912\n","Epoch 100/500\n","404/404 [==============================] - 3s 7ms/step - loss: 0.9692 - mean_absolute_error_labels: 0.4323 - f1_m: 1.5116 - precision_m: 1.0127 - recall_m: 2.9849 - val_loss: 1.0099 - val_mean_absolute_error_labels: 0.4437 - val_f1_m: 1.4816 - val_precision_m: 0.9848 - val_recall_m: 2.9899\n","Epoch 101/500\n","404/404 [==============================] - 3s 8ms/step - loss: 0.9695 - mean_absolute_error_labels: 0.4320 - f1_m: 1.5090 - precision_m: 1.0101 - recall_m: 2.9861 - val_loss: 1.0096 - val_mean_absolute_error_labels: 0.4436 - val_f1_m: 1.5994 - val_precision_m: 1.0938 - val_recall_m: 2.9750\n","Epoch 102/500\n","404/404 [==============================] - 3s 7ms/step - loss: 0.9695 - mean_absolute_error_labels: 0.4322 - f1_m: 1.5100 - precision_m: 1.0111 - recall_m: 2.9852 - val_loss: 1.0124 - val_mean_absolute_error_labels: 0.4441 - val_f1_m: 1.4814 - val_precision_m: 0.9846 - val_recall_m: 2.9902\n","Epoch 103/500\n","404/404 [==============================] - 3s 7ms/step - loss: 0.9690 - mean_absolute_error_labels: 0.4320 - f1_m: 1.5115 - precision_m: 1.0125 - recall_m: 2.9855 - val_loss: 1.0122 - val_mean_absolute_error_labels: 0.4446 - val_f1_m: 1.4811 - val_precision_m: 0.9844 - val_recall_m: 2.9891\n","Epoch 104/500\n","404/404 [==============================] - 3s 7ms/step - loss: 0.9689 - mean_absolute_error_labels: 0.4320 - f1_m: 1.5115 - precision_m: 1.0125 - recall_m: 2.9851 - val_loss: 1.0122 - val_mean_absolute_error_labels: 0.4442 - val_f1_m: 1.6022 - val_precision_m: 1.0963 - val_recall_m: 2.9750\n","Epoch 105/500\n"," 38/404 [=>............................] - ETA: 2s - loss: 0.9574 - mean_absolute_error_labels: 0.4291 - f1_m: 1.5028 - precision_m: 1.0046 - recall_m: 2.9850"]},{"output_type":"error","ename":"KeyboardInterrupt","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mKeyboardInterrupt\u001b[0m                         Traceback (most recent call last)","\u001b[0;32m<ipython-input-41-540a6bc459f3>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mget_ipython\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mrun_cell_magic\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'time'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m''\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'\\nfrom tensorflow.keras.callbacks import EarlyStopping, ModelCheckpoint\\n\\n\\nlearning_rate = 0.01\\nbatch_size = 200\\nnum_epochs = 500\\n\\n\\n\\ncheckpoint_path = \"/content/gdrive/My Drive/Colab Notebooks/CS6120NLP_FinalProject/Models/classifiers/training/cp1.ckpt\"\\ncheckpoint_dir = os.path.dirname(\"/content/gdrive/My Drive/Colab Notebooks/CS6120NLP_FinalProject/Models/classifiers/\")\\n\\n\\ncallbacks = [tf.keras.callbacks.EarlyStopping(\\n                        monitor=\\'val_loss\\',\\n                        mode=\\'min\\', \\n                        verbose=1, \\n                        patience = 200,\\n                        restore_best_weights = True),          \\n              ModelCheckpoint(filepath=checkpoint_path, monitor=\\'val_loss\\', save_best_only=True, mode=\\'min\\')]\\n\\n# callbacks = tf.keras.callbacks.ModelCheckpoint(filepath=checkpoint_path,\\n#                                                  save_weights_only=True,\\n#                                                  verbose=1)\\n\\nmodel = create_model()\\n\\n\\nhistory = model.fit(dataset, \\n                    epochs = num_epochs,\\n                    validation_data = val_dataset,\\n                    class_weight = class_weights,\\n                    use_multiprocessing=True,\\n                    callbacks=callbacks\\n                    )\\n\\n\\n## ...\n\u001b[0m","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/IPython/core/interactiveshell.py\u001b[0m in \u001b[0;36mrun_cell_magic\u001b[0;34m(self, magic_name, line, cell)\u001b[0m\n\u001b[1;32m   2115\u001b[0m             \u001b[0mmagic_arg_s\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mvar_expand\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mline\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mstack_depth\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   2116\u001b[0m             \u001b[0;32mwith\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mbuiltin_trap\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 2117\u001b[0;31m                 \u001b[0mresult\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mfn\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mmagic_arg_s\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcell\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   2118\u001b[0m             \u001b[0;32mreturn\u001b[0m \u001b[0mresult\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   2119\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m<decorator-gen-53>\u001b[0m in \u001b[0;36mtime\u001b[0;34m(self, line, cell, local_ns)\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/IPython/core/magic.py\u001b[0m in \u001b[0;36m<lambda>\u001b[0;34m(f, *a, **k)\u001b[0m\n\u001b[1;32m    186\u001b[0m     \u001b[0;31m# but it's overkill for just that one bit of state.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    187\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0mmagic_deco\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0marg\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 188\u001b[0;31m         \u001b[0mcall\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;32mlambda\u001b[0m \u001b[0mf\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m*\u001b[0m\u001b[0ma\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mk\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mf\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0ma\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mk\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    189\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    190\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mcallable\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0marg\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/IPython/core/magics/execution.py\u001b[0m in \u001b[0;36mtime\u001b[0;34m(self, line, cell, local_ns)\u001b[0m\n\u001b[1;32m   1191\u001b[0m         \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1192\u001b[0m             \u001b[0mst\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mclock2\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1193\u001b[0;31m             \u001b[0mexec\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mcode\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mglob\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mlocal_ns\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1194\u001b[0m             \u001b[0mend\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mclock2\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1195\u001b[0m             \u001b[0mout\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m<timed exec>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/keras/utils/traceback_utils.py\u001b[0m in \u001b[0;36merror_handler\u001b[0;34m(*args, **kwargs)\u001b[0m\n\u001b[1;32m     62\u001b[0m     \u001b[0mfiltered_tb\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     63\u001b[0m     \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 64\u001b[0;31m       \u001b[0;32mreturn\u001b[0m \u001b[0mfn\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     65\u001b[0m     \u001b[0;32mexcept\u001b[0m \u001b[0mException\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0me\u001b[0m\u001b[0;34m:\u001b[0m  \u001b[0;31m# pylint: disable=broad-except\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     66\u001b[0m       \u001b[0mfiltered_tb\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0m_process_traceback_frames\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0me\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m__traceback__\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/keras/engine/training.py\u001b[0m in \u001b[0;36mfit\u001b[0;34m(self, x, y, batch_size, epochs, verbose, callbacks, validation_split, validation_data, shuffle, class_weight, sample_weight, initial_epoch, steps_per_epoch, validation_steps, validation_batch_size, validation_freq, max_queue_size, workers, use_multiprocessing)\u001b[0m\n\u001b[1;32m   1382\u001b[0m                 _r=1):\n\u001b[1;32m   1383\u001b[0m               \u001b[0mcallbacks\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mon_train_batch_begin\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mstep\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1384\u001b[0;31m               \u001b[0mtmp_logs\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mtrain_function\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0miterator\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1385\u001b[0m               \u001b[0;32mif\u001b[0m \u001b[0mdata_handler\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mshould_sync\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1386\u001b[0m                 \u001b[0mcontext\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0masync_wait\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/tensorflow/python/util/traceback_utils.py\u001b[0m in \u001b[0;36merror_handler\u001b[0;34m(*args, **kwargs)\u001b[0m\n\u001b[1;32m    148\u001b[0m     \u001b[0mfiltered_tb\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    149\u001b[0m     \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 150\u001b[0;31m       \u001b[0;32mreturn\u001b[0m \u001b[0mfn\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    151\u001b[0m     \u001b[0;32mexcept\u001b[0m \u001b[0mException\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0me\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    152\u001b[0m       \u001b[0mfiltered_tb\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0m_process_traceback_frames\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0me\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m__traceback__\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/tensorflow/python/eager/def_function.py\u001b[0m in \u001b[0;36m__call__\u001b[0;34m(self, *args, **kwds)\u001b[0m\n\u001b[1;32m    913\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    914\u001b[0m       \u001b[0;32mwith\u001b[0m \u001b[0mOptionalXlaContext\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_jit_compile\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 915\u001b[0;31m         \u001b[0mresult\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_call\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwds\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    916\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    917\u001b[0m       \u001b[0mnew_tracing_count\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mexperimental_get_tracing_count\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/tensorflow/python/eager/def_function.py\u001b[0m in \u001b[0;36m_call\u001b[0;34m(self, *args, **kwds)\u001b[0m\n\u001b[1;32m    945\u001b[0m       \u001b[0;31m# In this case we have created variables on the first call, so we run the\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    946\u001b[0m       \u001b[0;31m# defunned version which is guaranteed to never create variables.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 947\u001b[0;31m       \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_stateless_fn\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwds\u001b[0m\u001b[0;34m)\u001b[0m  \u001b[0;31m# pylint: disable=not-callable\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    948\u001b[0m     \u001b[0;32melif\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_stateful_fn\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    949\u001b[0m       \u001b[0;31m# Release the lock early so that multiple threads can perform the call\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/tensorflow/python/eager/function.py\u001b[0m in \u001b[0;36m__call__\u001b[0;34m(self, *args, **kwargs)\u001b[0m\n\u001b[1;32m   2953\u001b[0m     \u001b[0;32mwith\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_lock\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   2954\u001b[0m       (graph_function,\n\u001b[0;32m-> 2955\u001b[0;31m        filtered_flat_args) = self._maybe_define_function(args, kwargs)\n\u001b[0m\u001b[1;32m   2956\u001b[0m     return graph_function._call_flat(\n\u001b[1;32m   2957\u001b[0m         filtered_flat_args, captured_inputs=graph_function.captured_inputs)  # pylint: disable=protected-access\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/tensorflow/python/eager/function.py\u001b[0m in \u001b[0;36m_maybe_define_function\u001b[0;34m(self, args, kwargs)\u001b[0m\n\u001b[1;32m   3261\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   3262\u001b[0m     graph_function = self._function_cache.lookup(cache_key,\n\u001b[0;32m-> 3263\u001b[0;31m                                                  USE_FUNCTION_SUBTYPING)\n\u001b[0m\u001b[1;32m   3264\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0mgraph_function\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   3265\u001b[0m       \u001b[0;32mreturn\u001b[0m \u001b[0mgraph_function\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mfiltered_flat_args\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/tensorflow/python/eager/function_cache.py\u001b[0m in \u001b[0;36mlookup\u001b[0;34m(self, key, use_function_subtyping)\u001b[0m\n\u001b[1;32m    157\u001b[0m       \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_primary\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mget\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkey\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    158\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 159\u001b[0;31m     \u001b[0;32mif\u001b[0m \u001b[0mkey\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_primary\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    160\u001b[0m       \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_primary\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mkey\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    161\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/tensorflow/python/eager/function_cache.py\u001b[0m in \u001b[0;36m__eq__\u001b[0;34m(self, other)\u001b[0m\n\u001b[1;32m    104\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    105\u001b[0m     return (self.call_context == other.call_context and\n\u001b[0;32m--> 106\u001b[0;31m             self.function_signature == other.function_signature)\n\u001b[0m\u001b[1;32m    107\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    108\u001b[0m   \u001b[0;32mdef\u001b[0m \u001b[0m__repr__\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m->\u001b[0m \u001b[0mstr\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/tensorflow/python/eager/function_trace_type.py\u001b[0m in \u001b[0;36m__eq__\u001b[0;34m(self, other)\u001b[0m\n\u001b[1;32m    206\u001b[0m       \u001b[0;32mreturn\u001b[0m \u001b[0;32mFalse\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    207\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 208\u001b[0;31m     \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcomponents\u001b[0m \u001b[0;34m==\u001b[0m \u001b[0mother\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcomponents\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    209\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    210\u001b[0m   \u001b[0;32mdef\u001b[0m \u001b[0m__hash__\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m->\u001b[0m \u001b[0mint\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/tensorflow/python/eager/function_trace_type.py\u001b[0m in \u001b[0;36m__eq__\u001b[0;34m(self, other)\u001b[0m\n\u001b[1;32m    206\u001b[0m       \u001b[0;32mreturn\u001b[0m \u001b[0;32mFalse\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    207\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 208\u001b[0;31m     \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcomponents\u001b[0m \u001b[0;34m==\u001b[0m \u001b[0mother\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcomponents\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    209\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    210\u001b[0m   \u001b[0;32mdef\u001b[0m \u001b[0m__hash__\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m->\u001b[0m \u001b[0mint\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/tensorflow/python/data/ops/iterator_ops.py\u001b[0m in \u001b[0;36m__eq__\u001b[0;34m(self, other)\u001b[0m\n\u001b[1;32m    693\u001b[0m     \u001b[0;32mreturn\u001b[0m \u001b[0mhash\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_components\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    694\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 695\u001b[0;31m   \u001b[0;32mdef\u001b[0m \u001b[0m__eq__\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mother\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m->\u001b[0m \u001b[0mbool\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    696\u001b[0m     return isinstance(\n\u001b[1;32m    697\u001b[0m         other, IteratorType) and self._components == other._components\n","\u001b[0;31mKeyboardInterrupt\u001b[0m: "]}]},{"cell_type":"code","source":[""],"metadata":{"id":"BkWST9yp-sG3"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[""],"metadata":{"id":"uk6jSeGM-sht"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[""],"metadata":{"id":"H14Pdvud-sqq"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[""],"metadata":{"id":"AuANPuay-syx"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[""],"metadata":{"id":"Wg3qEFMO-s3a"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[""],"metadata":{"id":"vVhnwd-F-s7B"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["from sklearn.metrics import precision_score, f1_score, classification_report\n","from sklearn.metrics import ConfusionMatrixDisplay\n","from sklearn.metrics import confusion_matrix\n","import matplotlib.pyplot as plt\n","import numpy as np\n","\n","from sklearn.metrics import mean_absolute_error\n","\n","\n","\n","### Update the label from 0-3 back to original ratings 2-5\n","def update_labels(label):\n","  return label+2\n","\n","\n","## Get the test dataset\n","test_dataset = tf.data.Dataset.from_tensor_slices(\n","  (tf.cast(np.array(X_test_indices)[..., tf.newaxis], tf.float32),\n","   tf.cast(np.array(y_test), tf.int64)))\n","\n","test_dataset = test_dataset.shuffle(50).batch(batch_size)\n","\n","checkpoint_path = \"/content/gdrive/My Drive/Colab Notebooks/CS6120NLP_FinalProject/Models/classifiers/training/cp1.ckpt\"\n","checkpoint_dir = os.path.dirname(\"/content/gdrive/My Drive/Colab Notebooks/CS6120NLP_FinalProject/Models/classifiers/\")\n","\n","## Create model instance\n","model = create_model_with_F1()\n","\n","# Loads the weights\n","model.load_weights(checkpoint_path)\n","\n","## Evaluate the model on test dataset\n","model.evaluate(test_dataset)\n","\n","# Note that these are ordinal (cumulative) logits, not probabilities or regular logits.\n","ordinal_logits = model.predict(test_dataset)\n","\n","# Convert from logits to label probabilities. This is initially a tensorflow tensor.\n","tensor_probs = coral.ordinal_softmax(ordinal_logits)\n","\n","# Convert the tensor into a pandas dataframe.\n","probs_df = pd.DataFrame(tensor_probs.numpy())\n","\n","predictions = pd.DataFrame()\n","predictions[\"predicted_label\"]  = np.argmax(tensor_probs.numpy(), axis = 1)\n","predictions[\"true_label\"]       = y_test\n","\n","predictions[\"predicted_label\"]  = predictions[\"predicted_label\"].apply(update_labels)\n","predictions[\"true_label\"]       = predictions[\"true_label\"].apply(update_labels)\n","\n","\n","y_pred = predictions[\"predicted_label\"].to_numpy()\n","y_true = predictions[\"true_label\"].to_numpy()\n","labels =  ['Class 1-2', 'Class 3', 'Class 4', 'Class 5']\n","\n","cm = confusion_matrix(y_true, y_pred)\n","\n","disp = ConfusionMatrixDisplay(confusion_matrix=cm, display_labels=labels)\n","\n","disp.plot(cmap=plt.cm.Blues)\n","plt.show()\n","\n","\n","predictions = pd.DataFrame()\n","predictions[\"predicted_label\"]  = np.argmax(tensor_probs.numpy(), axis = 1)\n","predictions[\"true_label\"]       = y_test\n","\n","# y_pred = predictions[\"predicted_label\"].to_numpy()\n","# y_true = predictions[\"true_label\"].to_numpy()\n","\n","target_names = ['class 2', 'class 3', 'class 4','class 5']\n","print(\"\\n\\tMean Absolute Error: \",mean_absolute_error(y_true,y_pred),\"\\n\")\n","print(classification_report(y_true, y_pred, target_names=target_names))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":677},"id":"xOQoiiVCvdZB","executionInfo":{"status":"ok","timestamp":1651595266272,"user_tz":240,"elapsed":4898,"user":{"displayName":"Lakshyana K C","userId":"03123992237616606989"}},"outputId":"9cef9788-af79-412a-f011-a2b4468b33ba"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["225/225 [==============================] - 1s 2ms/step - loss: 0.9727 - mean_absolute_error_labels: 0.4322 - f1_m: 1.4852 - precision_m: 0.9870 - recall_m: 2.9991\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 2 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}},{"output_type":"stream","name":"stdout","text":["\n","\tMean Absolute Error:  0.4320153288574654 \n","\n","              precision    recall  f1-score   support\n","\n","     class 2       0.00      0.00      0.00      1098\n","     class 3       0.00      0.00      0.00      3299\n","     class 4       0.00      0.00      0.00     19193\n","     class 5       0.65      1.00      0.79     43734\n","\n","    accuracy                           0.65     67324\n","   macro avg       0.16      0.25      0.20     67324\n","weighted avg       0.42      0.65      0.51     67324\n","\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/sklearn/metrics/_classification.py:1318: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.7/dist-packages/sklearn/metrics/_classification.py:1318: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.7/dist-packages/sklearn/metrics/_classification.py:1318: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n"]}]},{"cell_type":"code","source":["%%time\n","\n","from tensorflow.keras.callbacks import EarlyStopping, ModelCheckpoint\n","\n","\n","learning_rate = 0.01\n","batch_size = 200\n","num_epochs = 500\n","\n","\n","checkpoint_path = \"/content/gdrive/My Drive/Colab Notebooks/CS6120NLP_FinalProject/Models/classifiers/training/cp_oneMetric.ckpt\"\n","checkpoint_dir = os.path.dirname(\"/content/gdrive/My Drive/Colab Notebooks/CS6120NLP_FinalProject/Models/classifiers/\")\n","\n","\n","callbacks = [tf.keras.callbacks.EarlyStopping(\n","                        monitor='val_loss',\n","                        mode='min', \n","                        verbose=1, \n","                        patience = 50,\n","                        restore_best_weights = True),          \n","              ModelCheckpoint(filepath=checkpoint_path, \n","                              # monitor='val_loss', \n","                              save_best_only=True\n","                              # , \n","                              # mode='min'\n","                              )]\n","\n","# callbacks = tf.keras.callbacks.ModelCheckpoint(filepath=checkpoint_path,\n","#                                                  save_weights_only=True,\n","#                                                  verbose=1)\n","\n","\n","model = create_model()\n","\n","# Loads the weights\n","model.load_weights(checkpoint_path)\n","\n","\n","history = model.fit(dataset, \n","                    epochs = num_epochs,\n","                    validation_data = val_dataset,\n","                    class_weight = class_weights,\n","                    use_multiprocessing=True,\n","                    callbacks=callbacks\n","                    )\n","\n","\n","## Save the history\n","np.save('/content/gdrive/My Drive/Colab Notebooks/CS6120NLP_FinalProject/Models/classifiers/training/model_one_metric_history.npy',history.history)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Rll4U4Y1WkXF","executionInfo":{"status":"ok","timestamp":1651557244996,"user_tz":240,"elapsed":897256,"user":{"displayName":"Lakshyana","userId":"14846287915491486779"}},"outputId":"3375582a-43d6-4197-c153-62af89d6436a"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Epoch 1/500\n","1005/1010 [============================>.] - ETA: 0s - loss: 0.9887 - mean_absolute_error_labels: 0.4348INFO:tensorflow:Assets written to: /content/gdrive/My Drive/Colab Notebooks/CS6120NLP_FinalProject/Models/classifiers/training/cp_oneMetric.ckpt/assets\n","1010/1010 [==============================] - 104s 102ms/step - loss: 0.9881 - mean_absolute_error_labels: 0.4346 - val_loss: 0.9976 - val_mean_absolute_error_labels: 0.4421\n","Epoch 2/500\n","1010/1010 [==============================] - ETA: 0s - loss: 0.9882 - mean_absolute_error_labels: 0.4346INFO:tensorflow:Assets written to: /content/gdrive/My Drive/Colab Notebooks/CS6120NLP_FinalProject/Models/classifiers/training/cp_oneMetric.ckpt/assets\n","1010/1010 [==============================] - 94s 93ms/step - loss: 0.9882 - mean_absolute_error_labels: 0.4346 - val_loss: 0.9976 - val_mean_absolute_error_labels: 0.4414\n","Epoch 3/500\n","1003/1010 [============================>.] - ETA: 0s - loss: 0.9888 - mean_absolute_error_labels: 0.4348INFO:tensorflow:Assets written to: /content/gdrive/My Drive/Colab Notebooks/CS6120NLP_FinalProject/Models/classifiers/training/cp_oneMetric.ckpt/assets\n","1010/1010 [==============================] - 92s 91ms/step - loss: 0.9881 - mean_absolute_error_labels: 0.4346 - val_loss: 0.9976 - val_mean_absolute_error_labels: 0.4423\n","Epoch 4/500\n","1006/1010 [============================>.] - ETA: 0s - loss: 0.9885 - mean_absolute_error_labels: 0.4347INFO:tensorflow:Assets written to: /content/gdrive/My Drive/Colab Notebooks/CS6120NLP_FinalProject/Models/classifiers/training/cp_oneMetric.ckpt/assets\n","1010/1010 [==============================] - 93s 92ms/step - loss: 0.9881 - mean_absolute_error_labels: 0.4345 - val_loss: 0.9976 - val_mean_absolute_error_labels: 0.4427\n","Epoch 5/500\n","1010/1010 [==============================] - 5s 5ms/step - loss: 0.9880 - mean_absolute_error_labels: 0.4346 - val_loss: 0.9983 - val_mean_absolute_error_labels: 0.4421\n","Epoch 6/500\n","1010/1010 [==============================] - 5s 5ms/step - loss: 0.9881 - mean_absolute_error_labels: 0.4346 - val_loss: 0.9978 - val_mean_absolute_error_labels: 0.4418\n","Epoch 7/500\n","1010/1010 [==============================] - 5s 5ms/step - loss: 0.9881 - mean_absolute_error_labels: 0.4345 - val_loss: 0.9977 - val_mean_absolute_error_labels: 0.4416\n","Epoch 8/500\n","1010/1010 [==============================] - 5s 5ms/step - loss: 0.9881 - mean_absolute_error_labels: 0.4346 - val_loss: 0.9980 - val_mean_absolute_error_labels: 0.4425\n","Epoch 9/500\n","1010/1010 [==============================] - 5s 5ms/step - loss: 0.9880 - mean_absolute_error_labels: 0.4345 - val_loss: 0.9977 - val_mean_absolute_error_labels: 0.4413\n","Epoch 10/500\n","1010/1010 [==============================] - 5s 5ms/step - loss: 0.9880 - mean_absolute_error_labels: 0.4346 - val_loss: 0.9981 - val_mean_absolute_error_labels: 0.4419\n","Epoch 11/500\n","1010/1010 [==============================] - 5s 5ms/step - loss: 0.9880 - mean_absolute_error_labels: 0.4345 - val_loss: 0.9977 - val_mean_absolute_error_labels: 0.4421\n","Epoch 12/500\n","1010/1010 [==============================] - 5s 5ms/step - loss: 0.9880 - mean_absolute_error_labels: 0.4345 - val_loss: 0.9977 - val_mean_absolute_error_labels: 0.4416\n","Epoch 13/500\n","1010/1010 [==============================] - 5s 5ms/step - loss: 0.9879 - mean_absolute_error_labels: 0.4345 - val_loss: 0.9976 - val_mean_absolute_error_labels: 0.4424\n","Epoch 14/500\n","1010/1010 [==============================] - 5s 5ms/step - loss: 0.9878 - mean_absolute_error_labels: 0.4344 - val_loss: 0.9977 - val_mean_absolute_error_labels: 0.4424\n","Epoch 15/500\n","1010/1010 [==============================] - 6s 5ms/step - loss: 0.9878 - mean_absolute_error_labels: 0.4344 - val_loss: 0.9977 - val_mean_absolute_error_labels: 0.4436\n","Epoch 16/500\n","1010/1010 [==============================] - 6s 5ms/step - loss: 0.9879 - mean_absolute_error_labels: 0.4345 - val_loss: 0.9977 - val_mean_absolute_error_labels: 0.4418\n","Epoch 17/500\n","1010/1010 [==============================] - 6s 6ms/step - loss: 0.9880 - mean_absolute_error_labels: 0.4346 - val_loss: 0.9977 - val_mean_absolute_error_labels: 0.4418\n","Epoch 18/500\n","1010/1010 [==============================] - 6s 5ms/step - loss: 0.9879 - mean_absolute_error_labels: 0.4345 - val_loss: 0.9977 - val_mean_absolute_error_labels: 0.4413\n","Epoch 19/500\n","1010/1010 [==============================] - 6s 6ms/step - loss: 0.9880 - mean_absolute_error_labels: 0.4345 - val_loss: 0.9979 - val_mean_absolute_error_labels: 0.4414\n","Epoch 20/500\n","1010/1010 [==============================] - 6s 6ms/step - loss: 0.9879 - mean_absolute_error_labels: 0.4345 - val_loss: 0.9977 - val_mean_absolute_error_labels: 0.4410\n","Epoch 21/500\n","1010/1010 [==============================] - 6s 5ms/step - loss: 0.9880 - mean_absolute_error_labels: 0.4345 - val_loss: 0.9977 - val_mean_absolute_error_labels: 0.4416\n","Epoch 22/500\n","1010/1010 [==============================] - 6s 6ms/step - loss: 0.9880 - mean_absolute_error_labels: 0.4345 - val_loss: 0.9977 - val_mean_absolute_error_labels: 0.4416\n","Epoch 23/500\n","1010/1010 [==============================] - 5s 5ms/step - loss: 0.9880 - mean_absolute_error_labels: 0.4345 - val_loss: 0.9977 - val_mean_absolute_error_labels: 0.4408\n","Epoch 24/500\n","1010/1010 [==============================] - 5s 5ms/step - loss: 0.9878 - mean_absolute_error_labels: 0.4344 - val_loss: 0.9977 - val_mean_absolute_error_labels: 0.4433\n","Epoch 25/500\n","1010/1010 [==============================] - 5s 5ms/step - loss: 0.9878 - mean_absolute_error_labels: 0.4345 - val_loss: 0.9977 - val_mean_absolute_error_labels: 0.4413\n","Epoch 26/500\n","1010/1010 [==============================] - 6s 6ms/step - loss: 0.9879 - mean_absolute_error_labels: 0.4345 - val_loss: 0.9978 - val_mean_absolute_error_labels: 0.4421\n","Epoch 27/500\n","1010/1010 [==============================] - 6s 6ms/step - loss: 0.9878 - mean_absolute_error_labels: 0.4344 - val_loss: 0.9977 - val_mean_absolute_error_labels: 0.4419\n","Epoch 28/500\n","1010/1010 [==============================] - 6s 5ms/step - loss: 0.9876 - mean_absolute_error_labels: 0.4344 - val_loss: 0.9977 - val_mean_absolute_error_labels: 0.4414\n","Epoch 29/500\n","1010/1010 [==============================] - 6s 5ms/step - loss: 0.9877 - mean_absolute_error_labels: 0.4345 - val_loss: 0.9979 - val_mean_absolute_error_labels: 0.4425\n","Epoch 30/500\n","1010/1010 [==============================] - 5s 5ms/step - loss: 0.9878 - mean_absolute_error_labels: 0.4344 - val_loss: 0.9977 - val_mean_absolute_error_labels: 0.4422\n","Epoch 31/500\n","1010/1010 [==============================] - 5s 5ms/step - loss: 0.9877 - mean_absolute_error_labels: 0.4344 - val_loss: 0.9977 - val_mean_absolute_error_labels: 0.4426\n","Epoch 32/500\n","1010/1010 [==============================] - 6s 5ms/step - loss: 0.9876 - mean_absolute_error_labels: 0.4344 - val_loss: 0.9979 - val_mean_absolute_error_labels: 0.4419\n","Epoch 33/500\n","1010/1010 [==============================] - 6s 5ms/step - loss: 0.9875 - mean_absolute_error_labels: 0.4344 - val_loss: 0.9977 - val_mean_absolute_error_labels: 0.4411\n","Epoch 34/500\n","1010/1010 [==============================] - 5s 5ms/step - loss: 0.9875 - mean_absolute_error_labels: 0.4344 - val_loss: 0.9981 - val_mean_absolute_error_labels: 0.4425\n","Epoch 35/500\n","1010/1010 [==============================] - 5s 5ms/step - loss: 0.9876 - mean_absolute_error_labels: 0.4343 - val_loss: 0.9985 - val_mean_absolute_error_labels: 0.4422\n","Epoch 36/500\n","1010/1010 [==============================] - 6s 5ms/step - loss: 0.9875 - mean_absolute_error_labels: 0.4344 - val_loss: 0.9979 - val_mean_absolute_error_labels: 0.4419\n","Epoch 37/500\n","1010/1010 [==============================] - 5s 5ms/step - loss: 0.9875 - mean_absolute_error_labels: 0.4343 - val_loss: 0.9984 - val_mean_absolute_error_labels: 0.4410\n","Epoch 38/500\n","1010/1010 [==============================] - 5s 5ms/step - loss: 0.9874 - mean_absolute_error_labels: 0.4343 - val_loss: 0.9982 - val_mean_absolute_error_labels: 0.4415\n","Epoch 39/500\n","1010/1010 [==============================] - 5s 5ms/step - loss: 0.9873 - mean_absolute_error_labels: 0.4343 - val_loss: 0.9982 - val_mean_absolute_error_labels: 0.4423\n","Epoch 40/500\n","1010/1010 [==============================] - 5s 5ms/step - loss: 0.9875 - mean_absolute_error_labels: 0.4344 - val_loss: 0.9979 - val_mean_absolute_error_labels: 0.4418\n","Epoch 41/500\n","1010/1010 [==============================] - 5s 5ms/step - loss: 0.9872 - mean_absolute_error_labels: 0.4343 - val_loss: 0.9983 - val_mean_absolute_error_labels: 0.4421\n","Epoch 42/500\n","1010/1010 [==============================] - 6s 6ms/step - loss: 0.9872 - mean_absolute_error_labels: 0.4343 - val_loss: 0.9980 - val_mean_absolute_error_labels: 0.4421\n","Epoch 43/500\n","1010/1010 [==============================] - 5s 5ms/step - loss: 0.9871 - mean_absolute_error_labels: 0.4342 - val_loss: 0.9980 - val_mean_absolute_error_labels: 0.4417\n","Epoch 44/500\n","1010/1010 [==============================] - 6s 5ms/step - loss: 0.9872 - mean_absolute_error_labels: 0.4344 - val_loss: 0.9984 - val_mean_absolute_error_labels: 0.4427\n","Epoch 45/500\n","1010/1010 [==============================] - 6s 5ms/step - loss: 0.9873 - mean_absolute_error_labels: 0.4344 - val_loss: 0.9979 - val_mean_absolute_error_labels: 0.4423\n","Epoch 46/500\n","1010/1010 [==============================] - 6s 5ms/step - loss: 0.9870 - mean_absolute_error_labels: 0.4342 - val_loss: 0.9978 - val_mean_absolute_error_labels: 0.4414\n","Epoch 47/500\n","1010/1010 [==============================] - 6s 6ms/step - loss: 0.9871 - mean_absolute_error_labels: 0.4343 - val_loss: 0.9978 - val_mean_absolute_error_labels: 0.4429\n","Epoch 48/500\n","1010/1010 [==============================] - 5s 5ms/step - loss: 0.9870 - mean_absolute_error_labels: 0.4343 - val_loss: 0.9977 - val_mean_absolute_error_labels: 0.4421\n","Epoch 49/500\n","1010/1010 [==============================] - 5s 5ms/step - loss: 0.9869 - mean_absolute_error_labels: 0.4342 - val_loss: 0.9979 - val_mean_absolute_error_labels: 0.4420\n","Epoch 50/500\n","1010/1010 [==============================] - 6s 5ms/step - loss: 0.9870 - mean_absolute_error_labels: 0.4343 - val_loss: 0.9979 - val_mean_absolute_error_labels: 0.4418\n","Epoch 51/500\n","1010/1010 [==============================] - 5s 5ms/step - loss: 0.9869 - mean_absolute_error_labels: 0.4343 - val_loss: 0.9979 - val_mean_absolute_error_labels: 0.4419\n","Epoch 52/500\n","1010/1010 [==============================] - 5s 5ms/step - loss: 0.9870 - mean_absolute_error_labels: 0.4343 - val_loss: 0.9980 - val_mean_absolute_error_labels: 0.4410\n","Epoch 53/500\n","1010/1010 [==============================] - 6s 6ms/step - loss: 0.9870 - mean_absolute_error_labels: 0.4343 - val_loss: 0.9977 - val_mean_absolute_error_labels: 0.4410\n","Epoch 54/500\n","1010/1010 [==============================] - ETA: 0s - loss: 0.9867 - mean_absolute_error_labels: 0.4343Restoring model weights from the end of the best epoch: 4.\n","1010/1010 [==============================] - 6s 6ms/step - loss: 0.9867 - mean_absolute_error_labels: 0.4343 - val_loss: 0.9980 - val_mean_absolute_error_labels: 0.4417\n","Epoch 54: early stopping\n","CPU times: user 10min 31s, sys: 1min 54s, total: 12min 25s\n","Wall time: 14min 57s\n"]}]},{"cell_type":"code","source":["model.evaluate(test_dataset)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"GUJOiZfbf4ZS","executionInfo":{"status":"ok","timestamp":1651557505496,"user_tz":240,"elapsed":2892,"user":{"displayName":"Lakshyana","userId":"14846287915491486779"}},"outputId":"c5b7b7ff-ae31-4d69-8e03-244ba63e7a33"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["270/270 [==============================] - 2s 6ms/step - loss: 0.9661 - mean_absolute_error_labels: 0.4296\n"]},{"output_type":"execute_result","data":{"text/plain":["[0.9660837650299072, 0.42959195375442505]"]},"metadata":{},"execution_count":49}]}],"metadata":{"colab":{"collapsed_sections":["na2otCwqvaw_","nnOSXwTYOWId"],"name":"Feedforwad Ordinal Classification Model","provenance":[{"file_id":"1NANwMIwEbSJVPx86TT54REZ9kAOCZG13","timestamp":1650297476074}]},"kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"},"accelerator":"GPU"},"nbformat":4,"nbformat_minor":0}